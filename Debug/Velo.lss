
Velo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000018e0  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000052  00800060  000018e0  00001994  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000061  008000b2  008000b2  000019e6  2**0
                  ALLOC
  3 .eeprom       00000005  00810000  00810000  000019e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  000019eb  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001a1c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000218  00000000  00000000  00001a58  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002100  00000000  00000000  00001c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000af8  00000000  00000000  00003d70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000119e  00000000  00000000  00004868  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000450  00000000  00000000  00005a08  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000007a4  00000000  00000000  00005e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000015a1  00000000  00000000  000065fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000128  00000000  00000000  00007b9d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	16 c3       	rjmp	.+1580   	; 0x62e <__ctors_end>
       2:	30 c3       	rjmp	.+1632   	; 0x664 <__bad_interrupt>
       4:	2f c3       	rjmp	.+1630   	; 0x664 <__bad_interrupt>
       6:	2e c3       	rjmp	.+1628   	; 0x664 <__bad_interrupt>
       8:	2d c3       	rjmp	.+1626   	; 0x664 <__bad_interrupt>
       a:	2c c3       	rjmp	.+1624   	; 0x664 <__bad_interrupt>
       c:	2b c3       	rjmp	.+1622   	; 0x664 <__bad_interrupt>
       e:	2a c3       	rjmp	.+1620   	; 0x664 <__bad_interrupt>
      10:	29 c3       	rjmp	.+1618   	; 0x664 <__bad_interrupt>
      12:	28 c3       	rjmp	.+1616   	; 0x664 <__bad_interrupt>
      14:	36 c3       	rjmp	.+1644   	; 0x682 <__vector_10>
      16:	26 c3       	rjmp	.+1612   	; 0x664 <__bad_interrupt>
      18:	25 c3       	rjmp	.+1610   	; 0x664 <__bad_interrupt>
      1a:	24 c3       	rjmp	.+1608   	; 0x664 <__bad_interrupt>
      1c:	23 c3       	rjmp	.+1606   	; 0x664 <__bad_interrupt>

0000001e <__trampolines_end>:
      1e:	ae d5       	rcall	.+2908   	; 0xb7c <calc_avg_speed+0xe4>
      20:	f0 a8       	ldd	r15, Z+48	; 0x30
      22:	3f d3       	rcall	.+1662   	; 0x6a2 <__vector_10+0x20>
      24:	00 40       	sbci	r16, 0x00	; 0
      26:	8d 14       	cp	r8, r13
      28:	20 00       	.word	0x0020	; ????
      2a:	a1 c8       	rjmp	.-3774   	; 0xfffff16e <__eeprom_end+0xff7ef169>
      2c:	da 12       	cpse	r13, r26
      2e:	81 3f       	cpi	r24, 0xF1	; 241
      30:	d9 22       	and	r13, r25
      32:	db 20       	and	r13, r11
      34:	a4 a6       	std	Z+44, r10	; 0x2c
      36:	2e af       	std	Y+62, r18	; 0x3e
      38:	22 00       	.word	0x0022	; ????
      3a:	3f 21       	and	r19, r15
      3c:	00 7f       	andi	r16, 0xF0	; 240

0000003e <ssd1306xled_font8x16data>:
	...
      4e:	00 00 00 f8 00 00 00 00 00 00 00 33 30 00 00 00     ...........30...
      5e:	00 10 0c 06 10 0c 06 00 00 00 00 00 00 00 00 00     ................
      6e:	40 c0 78 40 c0 78 40 00 04 3f 04 04 3f 04 04 00     @.x@.x@..?..?...
      7e:	00 70 88 fc 08 30 00 00 00 18 20 ff 21 1e 00 00     .p...0.... .!...
      8e:	f0 08 f0 00 e0 18 00 00 00 21 1c 03 1e 21 1e 00     .........!...!..
      9e:	00 f0 08 88 70 00 00 00 1e 21 23 24 19 27 21 10     ....p....!#$.'!.
      ae:	10 16 0e 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
      be:	00 00 00 e0 18 04 02 00 00 00 00 07 18 20 40 00     ............. @.
      ce:	00 02 04 18 e0 00 00 00 00 40 20 18 07 00 00 00     .........@ .....
      de:	40 40 80 f0 80 40 40 00 02 02 01 0f 01 02 02 00     @@...@@.........
      ee:	00 00 00 f0 00 00 00 00 01 01 01 1f 01 01 01 00     ................
	...
     106:	80 b0 70 00 00 00 00 00 00 00 00 00 00 00 00 00     ..p.............
     116:	00 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
     126:	00 30 30 00 00 00 00 00 00 00 00 00 80 60 18 04     .00..........`..
     136:	00 60 18 06 01 00 00 00 00 e0 10 08 08 10 e0 00     .`..............
     146:	00 0f 10 20 20 10 0f 00 00 10 10 f8 00 00 00 00     ...  ...........
     156:	00 20 20 3f 20 20 00 00 00 70 08 08 08 88 70 00     .  ?  ...p....p.
     166:	00 30 28 24 22 21 30 00 00 30 08 88 88 48 30 00     .0($"!0..0...H0.
     176:	00 18 20 20 20 11 0e 00 00 00 c0 20 10 f8 00 00     ..   ...... ....
     186:	00 07 04 24 24 3f 24 00 00 f8 08 88 88 08 08 00     ...$$?$.........
     196:	00 19 21 20 20 11 0e 00 00 e0 10 88 88 18 00 00     ..!  ...........
     1a6:	00 0f 11 20 20 11 0e 00 00 38 08 08 c8 38 08 00     ...  ....8...8..
     1b6:	00 00 00 3f 00 00 00 00 00 70 88 08 08 88 70 00     ...?.....p....p.
     1c6:	00 1c 22 21 21 22 1c 00 00 e0 10 08 08 10 e0 00     .."!!"..........
     1d6:	00 00 31 22 22 11 0f 00 00 00 00 c0 c0 00 00 00     ..1""...........
     1e6:	00 00 00 30 30 00 00 00 00 00 00 80 00 00 00 00     ...00...........
     1f6:	00 00 80 60 00 00 00 00 00 00 80 40 20 10 08 00     ...`.......@ ...
     206:	00 01 02 04 08 10 20 00 40 40 40 40 40 40 40 00     ...... .@@@@@@@.
     216:	04 04 04 04 04 04 04 00 00 08 10 20 40 80 00 00     ........... @...
     226:	00 20 10 08 04 02 01 00 00 70 48 08 08 08 f0 00     . .......pH.....
     236:	00 00 00 30 36 01 00 00 c0 30 c8 28 e8 10 e0 00     ...06....0.(....
     246:	07 18 27 24 23 14 0b 00 00 00 c0 38 e0 00 00 00     ..'$#......8....
     256:	20 3c 23 02 02 27 38 20 08 f8 88 88 88 70 00 00      <#..'8 .....p..
     266:	20 3f 20 20 20 11 0e 00 c0 30 08 08 08 08 38 00      ?   ....0....8.
     276:	07 18 20 20 20 10 08 00 08 f8 08 08 08 10 e0 00     ..   ...........
     286:	20 3f 20 20 20 10 0f 00 08 f8 88 88 e8 08 10 00      ?   ...........
     296:	20 3f 20 20 23 20 18 00 08 f8 88 88 e8 08 10 00      ?  # ..........
     2a6:	20 3f 20 00 03 00 00 00 c0 30 08 08 08 38 00 00      ? ......0...8..
     2b6:	07 18 20 20 22 1e 02 00 08 f8 08 00 00 08 f8 08     ..  "...........
     2c6:	20 3f 21 01 01 21 3f 20 00 08 08 f8 08 08 00 00      ?!..!? ........
     2d6:	00 20 20 3f 20 20 00 00 00 00 08 08 f8 08 08 00     .  ?  ..........
     2e6:	c0 80 80 80 7f 00 00 00 08 f8 88 c0 28 18 08 00     ............(...
     2f6:	20 3f 20 01 26 38 20 00 08 f8 08 00 00 00 00 00      ? .&8 .........
     306:	20 3f 20 20 20 20 30 00 08 f8 f8 00 f8 f8 08 00      ?    0.........
     316:	20 3f 00 3f 00 3f 20 00 08 f8 30 c0 00 08 f8 08      ?.?.? ...0.....
     326:	20 3f 20 00 07 18 3f 00 e0 10 08 08 08 10 e0 00      ? ...?.........
     336:	0f 10 20 20 20 10 0f 00 08 f8 08 08 08 08 f0 00     ..   ...........
     346:	20 3f 21 01 01 01 00 00 e0 10 08 08 08 10 e0 00      ?!.............
     356:	0f 18 24 24 38 50 4f 00 08 f8 88 88 88 88 70 00     ..$$8PO.......p.
     366:	20 3f 20 00 03 0c 30 20 00 70 88 08 08 08 38 00      ? ...0 .p....8.
     376:	00 38 20 21 21 22 1c 00 18 08 08 f8 08 08 18 00     .8 !!"..........
     386:	00 00 20 3f 20 00 00 00 08 f8 08 00 00 08 f8 08     .. ? ...........
     396:	00 1f 20 20 20 20 1f 00 08 78 88 00 00 c8 38 08     ..    ...x....8.
     3a6:	00 00 07 38 0e 01 00 00 f8 08 00 f8 00 08 f8 00     ...8............
     3b6:	03 3c 07 00 07 3c 03 00 08 18 68 80 80 68 18 08     .<...<....h..h..
     3c6:	20 30 2c 03 03 2c 30 20 08 38 c8 00 c8 38 08 00      0,..,0 .8...8..
     3d6:	00 00 20 3f 20 00 00 00 10 08 08 08 c8 38 08 00     .. ? ........8..
     3e6:	20 38 26 21 20 20 18 00 00 00 00 fe 02 02 02 00      8&!  ..........
     3f6:	00 00 00 7f 40 40 40 00 00 0c 30 c0 00 00 00 00     ....@@@...0.....
     406:	00 00 00 01 06 38 c0 00 00 02 02 02 fe 00 00 00     .....8..........
     416:	00 40 40 40 7f 00 00 00 00 00 04 02 02 02 04 00     .@@@............
	...
     436:	80 80 80 80 80 80 80 80 00 02 02 04 00 00 00 00     ................
	...
     44e:	00 00 80 80 80 80 00 00 00 19 24 22 22 22 3f 20     ..........$"""? 
     45e:	08 f8 00 80 80 00 00 00 00 3f 11 20 20 11 0e 00     .........?.  ...
     46e:	00 00 00 80 80 80 00 00 00 0e 11 20 20 20 11 00     ...........   ..
     47e:	00 00 00 80 80 88 f8 00 00 0e 11 20 20 10 3f 20     ...........  .? 
     48e:	00 00 80 80 80 80 00 00 00 1f 22 22 22 22 13 00     ..........""""..
     49e:	00 80 80 f0 88 88 88 18 00 20 20 3f 20 20 00 00     .........  ?  ..
     4ae:	00 00 80 80 80 80 80 00 00 6b 94 94 94 93 60 00     .........k....`.
     4be:	08 f8 00 80 80 80 00 00 20 3f 21 00 00 20 3f 20     ........ ?!.. ? 
     4ce:	00 80 98 98 00 00 00 00 00 20 20 3f 20 20 00 00     .........  ?  ..
     4de:	00 00 00 80 98 98 00 00 00 c0 80 80 80 7f 00 00     ................
     4ee:	08 f8 00 00 80 80 80 00 20 3f 24 02 2d 30 20 00     ........ ?$.-0 .
     4fe:	00 08 08 f8 00 00 00 00 00 20 20 3f 20 20 00 00     .........  ?  ..
     50e:	80 80 80 80 80 80 80 00 20 3f 20 00 3f 20 00 3f     ........ ? .? .?
     51e:	80 80 00 80 80 80 00 00 20 3f 21 00 00 20 3f 20     ........ ?!.. ? 
     52e:	00 00 80 80 80 80 00 00 00 1f 20 20 20 20 1f 00     ..........    ..
     53e:	80 80 00 80 80 00 00 00 80 ff a1 20 20 11 0e 00     ...........  ...
     54e:	00 00 00 80 80 80 80 00 00 0e 11 20 20 a0 ff 80     ...........  ...
     55e:	80 80 80 00 80 80 80 00 20 20 3f 21 20 00 01 00     ........  ?! ...
     56e:	00 00 80 80 80 80 80 00 00 33 24 24 24 24 19 00     .........3$$$$..
     57e:	00 80 80 e0 80 80 00 00 00 00 00 1f 20 20 00 00     ............  ..
     58e:	80 80 00 00 00 80 80 00 00 1f 20 20 20 10 3f 20     ..........   .? 
     59e:	80 80 80 00 00 80 80 80 00 01 0e 30 08 06 01 00     ...........0....
     5ae:	80 80 00 80 00 80 80 80 0f 30 0c 03 0c 30 0f 00     .........0...0..
     5be:	00 80 80 00 80 80 80 00 00 20 31 2e 0e 31 20 00     ......... 1..1 .
     5ce:	80 80 80 00 00 80 80 80 80 81 8e 70 18 06 01 00     ...........p....
     5de:	00 80 80 80 80 80 80 00 00 21 30 2c 22 21 30 00     .........!0,"!0.
     5ee:	00 00 00 00 80 7c 02 02 00 00 00 00 00 3f 40 40     .....|.......?@@
     5fe:	00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00     ................
     60e:	00 02 02 7c 80 00 00 00 00 40 40 3f 00 00 00 00     ...|.....@@?....
     61e:	00 06 01 01 02 02 04 04 00 00 00 00 00 00 00 00     ................

0000062e <__ctors_end>:
     62e:	11 24       	eor	r1, r1
     630:	1f be       	out	0x3f, r1	; 63
     632:	cf e5       	ldi	r28, 0x5F	; 95
     634:	d2 e0       	ldi	r29, 0x02	; 2
     636:	de bf       	out	0x3e, r29	; 62
     638:	cd bf       	out	0x3d, r28	; 61

0000063a <__do_copy_data>:
     63a:	10 e0       	ldi	r17, 0x00	; 0
     63c:	a0 e6       	ldi	r26, 0x60	; 96
     63e:	b0 e0       	ldi	r27, 0x00	; 0
     640:	e0 ee       	ldi	r30, 0xE0	; 224
     642:	f8 e1       	ldi	r31, 0x18	; 24
     644:	02 c0       	rjmp	.+4      	; 0x64a <__do_copy_data+0x10>
     646:	05 90       	lpm	r0, Z+
     648:	0d 92       	st	X+, r0
     64a:	a2 3b       	cpi	r26, 0xB2	; 178
     64c:	b1 07       	cpc	r27, r17
     64e:	d9 f7       	brne	.-10     	; 0x646 <__do_copy_data+0xc>

00000650 <__do_clear_bss>:
     650:	21 e0       	ldi	r18, 0x01	; 1
     652:	a2 eb       	ldi	r26, 0xB2	; 178
     654:	b0 e0       	ldi	r27, 0x00	; 0
     656:	01 c0       	rjmp	.+2      	; 0x65a <.do_clear_bss_start>

00000658 <.do_clear_bss_loop>:
     658:	1d 92       	st	X+, r1

0000065a <.do_clear_bss_start>:
     65a:	a3 31       	cpi	r26, 0x13	; 19
     65c:	b2 07       	cpc	r27, r18
     65e:	e1 f7       	brne	.-8      	; 0x658 <.do_clear_bss_loop>
     660:	0c d3       	rcall	.+1560   	; 0xc7a <main>
     662:	3c c9       	rjmp	.-3464   	; 0xfffff8dc <__eeprom_end+0xff7ef8d7>

00000664 <__bad_interrupt>:
     664:	cd cc       	rjmp	.-1638   	; 0x0 <__vectors>

00000666 <start_millis_timer>:
		}
    }
}

void start_millis_timer() {
	cli();
     666:	f8 94       	cli
	
	TCCR0A |= _BV(WGM01);             // set timer0 CTC mode
     668:	8a b5       	in	r24, 0x2a	; 42
     66a:	82 60       	ori	r24, 0x02	; 2
     66c:	8a bd       	out	0x2a, r24	; 42
	OCR0A = 130;                      // set timer0 compare value
     66e:	82 e8       	ldi	r24, 0x82	; 130
     670:	89 bd       	out	0x29, r24	; 41
	TCCR0B |= _BV(CS00) | _BV(CS01);  // set timer0 prescaler 64
     672:	83 b7       	in	r24, 0x33	; 51
     674:	83 60       	ori	r24, 0x03	; 3
     676:	83 bf       	out	0x33, r24	; 51
	TIMSK |= _BV(OCIE0A);             // enable interrupt
     678:	89 b7       	in	r24, 0x39	; 57
     67a:	80 61       	ori	r24, 0x10	; 16
     67c:	89 bf       	out	0x39, r24	; 57
	
	sei();
     67e:	78 94       	sei
     680:	08 95       	ret

00000682 <__vector_10>:
}

ISR(TIMER0_COMPA_vect) {
     682:	1f 92       	push	r1
     684:	0f 92       	push	r0
     686:	0f b6       	in	r0, 0x3f	; 63
     688:	0f 92       	push	r0
     68a:	11 24       	eor	r1, r1
     68c:	8f 93       	push	r24
     68e:	9f 93       	push	r25
     690:	af 93       	push	r26
     692:	bf 93       	push	r27
	ms++;
     694:	80 91 c3 00 	lds	r24, 0x00C3	; 0x8000c3 <ms>
     698:	90 91 c4 00 	lds	r25, 0x00C4	; 0x8000c4 <ms+0x1>
     69c:	a0 91 c5 00 	lds	r26, 0x00C5	; 0x8000c5 <ms+0x2>
     6a0:	b0 91 c6 00 	lds	r27, 0x00C6	; 0x8000c6 <ms+0x3>
     6a4:	01 96       	adiw	r24, 0x01	; 1
     6a6:	a1 1d       	adc	r26, r1
     6a8:	b1 1d       	adc	r27, r1
     6aa:	80 93 c3 00 	sts	0x00C3, r24	; 0x8000c3 <ms>
     6ae:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <ms+0x1>
     6b2:	a0 93 c5 00 	sts	0x00C5, r26	; 0x8000c5 <ms+0x2>
     6b6:	b0 93 c6 00 	sts	0x00C6, r27	; 0x8000c6 <ms+0x3>
}
     6ba:	bf 91       	pop	r27
     6bc:	af 91       	pop	r26
     6be:	9f 91       	pop	r25
     6c0:	8f 91       	pop	r24
     6c2:	0f 90       	pop	r0
     6c4:	0f be       	out	0x3f, r0	; 63
     6c6:	0f 90       	pop	r0
     6c8:	1f 90       	pop	r1
     6ca:	18 95       	reti

000006cc <millis>:

uint32_t millis() {
	uint32_t copy;

	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     6cc:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     6ce:	f8 94       	cli
		copy = ms;
     6d0:	60 91 c3 00 	lds	r22, 0x00C3	; 0x8000c3 <ms>
     6d4:	70 91 c4 00 	lds	r23, 0x00C4	; 0x8000c4 <ms+0x1>
     6d8:	80 91 c5 00 	lds	r24, 0x00C5	; 0x8000c5 <ms+0x2>
     6dc:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <ms+0x3>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     6e0:	2f bf       	out	0x3f, r18	; 63
	}
	
	return copy;
}
     6e2:	08 95       	ret

000006e4 <set_wheel_diameter>:
	}
	wheel_length = (diameter * 3.14) / 100000.0;
}

void set_wheel_diameter(uint8_t diameter) {
	if (diameter > 0 && diameter < 0xFF) {
     6e4:	9f ef       	ldi	r25, 0xFF	; 255
     6e6:	98 0f       	add	r25, r24
     6e8:	9e 3f       	cpi	r25, 0xFE	; 254
     6ea:	20 f4       	brcc	.+8      	; 0x6f4 <set_wheel_diameter+0x10>
     6ec:	68 2f       	mov	r22, r24
		eeprom_write_byte(&EEPROM_WHEEL_DIAMETER, diameter);
     6ee:	84 e0       	ldi	r24, 0x04	; 4
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	c4 d8       	rcall	.-3704   	; 0xfffff87c <__eeprom_end+0xff7ef877>
     6f4:	08 95       	ret

000006f6 <calc_wheel_length>:
	
	return copy;
}

void calc_wheel_length() {
	uint8_t diameter = eeprom_read_byte(&EEPROM_WHEEL_DIAMETER); // cm
     6f6:	84 e0       	ldi	r24, 0x04	; 4
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	ab d8       	rcall	.-3754   	; 0xfffff852 <__eeprom_end+0xff7ef84d>
	if (diameter == 0xFF) {
     6fc:	8f 3f       	cpi	r24, 0xFF	; 255
     6fe:	19 f4       	brne	.+6      	; 0x706 <calc_wheel_length+0x10>
		diameter = 64; // default
		set_wheel_diameter(diameter);
     700:	80 e4       	ldi	r24, 0x40	; 64
     702:	f0 df       	rcall	.-32     	; 0x6e4 <set_wheel_diameter>
}

void calc_wheel_length() {
	uint8_t diameter = eeprom_read_byte(&EEPROM_WHEEL_DIAMETER); // cm
	if (diameter == 0xFF) {
		diameter = 64; // default
     704:	80 e4       	ldi	r24, 0x40	; 64
		set_wheel_diameter(diameter);
	}
	wheel_length = (diameter * 3.14) / 100000.0;
     706:	68 2f       	mov	r22, r24
     708:	70 e0       	ldi	r23, 0x00	; 0
     70a:	80 e0       	ldi	r24, 0x00	; 0
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	1d d7       	rcall	.+3642   	; 0x154a <__floatsisf>
     710:	23 ec       	ldi	r18, 0xC3	; 195
     712:	35 ef       	ldi	r19, 0xF5	; 245
     714:	48 e4       	ldi	r20, 0x48	; 72
     716:	50 e4       	ldi	r21, 0x40	; 64
     718:	cc d7       	rcall	.+3992   	; 0x16b2 <__mulsf3>
     71a:	20 e0       	ldi	r18, 0x00	; 0
     71c:	30 e5       	ldi	r19, 0x50	; 80
     71e:	43 ec       	ldi	r20, 0xC3	; 195
     720:	57 e4       	ldi	r21, 0x47	; 71
     722:	78 d6       	rcall	.+3312   	; 0x1414 <__divsf3>
     724:	60 93 cd 00 	sts	0x00CD, r22	; 0x8000cd <wheel_length>
     728:	70 93 ce 00 	sts	0x00CE, r23	; 0x8000ce <wheel_length+0x1>
     72c:	80 93 cf 00 	sts	0x00CF, r24	; 0x8000cf <wheel_length+0x2>
     730:	90 93 d0 00 	sts	0x00D0, r25	; 0x8000d0 <wheel_length+0x3>
     734:	08 95       	ret

00000736 <save_distance>:
		eeprom_write_byte(&EEPROM_WHEEL_DIAMETER, diameter);
	}
}

void save_distance() {
	total_distance += period_distance;
     736:	20 91 b6 00 	lds	r18, 0x00B6	; 0x8000b6 <period_distance>
     73a:	30 91 b7 00 	lds	r19, 0x00B7	; 0x8000b7 <period_distance+0x1>
     73e:	40 91 b8 00 	lds	r20, 0x00B8	; 0x8000b8 <period_distance+0x2>
     742:	50 91 b9 00 	lds	r21, 0x00B9	; 0x8000b9 <period_distance+0x3>
     746:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <total_distance>
     74a:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <total_distance+0x1>
     74e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <total_distance+0x2>
     752:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <total_distance+0x3>
     756:	f6 d5       	rcall	.+3052   	; 0x1344 <__addsf3>
     758:	ab 01       	movw	r20, r22
     75a:	bc 01       	movw	r22, r24
     75c:	40 93 04 01 	sts	0x0104, r20	; 0x800104 <total_distance>
     760:	50 93 05 01 	sts	0x0105, r21	; 0x800105 <total_distance+0x1>
     764:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <total_distance+0x2>
     768:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <total_distance+0x3>
	period_distance = 0;
     76c:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <period_distance>
     770:	10 92 b7 00 	sts	0x00B7, r1	; 0x8000b7 <period_distance+0x1>
     774:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <period_distance+0x2>
     778:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <period_distance+0x3>
	eeprom_update_float(&EEPROM_TOTAL_DISTANCE, total_distance);
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	75 d8       	rcall	.-3862   	; 0xfffff86c <__eeprom_end+0xff7ef867>
     782:	08 95       	ret

00000784 <turn_display>:
}

void turn_display(bool on) {
	display_turned = on;
     784:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <display_turned>
	ssd1306_turn_display(on);
     788:	4b d4       	rcall	.+2198   	; 0x1020 <ssd1306_turn_display>
     78a:	08 95       	ret

0000078c <switch_display_menu>:
}

void switch_display_menu() {
	ssd1306_clear();
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	40 e0       	ldi	r20, 0x00	; 0
     790:	60 e0       	ldi	r22, 0x00	; 0
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	23 d4       	rcall	.+2118   	; 0xfdc <ssd1306_fill4>
	display_menu++;
     796:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <display_menu>
     79a:	8f 5f       	subi	r24, 0xFF	; 255
	if (display_menu == 4) {
     79c:	84 30       	cpi	r24, 0x04	; 4
     79e:	19 f0       	breq	.+6      	; 0x7a6 <switch_display_menu+0x1a>
	ssd1306_turn_display(on);
}

void switch_display_menu() {
	ssd1306_clear();
	display_menu++;
     7a0:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <display_menu>
     7a4:	08 95       	ret
	if (display_menu == 4) {
		display_menu = 0;
     7a6:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <display_menu>
     7aa:	08 95       	ret

000007ac <display_update>:
	}
}

void display_update() {
     7ac:	8f 92       	push	r8
     7ae:	9f 92       	push	r9
     7b0:	af 92       	push	r10
     7b2:	bf 92       	push	r11
     7b4:	cf 92       	push	r12
     7b6:	df 92       	push	r13
     7b8:	ef 92       	push	r14
     7ba:	ff 92       	push	r15
	switch(display_menu) {
     7bc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <display_menu>
     7c0:	82 30       	cpi	r24, 0x02	; 2
     7c2:	09 f4       	brne	.+2      	; 0x7c6 <display_update+0x1a>
     7c4:	6e c0       	rjmp	.+220    	; 0x8a2 <display_update+0xf6>
     7c6:	30 f4       	brcc	.+12     	; 0x7d4 <display_update+0x28>
     7c8:	88 23       	and	r24, r24
     7ca:	59 f0       	breq	.+22     	; 0x7e2 <display_update+0x36>
     7cc:	81 30       	cpi	r24, 0x01	; 1
     7ce:	09 f4       	brne	.+2      	; 0x7d2 <display_update+0x26>
     7d0:	3f c0       	rjmp	.+126    	; 0x850 <display_update+0xa4>
     7d2:	dc c0       	rjmp	.+440    	; 0x98c <display_update+0x1e0>
     7d4:	83 30       	cpi	r24, 0x03	; 3
     7d6:	09 f4       	brne	.+2      	; 0x7da <display_update+0x2e>
     7d8:	89 c0       	rjmp	.+274    	; 0x8ec <display_update+0x140>
     7da:	84 30       	cpi	r24, 0x04	; 4
     7dc:	09 f4       	brne	.+2      	; 0x7e0 <display_update+0x34>
     7de:	c3 c0       	rjmp	.+390    	; 0x966 <display_update+0x1ba>
     7e0:	d5 c0       	rjmp	.+426    	; 0x98c <display_update+0x1e0>
		case MENU_MAIN:
			ssd1306_set_pos(0, 0);
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	e1 d3       	rcall	.+1986   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("s: ");
     7e8:	8f e8       	ldi	r24, 0x8F	; 143
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	68 d4       	rcall	.+2256   	; 0x10be <ssd1306tx_string>
			ssd1306tx_float(speed, 1);
     7ee:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <speed>
     7f2:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <speed+0x1>
     7f6:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <speed+0x2>
     7fa:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <speed+0x3>
     7fe:	41 e0       	ldi	r20, 0x01	; 1
     800:	50 e0       	ldi	r21, 0x00	; 0
     802:	64 d5       	rcall	.+2760   	; 0x12cc <ssd1306tx_float>
			ssd1306tx_string(" km/h   ");
     804:	88 e6       	ldi	r24, 0x68	; 104
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	5a d4       	rcall	.+2228   	; 0x10be <ssd1306tx_string>

			ssd1306_set_pos(0, 2);
     80a:	62 e0       	ldi	r22, 0x02	; 2
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	cd d3       	rcall	.+1946   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("d: ");
     810:	81 e7       	ldi	r24, 0x71	; 113
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	54 d4       	rcall	.+2216   	; 0x10be <ssd1306tx_string>
			ssd1306tx_float(distance, 2);
     816:	60 91 d1 00 	lds	r22, 0x00D1	; 0x8000d1 <distance>
     81a:	70 91 d2 00 	lds	r23, 0x00D2	; 0x8000d2 <distance+0x1>
     81e:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <distance+0x2>
     822:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <distance+0x3>
     826:	42 e0       	ldi	r20, 0x02	; 2
     828:	50 e0       	ldi	r21, 0x00	; 0
     82a:	50 d5       	rcall	.+2720   	; 0x12cc <ssd1306tx_float>
			ssd1306tx_string(" km   ");
     82c:	85 e7       	ldi	r24, 0x75	; 117
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	46 d4       	rcall	.+2188   	; 0x10be <ssd1306tx_string>
			
			ssd1306_set_pos(0, 4);
     832:	64 e0       	ldi	r22, 0x04	; 4
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	b9 d3       	rcall	.+1906   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("rpm: ");
     838:	8c e7       	ldi	r24, 0x7C	; 124
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	40 d4       	rcall	.+2176   	; 0x10be <ssd1306tx_string>
			ssd1306tx_int(wheel_rpm);
     83e:	80 91 cb 00 	lds	r24, 0x00CB	; 0x8000cb <wheel_rpm>
     842:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <wheel_rpm+0x1>
     846:	c9 d4       	rcall	.+2450   	; 0x11da <ssd1306tx_int>
			ssd1306tx_string("   ");
     848:	8d e6       	ldi	r24, 0x6D	; 109
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	38 d4       	rcall	.+2160   	; 0x10be <ssd1306tx_string>
			break;
     84e:	9e c0       	rjmp	.+316    	; 0x98c <display_update+0x1e0>
		
		case MENU_SPEED:
			ssd1306_set_pos(0, 0);
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	80 e0       	ldi	r24, 0x00	; 0
     854:	aa d3       	rcall	.+1876   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("ms: ");
     856:	82 e8       	ldi	r24, 0x82	; 130
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	31 d4       	rcall	.+2146   	; 0x10be <ssd1306tx_string>
			ssd1306tx_float(max_speed, 1);
     85c:	60 91 c7 00 	lds	r22, 0x00C7	; 0x8000c7 <max_speed>
     860:	70 91 c8 00 	lds	r23, 0x00C8	; 0x8000c8 <max_speed+0x1>
     864:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <max_speed+0x2>
     868:	90 91 ca 00 	lds	r25, 0x00CA	; 0x8000ca <max_speed+0x3>
     86c:	41 e0       	ldi	r20, 0x01	; 1
     86e:	50 e0       	ldi	r21, 0x00	; 0
     870:	2d d5       	rcall	.+2650   	; 0x12cc <ssd1306tx_float>
			ssd1306tx_string(" km/h ");
     872:	87 e8       	ldi	r24, 0x87	; 135
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	23 d4       	rcall	.+2118   	; 0x10be <ssd1306tx_string>

			ssd1306_set_pos(0, 2);
     878:	62 e0       	ldi	r22, 0x02	; 2
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	96 d3       	rcall	.+1836   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("as: ");
     87e:	8e e8       	ldi	r24, 0x8E	; 142
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	1d d4       	rcall	.+2106   	; 0x10be <ssd1306tx_string>
			ssd1306tx_float(avg_speed, 1);
     884:	60 91 ba 00 	lds	r22, 0x00BA	; 0x8000ba <avg_speed>
     888:	70 91 bb 00 	lds	r23, 0x00BB	; 0x8000bb <avg_speed+0x1>
     88c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <avg_speed+0x2>
     890:	90 91 bd 00 	lds	r25, 0x00BD	; 0x8000bd <avg_speed+0x3>
     894:	41 e0       	ldi	r20, 0x01	; 1
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	19 d5       	rcall	.+2610   	; 0x12cc <ssd1306tx_float>
			ssd1306tx_string(" km/h ");
     89a:	87 e8       	ldi	r24, 0x87	; 135
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0f d4       	rcall	.+2078   	; 0x10be <ssd1306tx_string>
			break;
     8a0:	75 c0       	rjmp	.+234    	; 0x98c <display_update+0x1e0>
		
		case MENU_DISTANCE:
			ssd1306_set_pos(0, 0);
     8a2:	60 e0       	ldi	r22, 0x00	; 0
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	81 d3       	rcall	.+1794   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("total d:");
     8a8:	83 e9       	ldi	r24, 0x93	; 147
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	08 d4       	rcall	.+2064   	; 0x10be <ssd1306tx_string>
			
			ssd1306_set_pos(0, 2);
     8ae:	62 e0       	ldi	r22, 0x02	; 2
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	7b d3       	rcall	.+1782   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_float(total_distance, 2);
     8b4:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <total_distance>
     8b8:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <total_distance+0x1>
     8bc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <total_distance+0x2>
     8c0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <total_distance+0x3>
     8c4:	42 e0       	ldi	r20, 0x02	; 2
     8c6:	50 e0       	ldi	r21, 0x00	; 0
     8c8:	01 d5       	rcall	.+2562   	; 0x12cc <ssd1306tx_float>
			ssd1306tx_string(" km");
     8ca:	8c e9       	ldi	r24, 0x9C	; 156
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	f7 d3       	rcall	.+2030   	; 0x10be <ssd1306tx_string>
			
			if (distance_saved) {
     8d0:	80 91 b5 00 	lds	r24, 0x00B5	; 0x8000b5 <distance_saved>
     8d4:	88 23       	and	r24, r24
     8d6:	09 f4       	brne	.+2      	; 0x8da <display_update+0x12e>
     8d8:	59 c0       	rjmp	.+178    	; 0x98c <display_update+0x1e0>
				distance_saved = false;
     8da:	10 92 b5 00 	sts	0x00B5, r1	; 0x8000b5 <distance_saved>
				
				ssd1306_set_pos(0, 4);
     8de:	64 e0       	ldi	r22, 0x04	; 4
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	63 d3       	rcall	.+1734   	; 0xfaa <ssd1306_set_pos>
				ssd1306tx_string("saved");	
     8e4:	80 ea       	ldi	r24, 0xA0	; 160
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	ea d3       	rcall	.+2004   	; 0x10be <ssd1306tx_string>
     8ea:	50 c0       	rjmp	.+160    	; 0x98c <display_update+0x1e0>
			}
			break;

		case MENU_TIME: {
			uint32_t now = millis();
     8ec:	ef de       	rcall	.-546    	; 0x6cc <millis>
     8ee:	6b 01       	movw	r12, r22
     8f0:	7c 01       	movw	r14, r24
			uint32_t sec = now / 1000ul;
			int hours = (sec / 3600ul);
			int minutes = (sec % 3600ul) / 60ul;
     8f2:	28 ee       	ldi	r18, 0xE8	; 232
     8f4:	33 e0       	ldi	r19, 0x03	; 3
     8f6:	40 e0       	ldi	r20, 0x00	; 0
     8f8:	50 e0       	ldi	r21, 0x00	; 0
     8fa:	59 d7       	rcall	.+3762   	; 0x17ae <__udivmodsi4>
     8fc:	ca 01       	movw	r24, r20
     8fe:	b9 01       	movw	r22, r18
     900:	20 e1       	ldi	r18, 0x10	; 16
     902:	3e e0       	ldi	r19, 0x0E	; 14
     904:	40 e0       	ldi	r20, 0x00	; 0
     906:	50 e0       	ldi	r21, 0x00	; 0
     908:	52 d7       	rcall	.+3748   	; 0x17ae <__udivmodsi4>
     90a:	4b 01       	movw	r8, r22
     90c:	5c 01       	movw	r10, r24
			int seconds = (sec % 3600ul) % 60ul;
			
			ssd1306_set_pos(0, 0);
     90e:	60 e0       	ldi	r22, 0x00	; 0
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	4b d3       	rcall	.+1686   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("time:");
     914:	86 ea       	ldi	r24, 0xA6	; 166
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	d2 d3       	rcall	.+1956   	; 0x10be <ssd1306tx_string>
			
			ssd1306_set_pos(0, 2);
     91a:	62 e0       	ldi	r22, 0x02	; 2
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	45 d3       	rcall	.+1674   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_int_p(hours, 2);
     920:	c7 01       	movw	r24, r14
     922:	b6 01       	movw	r22, r12
     924:	20 e8       	ldi	r18, 0x80	; 128
     926:	3e ee       	ldi	r19, 0xEE	; 238
     928:	46 e3       	ldi	r20, 0x36	; 54
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	40 d7       	rcall	.+3712   	; 0x17ae <__udivmodsi4>
     92e:	62 e0       	ldi	r22, 0x02	; 2
     930:	70 e0       	ldi	r23, 0x00	; 0
     932:	c9 01       	movw	r24, r18
     934:	38 d4       	rcall	.+2160   	; 0x11a6 <ssd1306tx_int_p>
			ssd1306tx_string(":");
     936:	8a e9       	ldi	r24, 0x9A	; 154
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	c1 d3       	rcall	.+1922   	; 0x10be <ssd1306tx_string>
			
			ssd1306tx_int_p(minutes, 2);
     93c:	c5 01       	movw	r24, r10
     93e:	b4 01       	movw	r22, r8
     940:	2c e3       	ldi	r18, 0x3C	; 60
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	32 d7       	rcall	.+3684   	; 0x17ae <__udivmodsi4>
     94a:	6b 01       	movw	r12, r22
     94c:	7c 01       	movw	r14, r24
     94e:	62 e0       	ldi	r22, 0x02	; 2
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	c9 01       	movw	r24, r18
     954:	28 d4       	rcall	.+2128   	; 0x11a6 <ssd1306tx_int_p>
			ssd1306tx_string(":");
     956:	8a e9       	ldi	r24, 0x9A	; 154
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	b1 d3       	rcall	.+1890   	; 0x10be <ssd1306tx_string>
			
			ssd1306tx_int_p(seconds, 2);
     95c:	62 e0       	ldi	r22, 0x02	; 2
     95e:	70 e0       	ldi	r23, 0x00	; 0
     960:	c6 01       	movw	r24, r12
     962:	21 d4       	rcall	.+2114   	; 0x11a6 <ssd1306tx_int_p>
			break;
     964:	13 c0       	rjmp	.+38     	; 0x98c <display_update+0x1e0>
		}
		
		case MENU_LED:
			ssd1306_set_pos(0, 0);
     966:	60 e0       	ldi	r22, 0x00	; 0
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	1f d3       	rcall	.+1598   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string("led:");
     96c:	8c ea       	ldi	r24, 0xAC	; 172
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	a6 d3       	rcall	.+1868   	; 0x10be <ssd1306tx_string>

			ssd1306_set_pos(0, 2);
     972:	62 e0       	ldi	r22, 0x02	; 2
     974:	80 e0       	ldi	r24, 0x00	; 0
     976:	19 d3       	rcall	.+1586   	; 0xfaa <ssd1306_set_pos>
			ssd1306tx_string(led_turned ? "on " : "off");
     978:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <led_turned>
     97c:	81 11       	cpse	r24, r1
     97e:	03 c0       	rjmp	.+6      	; 0x986 <display_update+0x1da>
     980:	84 e6       	ldi	r24, 0x64	; 100
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	02 c0       	rjmp	.+4      	; 0x98a <display_update+0x1de>
     986:	80 e6       	ldi	r24, 0x60	; 96
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	99 d3       	rcall	.+1842   	; 0x10be <ssd1306tx_string>
			break;
	}
}
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	cf 90       	pop	r12
     994:	bf 90       	pop	r11
     996:	af 90       	pop	r10
     998:	9f 90       	pop	r9
     99a:	8f 90       	pop	r8
     99c:	08 95       	ret

0000099e <turn_led>:

void turn_led(bool on) {
	led_turned = on;
     99e:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <led_turned>
	PORTB &= ~_BV(LED_PIN); // turn off led
     9a2:	c4 98       	cbi	0x18, 4	; 24
     9a4:	08 95       	ret

000009a6 <handle_btn_click>:
}

void handle_btn_click(uint8_t pin_state, uint32_t timer_now) {
     9a6:	cf 92       	push	r12
     9a8:	df 92       	push	r13
     9aa:	ef 92       	push	r14
     9ac:	ff 92       	push	r15
     9ae:	6a 01       	movw	r12, r20
     9b0:	7b 01       	movw	r14, r22
	// click start
	if (!btn_pressed && !pin_state) {
     9b2:	90 91 be 00 	lds	r25, 0x00BE	; 0x8000be <btn_pressed>
     9b6:	91 11       	cpse	r25, r1
     9b8:	67 c0       	rjmp	.+206    	; 0xa88 <handle_btn_click+0xe2>
     9ba:	81 11       	cpse	r24, r1
     9bc:	68 c0       	rjmp	.+208    	; 0xa8e <handle_btn_click+0xe8>
		btn_pressed = true;
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	80 93 be 00 	sts	0x00BE, r24	; 0x8000be <btn_pressed>
		btn_timer = timer_now;
     9c4:	40 93 fc 00 	sts	0x00FC, r20	; 0x8000fc <btn_timer>
     9c8:	50 93 fd 00 	sts	0x00FD, r21	; 0x8000fd <btn_timer+0x1>
     9cc:	60 93 fe 00 	sts	0x00FE, r22	; 0x8000fe <btn_timer+0x2>
     9d0:	70 93 ff 00 	sts	0x00FF, r23	; 0x8000ff <btn_timer+0x3>
     9d4:	26 c0       	rjmp	.+76     	; 0xa22 <handle_btn_click+0x7c>
	}
	
	// handle single button click
	if (btn_pressed && pin_state) {
		btn_pressed = false;
     9d6:	10 92 be 00 	sts	0x00BE, r1	; 0x8000be <btn_pressed>

		if (!btn_long_pressed && display_turned && ((timer_now - btn_timer) >= SINGLE_PRESS_TIME)) {
     9da:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <btn_long_pressed>
     9de:	81 11       	cpse	r24, r1
     9e0:	19 c0       	rjmp	.+50     	; 0xa14 <handle_btn_click+0x6e>
     9e2:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <display_turned>
     9e6:	88 23       	and	r24, r24
     9e8:	a9 f0       	breq	.+42     	; 0xa14 <handle_btn_click+0x6e>
     9ea:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <btn_timer>
     9ee:	90 91 fd 00 	lds	r25, 0x00FD	; 0x8000fd <btn_timer+0x1>
     9f2:	a0 91 fe 00 	lds	r26, 0x00FE	; 0x8000fe <btn_timer+0x2>
     9f6:	b0 91 ff 00 	lds	r27, 0x00FF	; 0x8000ff <btn_timer+0x3>
     9fa:	a7 01       	movw	r20, r14
     9fc:	96 01       	movw	r18, r12
     9fe:	28 1b       	sub	r18, r24
     a00:	39 0b       	sbc	r19, r25
     a02:	4a 0b       	sbc	r20, r26
     a04:	5b 0b       	sbc	r21, r27
     a06:	22 33       	cpi	r18, 0x32	; 50
     a08:	31 05       	cpc	r19, r1
     a0a:	41 05       	cpc	r20, r1
     a0c:	51 05       	cpc	r21, r1
     a0e:	10 f0       	brcs	.+4      	; 0xa14 <handle_btn_click+0x6e>
			switch_display_menu();
     a10:	bd de       	rcall	.-646    	; 0x78c <switch_display_menu>
			display_update();
     a12:	cc de       	rcall	.-616    	; 0x7ac <display_update>
		}
		btn_long_pressed = false;
     a14:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <btn_long_pressed>
	}
	
	// handle long button click
	if (btn_pressed && !btn_long_pressed && ((timer_now - btn_timer) >= LONG_PRESS_TIME)) {
     a18:	80 91 be 00 	lds	r24, 0x00BE	; 0x8000be <btn_pressed>
     a1c:	81 11       	cpse	r24, r1
     a1e:	05 c0       	rjmp	.+10     	; 0xa2a <handle_btn_click+0x84>
     a20:	36 c0       	rjmp	.+108    	; 0xa8e <handle_btn_click+0xe8>
     a22:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <btn_long_pressed>
     a26:	81 11       	cpse	r24, r1
     a28:	32 c0       	rjmp	.+100    	; 0xa8e <handle_btn_click+0xe8>
     a2a:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <btn_timer>
     a2e:	90 91 fd 00 	lds	r25, 0x00FD	; 0x8000fd <btn_timer+0x1>
     a32:	a0 91 fe 00 	lds	r26, 0x00FE	; 0x8000fe <btn_timer+0x2>
     a36:	b0 91 ff 00 	lds	r27, 0x00FF	; 0x8000ff <btn_timer+0x3>
     a3a:	c8 1a       	sub	r12, r24
     a3c:	d9 0a       	sbc	r13, r25
     a3e:	ea 0a       	sbc	r14, r26
     a40:	fb 0a       	sbc	r15, r27
     a42:	34 ef       	ldi	r19, 0xF4	; 244
     a44:	c3 16       	cp	r12, r19
     a46:	31 e0       	ldi	r19, 0x01	; 1
     a48:	d3 06       	cpc	r13, r19
     a4a:	e1 04       	cpc	r14, r1
     a4c:	f1 04       	cpc	r15, r1
     a4e:	f8 f0       	brcs	.+62     	; 0xa8e <handle_btn_click+0xe8>
		btn_long_pressed = true;
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <btn_long_pressed>
		switch (display_menu) {
     a56:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <display_menu>
     a5a:	82 30       	cpi	r24, 0x02	; 2
     a5c:	49 f0       	breq	.+18     	; 0xa70 <handle_btn_click+0xca>
     a5e:	84 30       	cpi	r24, 0x04	; 4
     a60:	69 f4       	brne	.+26     	; 0xa7c <handle_btn_click+0xd6>
			case MENU_LED:
				turn_led(!led_turned);
     a62:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <led_turned>
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	89 27       	eor	r24, r25
     a6a:	99 df       	rcall	.-206    	; 0x99e <turn_led>
				display_update();
     a6c:	9f de       	rcall	.-706    	; 0x7ac <display_update>
				break;
     a6e:	0f c0       	rjmp	.+30     	; 0xa8e <handle_btn_click+0xe8>
			case MENU_DISTANCE:
				save_distance();
     a70:	62 de       	rcall	.-828    	; 0x736 <save_distance>
				
				distance_saved = true;
     a72:	81 e0       	ldi	r24, 0x01	; 1
     a74:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <distance_saved>
				display_update();
     a78:	99 de       	rcall	.-718    	; 0x7ac <display_update>
				break;
     a7a:	09 c0       	rjmp	.+18     	; 0xa8e <handle_btn_click+0xe8>
			default:
				turn_display(!display_turned);
     a7c:	90 91 fb 00 	lds	r25, 0x00FB	; 0x8000fb <display_turned>
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	89 27       	eor	r24, r25
     a84:	7f de       	rcall	.-770    	; 0x784 <turn_display>
				break;
		}
	}
}
     a86:	03 c0       	rjmp	.+6      	; 0xa8e <handle_btn_click+0xe8>
		btn_pressed = true;
		btn_timer = timer_now;
	}
	
	// handle single button click
	if (btn_pressed && pin_state) {
     a88:	81 11       	cpse	r24, r1
     a8a:	a5 cf       	rjmp	.-182    	; 0x9d6 <handle_btn_click+0x30>
     a8c:	ca cf       	rjmp	.-108    	; 0xa22 <handle_btn_click+0x7c>
			default:
				turn_display(!display_turned);
				break;
		}
	}
}
     a8e:	ff 90       	pop	r15
     a90:	ef 90       	pop	r14
     a92:	df 90       	pop	r13
     a94:	cf 90       	pop	r12
     a96:	08 95       	ret

00000a98 <calc_avg_speed>:
		wheel_rotation_counter = 0;
		wheel_rotation_start_time = 0;
	}
}

void calc_avg_speed(float speed) {
     a98:	8f 92       	push	r8
     a9a:	9f 92       	push	r9
     a9c:	af 92       	push	r10
     a9e:	bf 92       	push	r11
     aa0:	cf 92       	push	r12
     aa2:	df 92       	push	r13
     aa4:	ef 92       	push	r14
     aa6:	ff 92       	push	r15
     aa8:	0f 93       	push	r16
     aaa:	1f 93       	push	r17
     aac:	cf 93       	push	r28
     aae:	df 93       	push	r29
     ab0:	6b 01       	movw	r12, r22
     ab2:	7c 01       	movw	r14, r24
	if (speed == 0) {
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	a9 01       	movw	r20, r18
     aba:	a8 d4       	rcall	.+2384   	; 0x140c <__cmpsf2>
     abc:	88 23       	and	r24, r24
     abe:	09 f4       	brne	.+2      	; 0xac2 <calc_avg_speed+0x2a>
     ac0:	57 c0       	rjmp	.+174    	; 0xb70 <calc_avg_speed+0xd8>
		return;
	}
	
	speed_arr[speed_arr_index++] = speed;
     ac2:	e0 91 d9 00 	lds	r30, 0x00D9	; 0x8000d9 <speed_arr_index>
     ac6:	81 e0       	ldi	r24, 0x01	; 1
     ac8:	8e 0f       	add	r24, r30
     aca:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <speed_arr_index>
     ace:	f0 e0       	ldi	r31, 0x00	; 0
     ad0:	ee 0f       	add	r30, r30
     ad2:	ff 1f       	adc	r31, r31
     ad4:	ee 0f       	add	r30, r30
     ad6:	ff 1f       	adc	r31, r31
     ad8:	e5 52       	subi	r30, 0x25	; 37
     ada:	ff 4f       	sbci	r31, 0xFF	; 255
     adc:	c0 82       	st	Z, r12
     ade:	d1 82       	std	Z+1, r13	; 0x01
     ae0:	e2 82       	std	Z+2, r14	; 0x02
     ae2:	f3 82       	std	Z+3, r15	; 0x03
	
	if (speed_arr_index == 8) {
     ae4:	88 30       	cpi	r24, 0x08	; 8
     ae6:	09 f0       	breq	.+2      	; 0xaea <calc_avg_speed+0x52>
     ae8:	43 c0       	rjmp	.+134    	; 0xb70 <calc_avg_speed+0xd8>
		speed_arr_index = 0;
     aea:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <speed_arr_index>
     aee:	cb ed       	ldi	r28, 0xDB	; 219
     af0:	d0 e0       	ldi	r29, 0x00	; 0
     af2:	0b ef       	ldi	r16, 0xFB	; 251
     af4:	10 e0       	ldi	r17, 0x00	; 0
		
		float sum = 0;
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	cb 01       	movw	r24, r22
		for (uint8_t i = 0; i < 8; i++) {
			sum += speed_arr[i];
     afc:	29 91       	ld	r18, Y+
     afe:	39 91       	ld	r19, Y+
     b00:	49 91       	ld	r20, Y+
     b02:	59 91       	ld	r21, Y+
     b04:	1f d4       	rcall	.+2110   	; 0x1344 <__addsf3>
	
	if (speed_arr_index == 8) {
		speed_arr_index = 0;
		
		float sum = 0;
		for (uint8_t i = 0; i < 8; i++) {
     b06:	c0 17       	cp	r28, r16
     b08:	d1 07       	cpc	r29, r17
     b0a:	c1 f7       	brne	.-16     	; 0xafc <calc_avg_speed+0x64>
			sum += speed_arr[i];
		}
		
		sum /= 8;
     b0c:	20 e0       	ldi	r18, 0x00	; 0
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	40 e0       	ldi	r20, 0x00	; 0
     b12:	5e e3       	ldi	r21, 0x3E	; 62
     b14:	ce d5       	rcall	.+2972   	; 0x16b2 <__mulsf3>
     b16:	4b 01       	movw	r8, r22
     b18:	5c 01       	movw	r10, r24
		if (avg_speed == 0) {
     b1a:	c0 90 ba 00 	lds	r12, 0x00BA	; 0x8000ba <avg_speed>
     b1e:	d0 90 bb 00 	lds	r13, 0x00BB	; 0x8000bb <avg_speed+0x1>
     b22:	e0 90 bc 00 	lds	r14, 0x00BC	; 0x8000bc <avg_speed+0x2>
     b26:	f0 90 bd 00 	lds	r15, 0x00BD	; 0x8000bd <avg_speed+0x3>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	a9 01       	movw	r20, r18
     b30:	c7 01       	movw	r24, r14
     b32:	b6 01       	movw	r22, r12
     b34:	6b d4       	rcall	.+2262   	; 0x140c <__cmpsf2>
     b36:	81 11       	cpse	r24, r1
     b38:	09 c0       	rjmp	.+18     	; 0xb4c <calc_avg_speed+0xb4>
			avg_speed = sum;
     b3a:	80 92 ba 00 	sts	0x00BA, r8	; 0x8000ba <avg_speed>
     b3e:	90 92 bb 00 	sts	0x00BB, r9	; 0x8000bb <avg_speed+0x1>
     b42:	a0 92 bc 00 	sts	0x00BC, r10	; 0x8000bc <avg_speed+0x2>
     b46:	b0 92 bd 00 	sts	0x00BD, r11	; 0x8000bd <avg_speed+0x3>
     b4a:	12 c0       	rjmp	.+36     	; 0xb70 <calc_avg_speed+0xd8>
		} else {
			avg_speed = (avg_speed + sum) / 2;
     b4c:	a7 01       	movw	r20, r14
     b4e:	96 01       	movw	r18, r12
     b50:	c5 01       	movw	r24, r10
     b52:	b4 01       	movw	r22, r8
     b54:	f7 d3       	rcall	.+2030   	; 0x1344 <__addsf3>
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	40 e0       	ldi	r20, 0x00	; 0
     b5c:	5f e3       	ldi	r21, 0x3F	; 63
     b5e:	a9 d5       	rcall	.+2898   	; 0x16b2 <__mulsf3>
     b60:	60 93 ba 00 	sts	0x00BA, r22	; 0x8000ba <avg_speed>
     b64:	70 93 bb 00 	sts	0x00BB, r23	; 0x8000bb <avg_speed+0x1>
     b68:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <avg_speed+0x2>
     b6c:	90 93 bd 00 	sts	0x00BD, r25	; 0x8000bd <avg_speed+0x3>
		}
	}
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	1f 91       	pop	r17
     b76:	0f 91       	pop	r16
     b78:	ff 90       	pop	r15
     b7a:	ef 90       	pop	r14
     b7c:	df 90       	pop	r13
     b7e:	cf 90       	pop	r12
     b80:	bf 90       	pop	r11
     b82:	af 90       	pop	r10
     b84:	9f 90       	pop	r9
     b86:	8f 90       	pop	r8
     b88:	08 95       	ret

00000b8a <calc_speed>:
				break;
		}
	}
}

void calc_speed(uint32_t timer_now) {
     b8a:	cf 92       	push	r12
     b8c:	df 92       	push	r13
     b8e:	ef 92       	push	r14
     b90:	ff 92       	push	r15
	if (wheel_rotation_counter == 5) {
     b92:	20 91 da 00 	lds	r18, 0x00DA	; 0x8000da <wheel_rotation_counter>
     b96:	25 30       	cpi	r18, 0x05	; 5
     b98:	09 f0       	breq	.+2      	; 0xb9c <calc_speed+0x12>
     b9a:	6a c0       	rjmp	.+212    	; 0xc70 <calc_speed+0xe6>
		uint32_t interval = timer_now - wheel_rotation_start_time;
		uint16_t avg_interval = interval / 4;

		uint16_t rpm = 60000 / avg_interval;
     b9c:	c0 90 bf 00 	lds	r12, 0x00BF	; 0x8000bf <wheel_rotation_start_time>
     ba0:	d0 90 c0 00 	lds	r13, 0x00C0	; 0x8000c0 <wheel_rotation_start_time+0x1>
     ba4:	e0 90 c1 00 	lds	r14, 0x00C1	; 0x8000c1 <wheel_rotation_start_time+0x2>
     ba8:	f0 90 c2 00 	lds	r15, 0x00C2	; 0x8000c2 <wheel_rotation_start_time+0x3>
     bac:	dc 01       	movw	r26, r24
     bae:	cb 01       	movw	r24, r22
     bb0:	8c 19       	sub	r24, r12
     bb2:	9d 09       	sbc	r25, r13
     bb4:	ae 09       	sbc	r26, r14
     bb6:	bf 09       	sbc	r27, r15
     bb8:	b6 95       	lsr	r27
     bba:	a7 95       	ror	r26
     bbc:	97 95       	ror	r25
     bbe:	87 95       	ror	r24
     bc0:	b6 95       	lsr	r27
     bc2:	a7 95       	ror	r26
     bc4:	97 95       	ror	r25
     bc6:	87 95       	ror	r24
     bc8:	9c 01       	movw	r18, r24
     bca:	ad 01       	movw	r20, r26
     bcc:	44 27       	eor	r20, r20
     bce:	55 27       	eor	r21, r21
     bd0:	60 e6       	ldi	r22, 0x60	; 96
     bd2:	7a ee       	ldi	r23, 0xEA	; 234
     bd4:	80 e0       	ldi	r24, 0x00	; 0
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	0c d6       	rcall	.+3096   	; 0x17f2 <__divmodsi4>
		if (rpm < WHEEL_RPM_MAX) {
     bda:	28 35       	cpi	r18, 0x58	; 88
     bdc:	82 e0       	ldi	r24, 0x02	; 2
     bde:	38 07       	cpc	r19, r24
     be0:	e8 f5       	brcc	.+122    	; 0xc5c <calc_speed+0xd2>
			wheel_rpm = rpm;
     be2:	30 93 cc 00 	sts	0x00CC, r19	; 0x8000cc <wheel_rpm+0x1>
     be6:	20 93 cb 00 	sts	0x00CB, r18	; 0x8000cb <wheel_rpm>
			speed = wheel_rpm * 60 * wheel_length;
     bea:	b9 01       	movw	r22, r18
     bec:	62 95       	swap	r22
     bee:	72 95       	swap	r23
     bf0:	70 7f       	andi	r23, 0xF0	; 240
     bf2:	76 27       	eor	r23, r22
     bf4:	60 7f       	andi	r22, 0xF0	; 240
     bf6:	76 27       	eor	r23, r22
     bf8:	62 1b       	sub	r22, r18
     bfa:	73 0b       	sbc	r23, r19
     bfc:	66 0f       	add	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	66 0f       	add	r22, r22
     c02:	77 1f       	adc	r23, r23
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	9e d4       	rcall	.+2364   	; 0x1546 <__floatunsisf>
     c0a:	20 91 cd 00 	lds	r18, 0x00CD	; 0x8000cd <wheel_length>
     c0e:	30 91 ce 00 	lds	r19, 0x00CE	; 0x8000ce <wheel_length+0x1>
     c12:	40 91 cf 00 	lds	r20, 0x00CF	; 0x8000cf <wheel_length+0x2>
     c16:	50 91 d0 00 	lds	r21, 0x00D0	; 0x8000d0 <wheel_length+0x3>
     c1a:	4b d5       	rcall	.+2710   	; 0x16b2 <__mulsf3>
     c1c:	6b 01       	movw	r12, r22
     c1e:	7c 01       	movw	r14, r24
     c20:	60 93 09 01 	sts	0x0109, r22	; 0x800109 <speed>
     c24:	70 93 0a 01 	sts	0x010A, r23	; 0x80010a <speed+0x1>
     c28:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <speed+0x2>
     c2c:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <speed+0x3>
			if (speed >= max_speed) {
     c30:	20 91 c7 00 	lds	r18, 0x00C7	; 0x8000c7 <max_speed>
     c34:	30 91 c8 00 	lds	r19, 0x00C8	; 0x8000c8 <max_speed+0x1>
     c38:	40 91 c9 00 	lds	r20, 0x00C9	; 0x8000c9 <max_speed+0x2>
     c3c:	50 91 ca 00 	lds	r21, 0x00CA	; 0x8000ca <max_speed+0x3>
     c40:	34 d5       	rcall	.+2664   	; 0x16aa <__gesf2>
     c42:	88 23       	and	r24, r24
     c44:	44 f0       	brlt	.+16     	; 0xc56 <calc_speed+0xcc>
				max_speed = speed;
     c46:	c0 92 c7 00 	sts	0x00C7, r12	; 0x8000c7 <max_speed>
     c4a:	d0 92 c8 00 	sts	0x00C8, r13	; 0x8000c8 <max_speed+0x1>
     c4e:	e0 92 c9 00 	sts	0x00C9, r14	; 0x8000c9 <max_speed+0x2>
     c52:	f0 92 ca 00 	sts	0x00CA, r15	; 0x8000ca <max_speed+0x3>
			}
			calc_avg_speed(speed);
     c56:	c7 01       	movw	r24, r14
     c58:	b6 01       	movw	r22, r12
     c5a:	1e df       	rcall	.-452    	; 0xa98 <calc_avg_speed>
		}

		wheel_rotation_counter = 0;
     c5c:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <wheel_rotation_counter>
		wheel_rotation_start_time = 0;
     c60:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <wheel_rotation_start_time>
     c64:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <wheel_rotation_start_time+0x1>
     c68:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <wheel_rotation_start_time+0x2>
     c6c:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <wheel_rotation_start_time+0x3>
	}
}
     c70:	ff 90       	pop	r15
     c72:	ef 90       	pop	r14
     c74:	df 90       	pop	r13
     c76:	cf 90       	pop	r12
     c78:	08 95       	ret

00000c7a <main>:
void handle_btn_click(uint8_t pin_state, uint32_t timer_now);
void calc_speed(uint32_t timer_now);

int main(void) {
	// set 8 MHz frequency
	CLKPR = 1 << CLKPCE;
     c7a:	80 e8       	ldi	r24, 0x80	; 128
     c7c:	86 bd       	out	0x26, r24	; 38
	CLKPR = 0;
     c7e:	16 bc       	out	0x26, r1	; 38
	
	DDRB = 0;
     c80:	17 ba       	out	0x17, r1	; 23
	DDRB |= _BV(LED_PIN);  // led pin as output
     c82:	bc 9a       	sbi	0x17, 4	; 23
	
	PORTB |= _BV(BTN_PIN);  // turn on btn pin input pullup
     c84:	c3 9a       	sbi	0x18, 3	; 24
	
	start_millis_timer();
     c86:	ef dc       	rcall	.-1570   	; 0x666 <start_millis_timer>
	calc_wheel_length();
     c88:	36 dd       	rcall	.-1428   	; 0x6f6 <calc_wheel_length>
	total_distance = eeprom_read_float(&EEPROM_TOTAL_DISTANCE);
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	e9 d5       	rcall	.+3026   	; 0x1862 <eeprom_read_dword>
     c90:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <total_distance>
     c94:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <total_distance+0x1>
     c98:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <total_distance+0x2>
     c9c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <total_distance+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ca0:	2f ef       	ldi	r18, 0xFF	; 255
     ca2:	30 e7       	ldi	r19, 0x70	; 112
     ca4:	42 e0       	ldi	r20, 0x02	; 2
     ca6:	21 50       	subi	r18, 0x01	; 1
     ca8:	30 40       	sbci	r19, 0x00	; 0
     caa:	40 40       	sbci	r20, 0x00	; 0
     cac:	e1 f7       	brne	.-8      	; 0xca6 <main+0x2c>
     cae:	00 c0       	rjmp	.+0      	; 0xcb0 <main+0x36>
     cb0:	00 00       	nop
	
	_delay_ms(100);
	ssd1306_init();
     cb2:	65 d1       	rcall	.+714    	; 0xf7e <ssd1306_init>
	ssd1306_clear();
     cb4:	20 e0       	ldi	r18, 0x00	; 0
     cb6:	40 e0       	ldi	r20, 0x00	; 0
     cb8:	60 e0       	ldi	r22, 0x00	; 0
     cba:	80 e0       	ldi	r24, 0x00	; 0
     cbc:	8f d1       	rcall	.+798    	; 0xfdc <ssd1306_fill4>
	display_update();
     cbe:	76 dd       	rcall	.-1300   	; 0x7ac <display_update>
	
	display_turned = true;
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <display_turned>
		timer_now = millis();
		
		wheel_pin_state = PINB & _BV(WHEEL_PIN);
		// detect rotation start
		if (!wheel_pin_state && !wheel_rotation_started) {
			wheel_rotation_started = true;
     cc6:	d1 e0       	ldi	r29, 0x01	; 1
		
		handle_btn_click(PINB & _BV(BTN_PIN), timer_now);
		
		// toggle led every 250 ms
		if (led_turned && (timer_now - led_timer) >= 250) {
			PORTB ^= _BV(LED_PIN);
     cc8:	c0 e1       	ldi	r28, 0x10	; 16
	
	uint32_t timer_now;
	bool wheel_pin_state;
    
    while (1) {
		timer_now = millis();
     cca:	00 dd       	rcall	.-1536   	; 0x6cc <millis>
     ccc:	6b 01       	movw	r12, r22
     cce:	7c 01       	movw	r14, r24
		
		wheel_pin_state = PINB & _BV(WHEEL_PIN);
		// detect rotation start
		if (!wheel_pin_state && !wheel_rotation_started) {
     cd0:	b2 99       	sbic	0x16, 2	; 22
     cd2:	13 c1       	rjmp	.+550    	; 0xefa <main+0x280>
     cd4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <wheel_rotation_started>
     cd8:	81 11       	cpse	r24, r1
     cda:	5c c0       	rjmp	.+184    	; 0xd94 <main+0x11a>
			wheel_rotation_started = true;
     cdc:	d0 93 08 01 	sts	0x0108, r29	; 0x800108 <wheel_rotation_started>
     ce0:	59 c0       	rjmp	.+178    	; 0xd94 <main+0x11a>
		}
		// detect when magnet passes by the hall sensor
		if (wheel_pin_state && wheel_rotation_started) {
			wheel_rotation_started = false;
     ce2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <wheel_rotation_started>
			
			wheel_rotation_last_time = timer_now;
     ce6:	c0 92 0d 01 	sts	0x010D, r12	; 0x80010d <wheel_rotation_last_time>
     cea:	d0 92 0e 01 	sts	0x010E, r13	; 0x80010e <wheel_rotation_last_time+0x1>
     cee:	e0 92 0f 01 	sts	0x010F, r14	; 0x80010f <wheel_rotation_last_time+0x2>
     cf2:	f0 92 10 01 	sts	0x0110, r15	; 0x800110 <wheel_rotation_last_time+0x3>
			if (wheel_rotation_start_time == 0) {
     cf6:	80 91 bf 00 	lds	r24, 0x00BF	; 0x8000bf <wheel_rotation_start_time>
     cfa:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <wheel_rotation_start_time+0x1>
     cfe:	a0 91 c1 00 	lds	r26, 0x00C1	; 0x8000c1 <wheel_rotation_start_time+0x2>
     d02:	b0 91 c2 00 	lds	r27, 0x00C2	; 0x8000c2 <wheel_rotation_start_time+0x3>
     d06:	89 2b       	or	r24, r25
     d08:	8a 2b       	or	r24, r26
     d0a:	8b 2b       	or	r24, r27
     d0c:	41 f4       	brne	.+16     	; 0xd1e <main+0xa4>
				wheel_rotation_start_time = timer_now;
     d0e:	c0 92 bf 00 	sts	0x00BF, r12	; 0x8000bf <wheel_rotation_start_time>
     d12:	d0 92 c0 00 	sts	0x00C0, r13	; 0x8000c0 <wheel_rotation_start_time+0x1>
     d16:	e0 92 c1 00 	sts	0x00C1, r14	; 0x8000c1 <wheel_rotation_start_time+0x2>
     d1a:	f0 92 c2 00 	sts	0x00C2, r15	; 0x8000c2 <wheel_rotation_start_time+0x3>
			}

			wheel_rotation_counter++;
     d1e:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <wheel_rotation_counter>
     d22:	8f 5f       	subi	r24, 0xFF	; 255
     d24:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <wheel_rotation_counter>
			distance += wheel_length;
     d28:	80 90 cd 00 	lds	r8, 0x00CD	; 0x8000cd <wheel_length>
     d2c:	90 90 ce 00 	lds	r9, 0x00CE	; 0x8000ce <wheel_length+0x1>
     d30:	a0 90 cf 00 	lds	r10, 0x00CF	; 0x8000cf <wheel_length+0x2>
     d34:	b0 90 d0 00 	lds	r11, 0x00D0	; 0x8000d0 <wheel_length+0x3>
     d38:	a5 01       	movw	r20, r10
     d3a:	94 01       	movw	r18, r8
     d3c:	60 91 d1 00 	lds	r22, 0x00D1	; 0x8000d1 <distance>
     d40:	70 91 d2 00 	lds	r23, 0x00D2	; 0x8000d2 <distance+0x1>
     d44:	80 91 d3 00 	lds	r24, 0x00D3	; 0x8000d3 <distance+0x2>
     d48:	90 91 d4 00 	lds	r25, 0x00D4	; 0x8000d4 <distance+0x3>
     d4c:	fb d2       	rcall	.+1526   	; 0x1344 <__addsf3>
     d4e:	60 93 d1 00 	sts	0x00D1, r22	; 0x8000d1 <distance>
     d52:	70 93 d2 00 	sts	0x00D2, r23	; 0x8000d2 <distance+0x1>
     d56:	80 93 d3 00 	sts	0x00D3, r24	; 0x8000d3 <distance+0x2>
     d5a:	90 93 d4 00 	sts	0x00D4, r25	; 0x8000d4 <distance+0x3>
			period_distance += wheel_length;
     d5e:	20 91 b6 00 	lds	r18, 0x00B6	; 0x8000b6 <period_distance>
     d62:	30 91 b7 00 	lds	r19, 0x00B7	; 0x8000b7 <period_distance+0x1>
     d66:	40 91 b8 00 	lds	r20, 0x00B8	; 0x8000b8 <period_distance+0x2>
     d6a:	50 91 b9 00 	lds	r21, 0x00B9	; 0x8000b9 <period_distance+0x3>
     d6e:	c5 01       	movw	r24, r10
     d70:	b4 01       	movw	r22, r8
     d72:	e8 d2       	rcall	.+1488   	; 0x1344 <__addsf3>
     d74:	60 93 b6 00 	sts	0x00B6, r22	; 0x8000b6 <period_distance>
     d78:	70 93 b7 00 	sts	0x00B7, r23	; 0x8000b7 <period_distance+0x1>
     d7c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <period_distance+0x2>
     d80:	90 93 b9 00 	sts	0x00B9, r25	; 0x8000b9 <period_distance+0x3>
			
			// save total distance every km
			if (period_distance >= 1.0) {
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	40 e8       	ldi	r20, 0x80	; 128
     d8a:	5f e3       	ldi	r21, 0x3F	; 63
     d8c:	8e d4       	rcall	.+2332   	; 0x16aa <__gesf2>
     d8e:	88 23       	and	r24, r24
     d90:	0c f0       	brlt	.+2      	; 0xd94 <main+0x11a>
				save_distance();
     d92:	d1 dc       	rcall	.-1630   	; 0x736 <save_distance>
			}
		}
		
		calc_speed(timer_now);
     d94:	c7 01       	movw	r24, r14
     d96:	b6 01       	movw	r22, r12
     d98:	f8 de       	rcall	.-528    	; 0xb8a <calc_speed>
		
		handle_btn_click(PINB & _BV(BTN_PIN), timer_now);
     d9a:	86 b3       	in	r24, 0x16	; 22
     d9c:	b7 01       	movw	r22, r14
     d9e:	a6 01       	movw	r20, r12
     da0:	88 70       	andi	r24, 0x08	; 8
     da2:	01 de       	rcall	.-1022   	; 0x9a6 <handle_btn_click>
		
		// toggle led every 250 ms
		if (led_turned && (timer_now - led_timer) >= 250) {
     da4:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <led_turned>
     da8:	88 23       	and	r24, r24
     daa:	f1 f0       	breq	.+60     	; 0xde8 <main+0x16e>
     dac:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <led_timer>
     db0:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <led_timer+0x1>
     db4:	a0 91 d7 00 	lds	r26, 0x00D7	; 0x8000d7 <led_timer+0x2>
     db8:	b0 91 d8 00 	lds	r27, 0x00D8	; 0x8000d8 <led_timer+0x3>
     dbc:	a7 01       	movw	r20, r14
     dbe:	96 01       	movw	r18, r12
     dc0:	28 1b       	sub	r18, r24
     dc2:	39 0b       	sbc	r19, r25
     dc4:	4a 0b       	sbc	r20, r26
     dc6:	5b 0b       	sbc	r21, r27
     dc8:	2a 3f       	cpi	r18, 0xFA	; 250
     dca:	31 05       	cpc	r19, r1
     dcc:	41 05       	cpc	r20, r1
     dce:	51 05       	cpc	r21, r1
     dd0:	58 f0       	brcs	.+22     	; 0xde8 <main+0x16e>
			PORTB ^= _BV(LED_PIN);
     dd2:	88 b3       	in	r24, 0x18	; 24
     dd4:	8c 27       	eor	r24, r28
     dd6:	88 bb       	out	0x18, r24	; 24
			led_timer = timer_now;
     dd8:	c0 92 d5 00 	sts	0x00D5, r12	; 0x8000d5 <led_timer>
     ddc:	d0 92 d6 00 	sts	0x00D6, r13	; 0x8000d6 <led_timer+0x1>
     de0:	e0 92 d7 00 	sts	0x00D7, r14	; 0x8000d7 <led_timer+0x2>
     de4:	f0 92 d8 00 	sts	0x00D8, r15	; 0x8000d8 <led_timer+0x3>
		}
		
		// idle
		if (speed != 0 && timer_now - wheel_rotation_last_time >= 4000) {
     de8:	20 e0       	ldi	r18, 0x00	; 0
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	a9 01       	movw	r20, r18
     dee:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <speed>
     df2:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <speed+0x1>
     df6:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <speed+0x2>
     dfa:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <speed+0x3>
     dfe:	06 d3       	rcall	.+1548   	; 0x140c <__cmpsf2>
     e00:	88 23       	and	r24, r24
     e02:	81 f1       	breq	.+96     	; 0xe64 <main+0x1ea>
     e04:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <wheel_rotation_last_time>
     e08:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <wheel_rotation_last_time+0x1>
     e0c:	a0 91 0f 01 	lds	r26, 0x010F	; 0x80010f <wheel_rotation_last_time+0x2>
     e10:	b0 91 10 01 	lds	r27, 0x0110	; 0x800110 <wheel_rotation_last_time+0x3>
     e14:	a7 01       	movw	r20, r14
     e16:	96 01       	movw	r18, r12
     e18:	28 1b       	sub	r18, r24
     e1a:	39 0b       	sbc	r19, r25
     e1c:	4a 0b       	sbc	r20, r26
     e1e:	5b 0b       	sbc	r21, r27
     e20:	da 01       	movw	r26, r20
     e22:	c9 01       	movw	r24, r18
     e24:	80 3a       	cpi	r24, 0xA0	; 160
     e26:	9f 40       	sbci	r25, 0x0F	; 15
     e28:	a1 05       	cpc	r26, r1
     e2a:	b1 05       	cpc	r27, r1
     e2c:	d8 f0       	brcs	.+54     	; 0xe64 <main+0x1ea>
			speed = 0;
     e2e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <speed>
     e32:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <speed+0x1>
     e36:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <speed+0x2>
     e3a:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <speed+0x3>
			wheel_rpm = 0;
     e3e:	10 92 cc 00 	sts	0x00CC, r1	; 0x8000cc <wheel_rpm+0x1>
     e42:	10 92 cb 00 	sts	0x00CB, r1	; 0x8000cb <wheel_rpm>
			wheel_rotation_counter = 0;
     e46:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <wheel_rotation_counter>
			wheel_rotation_start_time = 0;
     e4a:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <wheel_rotation_start_time>
     e4e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <wheel_rotation_start_time+0x1>
     e52:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <wheel_rotation_start_time+0x2>
     e56:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <wheel_rotation_start_time+0x3>
			if (display_menu == MENU_MAIN) {
     e5a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <display_menu>
     e5e:	81 11       	cpse	r24, r1
     e60:	51 c0       	rjmp	.+162    	; 0xf04 <main+0x28a>
				display_update();
     e62:	a4 dc       	rcall	.-1720   	; 0x7ac <display_update>
			}
		}
		
		bool upd_time = display_menu == MENU_TIME && timer_now - display_timer >= 1000;
     e64:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <display_menu>
     e68:	83 30       	cpi	r24, 0x03	; 3
     e6a:	b1 f4       	brne	.+44     	; 0xe98 <main+0x21e>
     e6c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <display_timer>
     e70:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <display_timer+0x1>
     e74:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <display_timer+0x2>
     e78:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <display_timer+0x3>
     e7c:	a7 01       	movw	r20, r14
     e7e:	96 01       	movw	r18, r12
     e80:	28 1b       	sub	r18, r24
     e82:	39 0b       	sbc	r19, r25
     e84:	4a 0b       	sbc	r20, r26
     e86:	5b 0b       	sbc	r21, r27
     e88:	da 01       	movw	r26, r20
     e8a:	c9 01       	movw	r24, r18
     e8c:	88 3e       	cpi	r24, 0xE8	; 232
     e8e:	93 40       	sbci	r25, 0x03	; 3
     e90:	a1 05       	cpc	r26, r1
     e92:	b1 05       	cpc	r27, r1
     e94:	40 f5       	brcc	.+80     	; 0xee6 <main+0x26c>
     e96:	19 cf       	rjmp	.-462    	; 0xcca <main+0x50>
		bool upd_speed = display_menu == MENU_MAIN && speed > 0 && timer_now - display_timer >= 4000;
     e98:	81 11       	cpse	r24, r1
     e9a:	17 cf       	rjmp	.-466    	; 0xcca <main+0x50>
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	a9 01       	movw	r20, r18
     ea2:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <speed>
     ea6:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <speed+0x1>
     eaa:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <speed+0x2>
     eae:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <speed+0x3>
     eb2:	fb d3       	rcall	.+2038   	; 0x16aa <__gesf2>
     eb4:	18 16       	cp	r1, r24
     eb6:	0c f0       	brlt	.+2      	; 0xeba <main+0x240>
     eb8:	08 cf       	rjmp	.-496    	; 0xcca <main+0x50>
     eba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <display_timer>
     ebe:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <display_timer+0x1>
     ec2:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <display_timer+0x2>
     ec6:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <display_timer+0x3>
     eca:	a7 01       	movw	r20, r14
     ecc:	96 01       	movw	r18, r12
     ece:	28 1b       	sub	r18, r24
     ed0:	39 0b       	sbc	r19, r25
     ed2:	4a 0b       	sbc	r20, r26
     ed4:	5b 0b       	sbc	r21, r27
     ed6:	da 01       	movw	r26, r20
     ed8:	c9 01       	movw	r24, r18
     eda:	80 3a       	cpi	r24, 0xA0	; 160
     edc:	9f 40       	sbci	r25, 0x0F	; 15
     ede:	a1 05       	cpc	r26, r1
     ee0:	b1 05       	cpc	r27, r1
     ee2:	08 f4       	brcc	.+2      	; 0xee6 <main+0x26c>
     ee4:	f2 ce       	rjmp	.-540    	; 0xcca <main+0x50>
		if (upd_time || upd_speed) {
			display_update();
     ee6:	62 dc       	rcall	.-1852   	; 0x7ac <display_update>
			display_timer = timer_now;
     ee8:	c0 92 00 01 	sts	0x0100, r12	; 0x800100 <display_timer>
     eec:	d0 92 01 01 	sts	0x0101, r13	; 0x800101 <display_timer+0x1>
     ef0:	e0 92 02 01 	sts	0x0102, r14	; 0x800102 <display_timer+0x2>
     ef4:	f0 92 03 01 	sts	0x0103, r15	; 0x800103 <display_timer+0x3>
     ef8:	e8 ce       	rjmp	.-560    	; 0xcca <main+0x50>
		// detect rotation start
		if (!wheel_pin_state && !wheel_rotation_started) {
			wheel_rotation_started = true;
		}
		// detect when magnet passes by the hall sensor
		if (wheel_pin_state && wheel_rotation_started) {
     efa:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <wheel_rotation_started>
     efe:	81 11       	cpse	r24, r1
     f00:	f0 ce       	rjmp	.-544    	; 0xce2 <main+0x68>
     f02:	48 cf       	rjmp	.-368    	; 0xd94 <main+0x11a>
			if (display_menu == MENU_MAIN) {
				display_update();
			}
		}
		
		bool upd_time = display_menu == MENU_TIME && timer_now - display_timer >= 1000;
     f04:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <display_menu>
     f08:	83 30       	cpi	r24, 0x03	; 3
     f0a:	09 f0       	breq	.+2      	; 0xf0e <main+0x294>
     f0c:	de ce       	rjmp	.-580    	; 0xcca <main+0x50>
     f0e:	ae cf       	rjmp	.-164    	; 0xe6c <main+0x1f2>

00000f10 <i2csw_start>:
     f10:	b8 9a       	sbi	0x17, 0	; 23
     f12:	b9 9a       	sbi	0x17, 1	; 23
     f14:	c1 9a       	sbi	0x18, 1	; 24
     f16:	c0 9a       	sbi	0x18, 0	; 24
     f18:	c0 98       	cbi	0x18, 0	; 24
     f1a:	c1 98       	cbi	0x18, 1	; 24
     f1c:	08 95       	ret

00000f1e <i2csw_stop>:
     f1e:	c1 98       	cbi	0x18, 1	; 24
     f20:	c0 98       	cbi	0x18, 0	; 24
     f22:	c1 9a       	sbi	0x18, 1	; 24
     f24:	c0 9a       	sbi	0x18, 0	; 24
     f26:	b8 98       	cbi	0x17, 0	; 23
     f28:	08 95       	ret

00000f2a <i2csw_byte>:
     f2a:	20 e0       	ldi	r18, 0x00	; 0
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	ac 01       	movw	r20, r24
     f32:	02 2e       	mov	r0, r18
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <i2csw_byte+0x10>
     f36:	44 0f       	add	r20, r20
     f38:	55 1f       	adc	r21, r21
     f3a:	0a 94       	dec	r0
     f3c:	e2 f7       	brpl	.-8      	; 0xf36 <i2csw_byte+0xc>
     f3e:	47 ff       	sbrs	r20, 7
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <i2csw_byte+0x1c>
     f42:	c0 9a       	sbi	0x18, 0	; 24
     f44:	01 c0       	rjmp	.+2      	; 0xf48 <i2csw_byte+0x1e>
     f46:	c0 98       	cbi	0x18, 0	; 24
     f48:	c1 9a       	sbi	0x18, 1	; 24
     f4a:	c1 98       	cbi	0x18, 1	; 24
     f4c:	2f 5f       	subi	r18, 0xFF	; 255
     f4e:	3f 4f       	sbci	r19, 0xFF	; 255
     f50:	28 30       	cpi	r18, 0x08	; 8
     f52:	31 05       	cpc	r19, r1
     f54:	69 f7       	brne	.-38     	; 0xf30 <i2csw_byte+0x6>
     f56:	c0 9a       	sbi	0x18, 0	; 24
     f58:	c1 9a       	sbi	0x18, 1	; 24
     f5a:	c1 98       	cbi	0x18, 1	; 24
     f5c:	08 95       	ret

00000f5e <ssd1306_start_command>:
     f5e:	d8 df       	rcall	.-80     	; 0xf10 <i2csw_start>
     f60:	88 e7       	ldi	r24, 0x78	; 120
     f62:	e3 df       	rcall	.-58     	; 0xf2a <i2csw_byte>
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	e1 df       	rcall	.-62     	; 0xf2a <i2csw_byte>
     f68:	08 95       	ret

00000f6a <ssd1306_start_data>:
     f6a:	d2 df       	rcall	.-92     	; 0xf10 <i2csw_start>
     f6c:	88 e7       	ldi	r24, 0x78	; 120
     f6e:	dd df       	rcall	.-70     	; 0xf2a <i2csw_byte>
     f70:	80 e4       	ldi	r24, 0x40	; 64
     f72:	db df       	rcall	.-74     	; 0xf2a <i2csw_byte>
     f74:	08 95       	ret

00000f76 <ssd1306_data_byte>:
     f76:	d9 df       	rcall	.-78     	; 0xf2a <i2csw_byte>
     f78:	08 95       	ret

00000f7a <ssd1306_stop>:
     f7a:	d1 df       	rcall	.-94     	; 0xf1e <i2csw_stop>
     f7c:	08 95       	ret

00000f7e <ssd1306_init>:
     f7e:	0f 93       	push	r16
     f80:	1f 93       	push	r17
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	eb df       	rcall	.-42     	; 0xf5e <ssd1306_start_command>
     f88:	ce e1       	ldi	r28, 0x1E	; 30
     f8a:	d0 e0       	ldi	r29, 0x00	; 0
     f8c:	0e e3       	ldi	r16, 0x3E	; 62
     f8e:	10 e0       	ldi	r17, 0x00	; 0
     f90:	fe 01       	movw	r30, r28
     f92:	84 91       	lpm	r24, Z
     f94:	ca df       	rcall	.-108    	; 0xf2a <i2csw_byte>
     f96:	21 96       	adiw	r28, 0x01	; 1
     f98:	c0 17       	cp	r28, r16
     f9a:	d1 07       	cpc	r29, r17
     f9c:	c9 f7       	brne	.-14     	; 0xf90 <ssd1306_init+0x12>
     f9e:	bf df       	rcall	.-130    	; 0xf1e <i2csw_stop>
     fa0:	df 91       	pop	r29
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	08 95       	ret

00000faa <ssd1306_set_pos>:
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
     fae:	c8 2f       	mov	r28, r24
     fb0:	d6 2f       	mov	r29, r22
     fb2:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <pos_x>
     fb6:	60 93 b2 00 	sts	0x00B2, r22	; 0x8000b2 <__data_end>
     fba:	d1 df       	rcall	.-94     	; 0xf5e <ssd1306_start_command>
     fbc:	8d 2f       	mov	r24, r29
     fbe:	87 70       	andi	r24, 0x07	; 7
     fc0:	80 6b       	ori	r24, 0xB0	; 176
     fc2:	b3 df       	rcall	.-154    	; 0xf2a <i2csw_byte>
     fc4:	8c 2f       	mov	r24, r28
     fc6:	8f 70       	andi	r24, 0x0F	; 15
     fc8:	b0 df       	rcall	.-160    	; 0xf2a <i2csw_byte>
     fca:	8c 2f       	mov	r24, r28
     fcc:	82 95       	swap	r24
     fce:	8f 70       	andi	r24, 0x0F	; 15
     fd0:	80 61       	ori	r24, 0x10	; 16
     fd2:	ab df       	rcall	.-170    	; 0xf2a <i2csw_byte>
     fd4:	a4 df       	rcall	.-184    	; 0xf1e <i2csw_stop>
     fd6:	df 91       	pop	r29
     fd8:	cf 91       	pop	r28
     fda:	08 95       	ret

00000fdc <ssd1306_fill4>:
     fdc:	ef 92       	push	r14
     fde:	ff 92       	push	r15
     fe0:	0f 93       	push	r16
     fe2:	1f 93       	push	r17
     fe4:	cf 93       	push	r28
     fe6:	df 93       	push	r29
     fe8:	e8 2e       	mov	r14, r24
     fea:	f6 2e       	mov	r15, r22
     fec:	04 2f       	mov	r16, r20
     fee:	12 2f       	mov	r17, r18
     ff0:	60 e0       	ldi	r22, 0x00	; 0
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	da df       	rcall	.-76     	; 0xfaa <ssd1306_set_pos>
     ff6:	b9 df       	rcall	.-142    	; 0xf6a <ssd1306_start_data>
     ff8:	c0 e0       	ldi	r28, 0x00	; 0
     ffa:	d1 e0       	ldi	r29, 0x01	; 1
     ffc:	8e 2d       	mov	r24, r14
     ffe:	95 df       	rcall	.-214    	; 0xf2a <i2csw_byte>
    1000:	8f 2d       	mov	r24, r15
    1002:	93 df       	rcall	.-218    	; 0xf2a <i2csw_byte>
    1004:	80 2f       	mov	r24, r16
    1006:	91 df       	rcall	.-222    	; 0xf2a <i2csw_byte>
    1008:	81 2f       	mov	r24, r17
    100a:	8f df       	rcall	.-226    	; 0xf2a <i2csw_byte>
    100c:	21 97       	sbiw	r28, 0x01	; 1
    100e:	b1 f7       	brne	.-20     	; 0xffc <ssd1306_fill4+0x20>
    1010:	86 df       	rcall	.-244    	; 0xf1e <i2csw_stop>
    1012:	df 91       	pop	r29
    1014:	cf 91       	pop	r28
    1016:	1f 91       	pop	r17
    1018:	0f 91       	pop	r16
    101a:	ff 90       	pop	r15
    101c:	ef 90       	pop	r14
    101e:	08 95       	ret

00001020 <ssd1306_turn_display>:
    1020:	cf 93       	push	r28
    1022:	c8 2f       	mov	r28, r24
    1024:	9c df       	rcall	.-200    	; 0xf5e <ssd1306_start_command>
    1026:	c1 11       	cpse	r28, r1
    1028:	02 c0       	rjmp	.+4      	; 0x102e <ssd1306_turn_display+0xe>
    102a:	8e ea       	ldi	r24, 0xAE	; 174
    102c:	01 c0       	rjmp	.+2      	; 0x1030 <ssd1306_turn_display+0x10>
    102e:	8f ea       	ldi	r24, 0xAF	; 175
    1030:	7c df       	rcall	.-264    	; 0xf2a <i2csw_byte>
    1032:	75 df       	rcall	.-278    	; 0xf1e <i2csw_stop>
    1034:	cf 91       	pop	r28
    1036:	08 95       	ret

00001038 <ssd1306tx_char_8x16>:
	int result = 1;
	for (; exponent > 0; exponent--) {
		result *= base;
	}
	return result;
}
    1038:	cf 92       	push	r12
    103a:	df 92       	push	r13
    103c:	ef 92       	push	r14
    103e:	ff 92       	push	r15
    1040:	0f 93       	push	r16
    1042:	1f 93       	push	r17
    1044:	cf 93       	push	r28
    1046:	df 93       	push	r29
    1048:	c6 2e       	mov	r12, r22
    104a:	d4 2e       	mov	r13, r20
    104c:	08 2f       	mov	r16, r24
    104e:	10 e0       	ldi	r17, 0x00	; 0
    1050:	00 52       	subi	r16, 0x20	; 32
    1052:	11 09       	sbc	r17, r1
    1054:	78 01       	movw	r14, r16
    1056:	ee 0c       	add	r14, r14
    1058:	ff 1c       	adc	r15, r15
    105a:	ee 0c       	add	r14, r14
    105c:	ff 1c       	adc	r15, r15
    105e:	ee 0c       	add	r14, r14
    1060:	ff 1c       	adc	r15, r15
    1062:	ee 0c       	add	r14, r14
    1064:	ff 1c       	adc	r15, r15
    1066:	64 2f       	mov	r22, r20
    1068:	8c 2d       	mov	r24, r12
    106a:	9f df       	rcall	.-194    	; 0xfaa <ssd1306_set_pos>
    106c:	7e df       	rcall	.-260    	; 0xf6a <ssd1306_start_data>
    106e:	87 01       	movw	r16, r14
    1070:	02 5c       	subi	r16, 0xC2	; 194
    1072:	1f 4f       	sbci	r17, 0xFF	; 255
    1074:	e7 01       	movw	r28, r14
    1076:	ca 5b       	subi	r28, 0xBA	; 186
    1078:	df 4f       	sbci	r29, 0xFF	; 255
    107a:	f8 01       	movw	r30, r16
    107c:	84 91       	lpm	r24, Z
    107e:	7b df       	rcall	.-266    	; 0xf76 <ssd1306_data_byte>
    1080:	0f 5f       	subi	r16, 0xFF	; 255
    1082:	1f 4f       	sbci	r17, 0xFF	; 255
    1084:	0c 17       	cp	r16, r28
    1086:	1d 07       	cpc	r17, r29
    1088:	c1 f7       	brne	.-16     	; 0x107a <ssd1306tx_char_8x16+0x42>
    108a:	77 df       	rcall	.-274    	; 0xf7a <ssd1306_stop>
    108c:	61 e0       	ldi	r22, 0x01	; 1
    108e:	6d 0d       	add	r22, r13
    1090:	8c 2d       	mov	r24, r12
    1092:	8b df       	rcall	.-234    	; 0xfaa <ssd1306_set_pos>
    1094:	6a df       	rcall	.-300    	; 0xf6a <ssd1306_start_data>
    1096:	87 01       	movw	r16, r14
    1098:	02 5b       	subi	r16, 0xB2	; 178
    109a:	1f 4f       	sbci	r17, 0xFF	; 255
    109c:	fe 01       	movw	r30, r28
    109e:	84 91       	lpm	r24, Z
    10a0:	6a df       	rcall	.-300    	; 0xf76 <ssd1306_data_byte>
    10a2:	21 96       	adiw	r28, 0x01	; 1
    10a4:	c0 17       	cp	r28, r16
    10a6:	d1 07       	cpc	r29, r17
    10a8:	c9 f7       	brne	.-14     	; 0x109c <ssd1306tx_char_8x16+0x64>
    10aa:	67 df       	rcall	.-306    	; 0xf7a <ssd1306_stop>
    10ac:	df 91       	pop	r29
    10ae:	cf 91       	pop	r28
    10b0:	1f 91       	pop	r17
    10b2:	0f 91       	pop	r16
    10b4:	ff 90       	pop	r15
    10b6:	ef 90       	pop	r14
    10b8:	df 90       	pop	r13
    10ba:	cf 90       	pop	r12
    10bc:	08 95       	ret

000010be <ssd1306tx_string>:
    10be:	0f 93       	push	r16
    10c0:	1f 93       	push	r17
    10c2:	cf 93       	push	r28
    10c4:	df 93       	push	r29
    10c6:	fc 01       	movw	r30, r24
    10c8:	c0 91 b3 00 	lds	r28, 0x00B3	; 0x8000b3 <pos_x>
    10cc:	d0 91 b2 00 	lds	r29, 0x00B2	; 0x8000b2 <__data_end>
    10d0:	80 81       	ld	r24, Z
    10d2:	88 23       	and	r24, r24
    10d4:	61 f0       	breq	.+24     	; 0x10ee <ssd1306tx_string+0x30>
    10d6:	8f 01       	movw	r16, r30
    10d8:	0f 5f       	subi	r16, 0xFF	; 255
    10da:	1f 4f       	sbci	r17, 0xFF	; 255
    10dc:	4d 2f       	mov	r20, r29
    10de:	6c 2f       	mov	r22, r28
    10e0:	ab df       	rcall	.-170    	; 0x1038 <ssd1306tx_char_8x16>
    10e2:	c8 5f       	subi	r28, 0xF8	; 248
    10e4:	f8 01       	movw	r30, r16
    10e6:	81 91       	ld	r24, Z+
    10e8:	8f 01       	movw	r16, r30
    10ea:	81 11       	cpse	r24, r1
    10ec:	f7 cf       	rjmp	.-18     	; 0x10dc <ssd1306tx_string+0x1e>
    10ee:	6d 2f       	mov	r22, r29
    10f0:	8c 2f       	mov	r24, r28
    10f2:	5b df       	rcall	.-330    	; 0xfaa <ssd1306_set_pos>
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	0f 91       	pop	r16
    10fc:	08 95       	ret

000010fe <itoa>:
    10fe:	cf 92       	push	r12
    1100:	df 92       	push	r13
    1102:	ef 92       	push	r14
    1104:	ff 92       	push	r15
    1106:	0f 93       	push	r16
    1108:	1f 93       	push	r17
    110a:	cf 93       	push	r28
    110c:	df 93       	push	r29
    110e:	7b 01       	movw	r14, r22
    1110:	fa 01       	movw	r30, r20
    1112:	99 23       	and	r25, r25
    1114:	34 f4       	brge	.+12     	; 0x1122 <itoa+0x24>
    1116:	2d e2       	ldi	r18, 0x2D	; 45
    1118:	20 83       	st	Z, r18
    111a:	91 95       	neg	r25
    111c:	81 95       	neg	r24
    111e:	91 09       	sbc	r25, r1
    1120:	31 96       	adiw	r30, 0x01	; 1
    1122:	8f 01       	movw	r16, r30
    1124:	ef 01       	movw	r28, r30
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	0f 2e       	mov	r0, r31
    112c:	fa e0       	ldi	r31, 0x0A	; 10
    112e:	cf 2e       	mov	r12, r31
    1130:	d1 2c       	mov	r13, r1
    1132:	f0 2d       	mov	r31, r0
    1134:	2f 5f       	subi	r18, 0xFF	; 255
    1136:	3f 4f       	sbci	r19, 0xFF	; 255
    1138:	b6 01       	movw	r22, r12
    113a:	26 d3       	rcall	.+1612   	; 0x1788 <__divmodhi4>
    113c:	80 5d       	subi	r24, 0xD0	; 208
    113e:	89 93       	st	Y+, r24
    1140:	86 2f       	mov	r24, r22
    1142:	97 2f       	mov	r25, r23
    1144:	18 16       	cp	r1, r24
    1146:	19 06       	cpc	r1, r25
    1148:	ac f3       	brlt	.-22     	; 0x1134 <itoa+0x36>
    114a:	2e 15       	cp	r18, r14
    114c:	3f 05       	cpc	r19, r15
    114e:	64 f4       	brge	.+24     	; 0x1168 <itoa+0x6a>
    1150:	df 01       	movw	r26, r30
    1152:	a2 0f       	add	r26, r18
    1154:	b3 1f       	adc	r27, r19
    1156:	9f 01       	movw	r18, r30
    1158:	2e 0d       	add	r18, r14
    115a:	3f 1d       	adc	r19, r15
    115c:	80 e3       	ldi	r24, 0x30	; 48
    115e:	8d 93       	st	X+, r24
    1160:	a2 17       	cp	r26, r18
    1162:	b3 07       	cpc	r27, r19
    1164:	e1 f7       	brne	.-8      	; 0x115e <itoa+0x60>
    1166:	01 c0       	rjmp	.+2      	; 0x116a <itoa+0x6c>
    1168:	79 01       	movw	r14, r18
    116a:	ee 0d       	add	r30, r14
    116c:	ff 1d       	adc	r31, r15
    116e:	10 82       	st	Z, r1
    1170:	e7 01       	movw	r28, r14
    1172:	21 97       	sbiw	r28, 0x01	; 1
    1174:	1c 16       	cp	r1, r28
    1176:	1d 06       	cpc	r1, r29
    1178:	6c f4       	brge	.+26     	; 0x1194 <itoa+0x96>
    117a:	80 e0       	ldi	r24, 0x00	; 0
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	d8 01       	movw	r26, r16
    1180:	2c 91       	ld	r18, X
    1182:	32 91       	ld	r19, -Z
    1184:	3d 93       	st	X+, r19
    1186:	8d 01       	movw	r16, r26
    1188:	20 83       	st	Z, r18
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	21 97       	sbiw	r28, 0x01	; 1
    118e:	8c 17       	cp	r24, r28
    1190:	9d 07       	cpc	r25, r29
    1192:	ac f3       	brlt	.-22     	; 0x117e <itoa+0x80>
    1194:	df 91       	pop	r29
    1196:	cf 91       	pop	r28
    1198:	1f 91       	pop	r17
    119a:	0f 91       	pop	r16
    119c:	ff 90       	pop	r15
    119e:	ef 90       	pop	r14
    11a0:	df 90       	pop	r13
    11a2:	cf 90       	pop	r12
    11a4:	08 95       	ret

000011a6 <ssd1306tx_int_p>:
    11a6:	cf 93       	push	r28
    11a8:	df 93       	push	r29
    11aa:	00 d0       	rcall	.+0      	; 0x11ac <ssd1306tx_int_p+0x6>
    11ac:	00 d0       	rcall	.+0      	; 0x11ae <ssd1306tx_int_p+0x8>
    11ae:	1f 92       	push	r1
    11b0:	cd b7       	in	r28, 0x3d	; 61
    11b2:	de b7       	in	r29, 0x3e	; 62
    11b4:	88 3e       	cpi	r24, 0xE8	; 232
    11b6:	23 e0       	ldi	r18, 0x03	; 3
    11b8:	92 07       	cpc	r25, r18
    11ba:	38 f4       	brcc	.+14     	; 0x11ca <ssd1306tx_int_p+0x24>
    11bc:	ae 01       	movw	r20, r28
    11be:	4f 5f       	subi	r20, 0xFF	; 255
    11c0:	5f 4f       	sbci	r21, 0xFF	; 255
    11c2:	9d df       	rcall	.-198    	; 0x10fe <itoa>
    11c4:	ce 01       	movw	r24, r28
    11c6:	01 96       	adiw	r24, 0x01	; 1
    11c8:	7a df       	rcall	.-268    	; 0x10be <ssd1306tx_string>
    11ca:	0f 90       	pop	r0
    11cc:	0f 90       	pop	r0
    11ce:	0f 90       	pop	r0
    11d0:	0f 90       	pop	r0
    11d2:	0f 90       	pop	r0
    11d4:	df 91       	pop	r29
    11d6:	cf 91       	pop	r28
    11d8:	08 95       	ret

000011da <ssd1306tx_int>:
    11da:	60 e0       	ldi	r22, 0x00	; 0
    11dc:	70 e0       	ldi	r23, 0x00	; 0
    11de:	e3 df       	rcall	.-58     	; 0x11a6 <ssd1306tx_int_p>
    11e0:	08 95       	ret

000011e2 <ftoa>:

void ftoa(float f, int precision, char *buf) {
    11e2:	4f 92       	push	r4
    11e4:	5f 92       	push	r5
    11e6:	6f 92       	push	r6
    11e8:	7f 92       	push	r7
    11ea:	af 92       	push	r10
    11ec:	bf 92       	push	r11
    11ee:	cf 92       	push	r12
    11f0:	df 92       	push	r13
    11f2:	ef 92       	push	r14
    11f4:	ff 92       	push	r15
    11f6:	0f 93       	push	r16
    11f8:	1f 93       	push	r17
    11fa:	cf 93       	push	r28
    11fc:	df 93       	push	r29
    11fe:	6b 01       	movw	r12, r22
    1200:	7c 01       	movw	r14, r24
    1202:	5a 01       	movw	r10, r20
    1204:	e9 01       	movw	r28, r18
	if (f < 0) {
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	a9 01       	movw	r20, r18
    120c:	ff d0       	rcall	.+510    	; 0x140c <__cmpsf2>
    120e:	88 23       	and	r24, r24
    1210:	3c f4       	brge	.+14     	; 0x1220 <ftoa+0x3e>
		*buf++ = '-';
    1212:	8d e2       	ldi	r24, 0x2D	; 45
    1214:	88 83       	st	Y, r24
		f = -f;
    1216:	f7 fa       	bst	r15, 7
    1218:	f0 94       	com	r15
    121a:	f7 f8       	bld	r15, 7
    121c:	f0 94       	com	r15
	return result;
}

void ftoa(float f, int precision, char *buf) {
	if (f < 0) {
		*buf++ = '-';
    121e:	21 96       	adiw	r28, 0x01	; 1
		f = -f;
	}

	int n = (int) f;                // extract integer part
    1220:	c7 01       	movw	r24, r14
    1222:	b6 01       	movw	r22, r12
    1224:	5f d1       	rcall	.+702    	; 0x14e4 <__fixsfsi>
    1226:	2b 01       	movw	r4, r22
    1228:	3c 01       	movw	r6, r24
	float d = f - (float) n;        // extract floating part	
    122a:	07 2e       	mov	r0, r23
    122c:	00 0c       	add	r0, r0
    122e:	88 0b       	sbc	r24, r24
    1230:	99 0b       	sbc	r25, r25
    1232:	8b d1       	rcall	.+790    	; 0x154a <__floatsisf>
    1234:	9b 01       	movw	r18, r22
    1236:	ac 01       	movw	r20, r24
    1238:	c7 01       	movw	r24, r14
    123a:	b6 01       	movw	r22, r12
    123c:	82 d0       	rcall	.+260    	; 0x1342 <__subsf3>
    123e:	6b 01       	movw	r12, r22
    1240:	7c 01       	movw	r14, r24
	itoa(n, 0, buf);                // convert integer part to string
    1242:	ae 01       	movw	r20, r28
    1244:	60 e0       	ldi	r22, 0x00	; 0
    1246:	70 e0       	ldi	r23, 0x00	; 0
    1248:	c2 01       	movw	r24, r4
    124a:	59 df       	rcall	.-334    	; 0x10fe <itoa>

	while (*buf != '\0') buf++;
    124c:	88 81       	ld	r24, Y
    124e:	88 23       	and	r24, r24
    1250:	39 f0       	breq	.+14     	; 0x1260 <ftoa+0x7e>
    1252:	ce 01       	movw	r24, r28
    1254:	01 96       	adiw	r24, 0x01	; 1
    1256:	ec 01       	movw	r28, r24
    1258:	01 96       	adiw	r24, 0x01	; 1
    125a:	28 81       	ld	r18, Y
    125c:	21 11       	cpse	r18, r1
    125e:	fb cf       	rjmp	.-10     	; 0x1256 <ftoa+0x74>
	*buf++ = '.';
    1260:	8e 01       	movw	r16, r28
    1262:	0f 5f       	subi	r16, 0xFF	; 255
    1264:	1f 4f       	sbci	r17, 0xFF	; 255
    1266:	8e e2       	ldi	r24, 0x2E	; 46
    1268:	88 83       	st	Y, r24
	}
}

int power(int base, int exponent) {
	int result = 1;
	for (; exponent > 0; exponent--) {
    126a:	1a 14       	cp	r1, r10
    126c:	1b 04       	cpc	r1, r11
    126e:	7c f4       	brge	.+30     	; 0x128e <ftoa+0xac>
    1270:	c5 01       	movw	r24, r10
    1272:	61 e0       	ldi	r22, 0x01	; 1
    1274:	70 e0       	ldi	r23, 0x00	; 0
		result *= base;
    1276:	9b 01       	movw	r18, r22
    1278:	22 0f       	add	r18, r18
    127a:	33 1f       	adc	r19, r19
    127c:	22 0f       	add	r18, r18
    127e:	33 1f       	adc	r19, r19
    1280:	62 0f       	add	r22, r18
    1282:	73 1f       	adc	r23, r19
    1284:	66 0f       	add	r22, r22
    1286:	77 1f       	adc	r23, r23
	}
}

int power(int base, int exponent) {
	int result = 1;
	for (; exponent > 0; exponent--) {
    1288:	01 97       	sbiw	r24, 0x01	; 1
    128a:	a9 f7       	brne	.-22     	; 0x1276 <ftoa+0x94>
    128c:	02 c0       	rjmp	.+4      	; 0x1292 <ftoa+0xb0>
		buf[j] = tmp;
	}
}

int power(int base, int exponent) {
	int result = 1;
    128e:	61 e0       	ldi	r22, 0x01	; 1
    1290:	70 e0       	ldi	r23, 0x00	; 0

	while (*buf != '\0') buf++;
	*buf++ = '.';
	
	d *= power(10, precision);
	itoa((int) d, precision, buf);  // convert floating part to string
    1292:	07 2e       	mov	r0, r23
    1294:	00 0c       	add	r0, r0
    1296:	88 0b       	sbc	r24, r24
    1298:	99 0b       	sbc	r25, r25
    129a:	57 d1       	rcall	.+686    	; 0x154a <__floatsisf>
    129c:	a7 01       	movw	r20, r14
    129e:	96 01       	movw	r18, r12
    12a0:	08 d2       	rcall	.+1040   	; 0x16b2 <__mulsf3>
    12a2:	20 d1       	rcall	.+576    	; 0x14e4 <__fixsfsi>
    12a4:	dc 01       	movw	r26, r24
    12a6:	cb 01       	movw	r24, r22
    12a8:	a8 01       	movw	r20, r16
    12aa:	b5 01       	movw	r22, r10
    12ac:	28 df       	rcall	.-432    	; 0x10fe <itoa>
    12ae:	df 91       	pop	r29
    12b0:	cf 91       	pop	r28
    12b2:	1f 91       	pop	r17
    12b4:	0f 91       	pop	r16
    12b6:	ff 90       	pop	r15
    12b8:	ef 90       	pop	r14
    12ba:	df 90       	pop	r13
    12bc:	cf 90       	pop	r12
    12be:	bf 90       	pop	r11
    12c0:	af 90       	pop	r10
    12c2:	7f 90       	pop	r7
    12c4:	6f 90       	pop	r6
    12c6:	5f 90       	pop	r5
    12c8:	4f 90       	pop	r4
    12ca:	08 95       	ret

000012cc <ssd1306tx_float>:
		ssd1306_data_byte(pgm_read_byte(&ssd1306xled_font8x16data[row + col]));
	}
	ssd1306_stop();
}

void ssd1306tx_float(float f, int precision) {
    12cc:	cf 92       	push	r12
    12ce:	df 92       	push	r13
    12d0:	ef 92       	push	r14
    12d2:	ff 92       	push	r15
    12d4:	0f 93       	push	r16
    12d6:	1f 93       	push	r17
    12d8:	cf 93       	push	r28
    12da:	df 93       	push	r29
    12dc:	cd b7       	in	r28, 0x3d	; 61
    12de:	de b7       	in	r29, 0x3e	; 62
    12e0:	2a 97       	sbiw	r28, 0x0a	; 10
    12e2:	0f b6       	in	r0, 0x3f	; 63
    12e4:	f8 94       	cli
    12e6:	de bf       	out	0x3e, r29	; 62
    12e8:	0f be       	out	0x3f, r0	; 63
    12ea:	cd bf       	out	0x3d, r28	; 61
    12ec:	6b 01       	movw	r12, r22
    12ee:	7c 01       	movw	r14, r24
    12f0:	8a 01       	movw	r16, r20
	if (f < 0 || f >= 1000) {
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	a9 01       	movw	r20, r18
    12f8:	89 d0       	rcall	.+274    	; 0x140c <__cmpsf2>
    12fa:	88 23       	and	r24, r24
    12fc:	9c f0       	brlt	.+38     	; 0x1324 <ssd1306tx_float+0x58>
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	4a e7       	ldi	r20, 0x7A	; 122
    1304:	54 e4       	ldi	r21, 0x44	; 68
    1306:	c7 01       	movw	r24, r14
    1308:	b6 01       	movw	r22, r12
    130a:	cf d1       	rcall	.+926    	; 0x16aa <__gesf2>
    130c:	88 23       	and	r24, r24
    130e:	54 f4       	brge	.+20     	; 0x1324 <ssd1306tx_float+0x58>
		return;
	}
	
	char buf[10];
	ftoa(f, precision, buf);
    1310:	9e 01       	movw	r18, r28
    1312:	2f 5f       	subi	r18, 0xFF	; 255
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	a8 01       	movw	r20, r16
    1318:	c7 01       	movw	r24, r14
    131a:	b6 01       	movw	r22, r12
    131c:	62 df       	rcall	.-316    	; 0x11e2 <ftoa>
	ssd1306tx_string(buf);
    131e:	ce 01       	movw	r24, r28
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	cd de       	rcall	.-614    	; 0x10be <ssd1306tx_string>
}
    1324:	2a 96       	adiw	r28, 0x0a	; 10
    1326:	0f b6       	in	r0, 0x3f	; 63
    1328:	f8 94       	cli
    132a:	de bf       	out	0x3e, r29	; 62
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	cd bf       	out	0x3d, r28	; 61
    1330:	df 91       	pop	r29
    1332:	cf 91       	pop	r28
    1334:	1f 91       	pop	r17
    1336:	0f 91       	pop	r16
    1338:	ff 90       	pop	r15
    133a:	ef 90       	pop	r14
    133c:	df 90       	pop	r13
    133e:	cf 90       	pop	r12
    1340:	08 95       	ret

00001342 <__subsf3>:
    1342:	50 58       	subi	r21, 0x80	; 128

00001344 <__addsf3>:
    1344:	bb 27       	eor	r27, r27
    1346:	aa 27       	eor	r26, r26
    1348:	0e d0       	rcall	.+28     	; 0x1366 <__addsf3x>
    134a:	75 c1       	rjmp	.+746    	; 0x1636 <__fp_round>
    134c:	66 d1       	rcall	.+716    	; 0x161a <__fp_pscA>
    134e:	30 f0       	brcs	.+12     	; 0x135c <__addsf3+0x18>
    1350:	6b d1       	rcall	.+726    	; 0x1628 <__fp_pscB>
    1352:	20 f0       	brcs	.+8      	; 0x135c <__addsf3+0x18>
    1354:	31 f4       	brne	.+12     	; 0x1362 <__addsf3+0x1e>
    1356:	9f 3f       	cpi	r25, 0xFF	; 255
    1358:	11 f4       	brne	.+4      	; 0x135e <__addsf3+0x1a>
    135a:	1e f4       	brtc	.+6      	; 0x1362 <__addsf3+0x1e>
    135c:	5b c1       	rjmp	.+694    	; 0x1614 <__fp_nan>
    135e:	0e f4       	brtc	.+2      	; 0x1362 <__addsf3+0x1e>
    1360:	e0 95       	com	r30
    1362:	e7 fb       	bst	r30, 7
    1364:	51 c1       	rjmp	.+674    	; 0x1608 <__fp_inf>

00001366 <__addsf3x>:
    1366:	e9 2f       	mov	r30, r25
    1368:	77 d1       	rcall	.+750    	; 0x1658 <__fp_split3>
    136a:	80 f3       	brcs	.-32     	; 0x134c <__addsf3+0x8>
    136c:	ba 17       	cp	r27, r26
    136e:	62 07       	cpc	r22, r18
    1370:	73 07       	cpc	r23, r19
    1372:	84 07       	cpc	r24, r20
    1374:	95 07       	cpc	r25, r21
    1376:	18 f0       	brcs	.+6      	; 0x137e <__addsf3x+0x18>
    1378:	71 f4       	brne	.+28     	; 0x1396 <__addsf3x+0x30>
    137a:	9e f5       	brtc	.+102    	; 0x13e2 <__addsf3x+0x7c>
    137c:	8f c1       	rjmp	.+798    	; 0x169c <__fp_zero>
    137e:	0e f4       	brtc	.+2      	; 0x1382 <__addsf3x+0x1c>
    1380:	e0 95       	com	r30
    1382:	0b 2e       	mov	r0, r27
    1384:	ba 2f       	mov	r27, r26
    1386:	a0 2d       	mov	r26, r0
    1388:	0b 01       	movw	r0, r22
    138a:	b9 01       	movw	r22, r18
    138c:	90 01       	movw	r18, r0
    138e:	0c 01       	movw	r0, r24
    1390:	ca 01       	movw	r24, r20
    1392:	a0 01       	movw	r20, r0
    1394:	11 24       	eor	r1, r1
    1396:	ff 27       	eor	r31, r31
    1398:	59 1b       	sub	r21, r25
    139a:	99 f0       	breq	.+38     	; 0x13c2 <__addsf3x+0x5c>
    139c:	59 3f       	cpi	r21, 0xF9	; 249
    139e:	50 f4       	brcc	.+20     	; 0x13b4 <__addsf3x+0x4e>
    13a0:	50 3e       	cpi	r21, 0xE0	; 224
    13a2:	68 f1       	brcs	.+90     	; 0x13fe <__addsf3x+0x98>
    13a4:	1a 16       	cp	r1, r26
    13a6:	f0 40       	sbci	r31, 0x00	; 0
    13a8:	a2 2f       	mov	r26, r18
    13aa:	23 2f       	mov	r18, r19
    13ac:	34 2f       	mov	r19, r20
    13ae:	44 27       	eor	r20, r20
    13b0:	58 5f       	subi	r21, 0xF8	; 248
    13b2:	f3 cf       	rjmp	.-26     	; 0x139a <__addsf3x+0x34>
    13b4:	46 95       	lsr	r20
    13b6:	37 95       	ror	r19
    13b8:	27 95       	ror	r18
    13ba:	a7 95       	ror	r26
    13bc:	f0 40       	sbci	r31, 0x00	; 0
    13be:	53 95       	inc	r21
    13c0:	c9 f7       	brne	.-14     	; 0x13b4 <__addsf3x+0x4e>
    13c2:	7e f4       	brtc	.+30     	; 0x13e2 <__addsf3x+0x7c>
    13c4:	1f 16       	cp	r1, r31
    13c6:	ba 0b       	sbc	r27, r26
    13c8:	62 0b       	sbc	r22, r18
    13ca:	73 0b       	sbc	r23, r19
    13cc:	84 0b       	sbc	r24, r20
    13ce:	ba f0       	brmi	.+46     	; 0x13fe <__addsf3x+0x98>
    13d0:	91 50       	subi	r25, 0x01	; 1
    13d2:	a1 f0       	breq	.+40     	; 0x13fc <__addsf3x+0x96>
    13d4:	ff 0f       	add	r31, r31
    13d6:	bb 1f       	adc	r27, r27
    13d8:	66 1f       	adc	r22, r22
    13da:	77 1f       	adc	r23, r23
    13dc:	88 1f       	adc	r24, r24
    13de:	c2 f7       	brpl	.-16     	; 0x13d0 <__addsf3x+0x6a>
    13e0:	0e c0       	rjmp	.+28     	; 0x13fe <__addsf3x+0x98>
    13e2:	ba 0f       	add	r27, r26
    13e4:	62 1f       	adc	r22, r18
    13e6:	73 1f       	adc	r23, r19
    13e8:	84 1f       	adc	r24, r20
    13ea:	48 f4       	brcc	.+18     	; 0x13fe <__addsf3x+0x98>
    13ec:	87 95       	ror	r24
    13ee:	77 95       	ror	r23
    13f0:	67 95       	ror	r22
    13f2:	b7 95       	ror	r27
    13f4:	f7 95       	ror	r31
    13f6:	9e 3f       	cpi	r25, 0xFE	; 254
    13f8:	08 f0       	brcs	.+2      	; 0x13fc <__addsf3x+0x96>
    13fa:	b3 cf       	rjmp	.-154    	; 0x1362 <__addsf3+0x1e>
    13fc:	93 95       	inc	r25
    13fe:	88 0f       	add	r24, r24
    1400:	08 f0       	brcs	.+2      	; 0x1404 <__addsf3x+0x9e>
    1402:	99 27       	eor	r25, r25
    1404:	ee 0f       	add	r30, r30
    1406:	97 95       	ror	r25
    1408:	87 95       	ror	r24
    140a:	08 95       	ret

0000140c <__cmpsf2>:
    140c:	d9 d0       	rcall	.+434    	; 0x15c0 <__fp_cmp>
    140e:	08 f4       	brcc	.+2      	; 0x1412 <__cmpsf2+0x6>
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	08 95       	ret

00001414 <__divsf3>:
    1414:	0c d0       	rcall	.+24     	; 0x142e <__divsf3x>
    1416:	0f c1       	rjmp	.+542    	; 0x1636 <__fp_round>
    1418:	07 d1       	rcall	.+526    	; 0x1628 <__fp_pscB>
    141a:	40 f0       	brcs	.+16     	; 0x142c <__divsf3+0x18>
    141c:	fe d0       	rcall	.+508    	; 0x161a <__fp_pscA>
    141e:	30 f0       	brcs	.+12     	; 0x142c <__divsf3+0x18>
    1420:	21 f4       	brne	.+8      	; 0x142a <__divsf3+0x16>
    1422:	5f 3f       	cpi	r21, 0xFF	; 255
    1424:	19 f0       	breq	.+6      	; 0x142c <__divsf3+0x18>
    1426:	f0 c0       	rjmp	.+480    	; 0x1608 <__fp_inf>
    1428:	51 11       	cpse	r21, r1
    142a:	39 c1       	rjmp	.+626    	; 0x169e <__fp_szero>
    142c:	f3 c0       	rjmp	.+486    	; 0x1614 <__fp_nan>

0000142e <__divsf3x>:
    142e:	14 d1       	rcall	.+552    	; 0x1658 <__fp_split3>
    1430:	98 f3       	brcs	.-26     	; 0x1418 <__divsf3+0x4>

00001432 <__divsf3_pse>:
    1432:	99 23       	and	r25, r25
    1434:	c9 f3       	breq	.-14     	; 0x1428 <__divsf3+0x14>
    1436:	55 23       	and	r21, r21
    1438:	b1 f3       	breq	.-20     	; 0x1426 <__divsf3+0x12>
    143a:	95 1b       	sub	r25, r21
    143c:	55 0b       	sbc	r21, r21
    143e:	bb 27       	eor	r27, r27
    1440:	aa 27       	eor	r26, r26
    1442:	62 17       	cp	r22, r18
    1444:	73 07       	cpc	r23, r19
    1446:	84 07       	cpc	r24, r20
    1448:	38 f0       	brcs	.+14     	; 0x1458 <__divsf3_pse+0x26>
    144a:	9f 5f       	subi	r25, 0xFF	; 255
    144c:	5f 4f       	sbci	r21, 0xFF	; 255
    144e:	22 0f       	add	r18, r18
    1450:	33 1f       	adc	r19, r19
    1452:	44 1f       	adc	r20, r20
    1454:	aa 1f       	adc	r26, r26
    1456:	a9 f3       	breq	.-22     	; 0x1442 <__divsf3_pse+0x10>
    1458:	33 d0       	rcall	.+102    	; 0x14c0 <__divsf3_pse+0x8e>
    145a:	0e 2e       	mov	r0, r30
    145c:	3a f0       	brmi	.+14     	; 0x146c <__divsf3_pse+0x3a>
    145e:	e0 e8       	ldi	r30, 0x80	; 128
    1460:	30 d0       	rcall	.+96     	; 0x14c2 <__divsf3_pse+0x90>
    1462:	91 50       	subi	r25, 0x01	; 1
    1464:	50 40       	sbci	r21, 0x00	; 0
    1466:	e6 95       	lsr	r30
    1468:	00 1c       	adc	r0, r0
    146a:	ca f7       	brpl	.-14     	; 0x145e <__divsf3_pse+0x2c>
    146c:	29 d0       	rcall	.+82     	; 0x14c0 <__divsf3_pse+0x8e>
    146e:	fe 2f       	mov	r31, r30
    1470:	27 d0       	rcall	.+78     	; 0x14c0 <__divsf3_pse+0x8e>
    1472:	66 0f       	add	r22, r22
    1474:	77 1f       	adc	r23, r23
    1476:	88 1f       	adc	r24, r24
    1478:	bb 1f       	adc	r27, r27
    147a:	26 17       	cp	r18, r22
    147c:	37 07       	cpc	r19, r23
    147e:	48 07       	cpc	r20, r24
    1480:	ab 07       	cpc	r26, r27
    1482:	b0 e8       	ldi	r27, 0x80	; 128
    1484:	09 f0       	breq	.+2      	; 0x1488 <__divsf3_pse+0x56>
    1486:	bb 0b       	sbc	r27, r27
    1488:	80 2d       	mov	r24, r0
    148a:	bf 01       	movw	r22, r30
    148c:	ff 27       	eor	r31, r31
    148e:	93 58       	subi	r25, 0x83	; 131
    1490:	5f 4f       	sbci	r21, 0xFF	; 255
    1492:	2a f0       	brmi	.+10     	; 0x149e <__divsf3_pse+0x6c>
    1494:	9e 3f       	cpi	r25, 0xFE	; 254
    1496:	51 05       	cpc	r21, r1
    1498:	68 f0       	brcs	.+26     	; 0x14b4 <__divsf3_pse+0x82>
    149a:	b6 c0       	rjmp	.+364    	; 0x1608 <__fp_inf>
    149c:	00 c1       	rjmp	.+512    	; 0x169e <__fp_szero>
    149e:	5f 3f       	cpi	r21, 0xFF	; 255
    14a0:	ec f3       	brlt	.-6      	; 0x149c <__divsf3_pse+0x6a>
    14a2:	98 3e       	cpi	r25, 0xE8	; 232
    14a4:	dc f3       	brlt	.-10     	; 0x149c <__divsf3_pse+0x6a>
    14a6:	86 95       	lsr	r24
    14a8:	77 95       	ror	r23
    14aa:	67 95       	ror	r22
    14ac:	b7 95       	ror	r27
    14ae:	f7 95       	ror	r31
    14b0:	9f 5f       	subi	r25, 0xFF	; 255
    14b2:	c9 f7       	brne	.-14     	; 0x14a6 <__divsf3_pse+0x74>
    14b4:	88 0f       	add	r24, r24
    14b6:	91 1d       	adc	r25, r1
    14b8:	96 95       	lsr	r25
    14ba:	87 95       	ror	r24
    14bc:	97 f9       	bld	r25, 7
    14be:	08 95       	ret
    14c0:	e1 e0       	ldi	r30, 0x01	; 1
    14c2:	66 0f       	add	r22, r22
    14c4:	77 1f       	adc	r23, r23
    14c6:	88 1f       	adc	r24, r24
    14c8:	bb 1f       	adc	r27, r27
    14ca:	62 17       	cp	r22, r18
    14cc:	73 07       	cpc	r23, r19
    14ce:	84 07       	cpc	r24, r20
    14d0:	ba 07       	cpc	r27, r26
    14d2:	20 f0       	brcs	.+8      	; 0x14dc <__divsf3_pse+0xaa>
    14d4:	62 1b       	sub	r22, r18
    14d6:	73 0b       	sbc	r23, r19
    14d8:	84 0b       	sbc	r24, r20
    14da:	ba 0b       	sbc	r27, r26
    14dc:	ee 1f       	adc	r30, r30
    14de:	88 f7       	brcc	.-30     	; 0x14c2 <__divsf3_pse+0x90>
    14e0:	e0 95       	com	r30
    14e2:	08 95       	ret

000014e4 <__fixsfsi>:
    14e4:	04 d0       	rcall	.+8      	; 0x14ee <__fixunssfsi>
    14e6:	68 94       	set
    14e8:	b1 11       	cpse	r27, r1
    14ea:	d9 c0       	rjmp	.+434    	; 0x169e <__fp_szero>
    14ec:	08 95       	ret

000014ee <__fixunssfsi>:
    14ee:	bc d0       	rcall	.+376    	; 0x1668 <__fp_splitA>
    14f0:	88 f0       	brcs	.+34     	; 0x1514 <__fixunssfsi+0x26>
    14f2:	9f 57       	subi	r25, 0x7F	; 127
    14f4:	90 f0       	brcs	.+36     	; 0x151a <__fixunssfsi+0x2c>
    14f6:	b9 2f       	mov	r27, r25
    14f8:	99 27       	eor	r25, r25
    14fa:	b7 51       	subi	r27, 0x17	; 23
    14fc:	a0 f0       	brcs	.+40     	; 0x1526 <__fixunssfsi+0x38>
    14fe:	d1 f0       	breq	.+52     	; 0x1534 <__fixunssfsi+0x46>
    1500:	66 0f       	add	r22, r22
    1502:	77 1f       	adc	r23, r23
    1504:	88 1f       	adc	r24, r24
    1506:	99 1f       	adc	r25, r25
    1508:	1a f0       	brmi	.+6      	; 0x1510 <__fixunssfsi+0x22>
    150a:	ba 95       	dec	r27
    150c:	c9 f7       	brne	.-14     	; 0x1500 <__fixunssfsi+0x12>
    150e:	12 c0       	rjmp	.+36     	; 0x1534 <__fixunssfsi+0x46>
    1510:	b1 30       	cpi	r27, 0x01	; 1
    1512:	81 f0       	breq	.+32     	; 0x1534 <__fixunssfsi+0x46>
    1514:	c3 d0       	rcall	.+390    	; 0x169c <__fp_zero>
    1516:	b1 e0       	ldi	r27, 0x01	; 1
    1518:	08 95       	ret
    151a:	c0 c0       	rjmp	.+384    	; 0x169c <__fp_zero>
    151c:	67 2f       	mov	r22, r23
    151e:	78 2f       	mov	r23, r24
    1520:	88 27       	eor	r24, r24
    1522:	b8 5f       	subi	r27, 0xF8	; 248
    1524:	39 f0       	breq	.+14     	; 0x1534 <__fixunssfsi+0x46>
    1526:	b9 3f       	cpi	r27, 0xF9	; 249
    1528:	cc f3       	brlt	.-14     	; 0x151c <__fixunssfsi+0x2e>
    152a:	86 95       	lsr	r24
    152c:	77 95       	ror	r23
    152e:	67 95       	ror	r22
    1530:	b3 95       	inc	r27
    1532:	d9 f7       	brne	.-10     	; 0x152a <__fixunssfsi+0x3c>
    1534:	3e f4       	brtc	.+14     	; 0x1544 <__fixunssfsi+0x56>
    1536:	90 95       	com	r25
    1538:	80 95       	com	r24
    153a:	70 95       	com	r23
    153c:	61 95       	neg	r22
    153e:	7f 4f       	sbci	r23, 0xFF	; 255
    1540:	8f 4f       	sbci	r24, 0xFF	; 255
    1542:	9f 4f       	sbci	r25, 0xFF	; 255
    1544:	08 95       	ret

00001546 <__floatunsisf>:
    1546:	e8 94       	clt
    1548:	09 c0       	rjmp	.+18     	; 0x155c <__floatsisf+0x12>

0000154a <__floatsisf>:
    154a:	97 fb       	bst	r25, 7
    154c:	3e f4       	brtc	.+14     	; 0x155c <__floatsisf+0x12>
    154e:	90 95       	com	r25
    1550:	80 95       	com	r24
    1552:	70 95       	com	r23
    1554:	61 95       	neg	r22
    1556:	7f 4f       	sbci	r23, 0xFF	; 255
    1558:	8f 4f       	sbci	r24, 0xFF	; 255
    155a:	9f 4f       	sbci	r25, 0xFF	; 255
    155c:	99 23       	and	r25, r25
    155e:	a9 f0       	breq	.+42     	; 0x158a <__floatsisf+0x40>
    1560:	f9 2f       	mov	r31, r25
    1562:	96 e9       	ldi	r25, 0x96	; 150
    1564:	bb 27       	eor	r27, r27
    1566:	93 95       	inc	r25
    1568:	f6 95       	lsr	r31
    156a:	87 95       	ror	r24
    156c:	77 95       	ror	r23
    156e:	67 95       	ror	r22
    1570:	b7 95       	ror	r27
    1572:	f1 11       	cpse	r31, r1
    1574:	f8 cf       	rjmp	.-16     	; 0x1566 <__floatsisf+0x1c>
    1576:	fa f4       	brpl	.+62     	; 0x15b6 <__floatsisf+0x6c>
    1578:	bb 0f       	add	r27, r27
    157a:	11 f4       	brne	.+4      	; 0x1580 <__floatsisf+0x36>
    157c:	60 ff       	sbrs	r22, 0
    157e:	1b c0       	rjmp	.+54     	; 0x15b6 <__floatsisf+0x6c>
    1580:	6f 5f       	subi	r22, 0xFF	; 255
    1582:	7f 4f       	sbci	r23, 0xFF	; 255
    1584:	8f 4f       	sbci	r24, 0xFF	; 255
    1586:	9f 4f       	sbci	r25, 0xFF	; 255
    1588:	16 c0       	rjmp	.+44     	; 0x15b6 <__floatsisf+0x6c>
    158a:	88 23       	and	r24, r24
    158c:	11 f0       	breq	.+4      	; 0x1592 <__floatsisf+0x48>
    158e:	96 e9       	ldi	r25, 0x96	; 150
    1590:	11 c0       	rjmp	.+34     	; 0x15b4 <__floatsisf+0x6a>
    1592:	77 23       	and	r23, r23
    1594:	21 f0       	breq	.+8      	; 0x159e <__floatsisf+0x54>
    1596:	9e e8       	ldi	r25, 0x8E	; 142
    1598:	87 2f       	mov	r24, r23
    159a:	76 2f       	mov	r23, r22
    159c:	05 c0       	rjmp	.+10     	; 0x15a8 <__floatsisf+0x5e>
    159e:	66 23       	and	r22, r22
    15a0:	71 f0       	breq	.+28     	; 0x15be <__floatsisf+0x74>
    15a2:	96 e8       	ldi	r25, 0x86	; 134
    15a4:	86 2f       	mov	r24, r22
    15a6:	70 e0       	ldi	r23, 0x00	; 0
    15a8:	60 e0       	ldi	r22, 0x00	; 0
    15aa:	2a f0       	brmi	.+10     	; 0x15b6 <__floatsisf+0x6c>
    15ac:	9a 95       	dec	r25
    15ae:	66 0f       	add	r22, r22
    15b0:	77 1f       	adc	r23, r23
    15b2:	88 1f       	adc	r24, r24
    15b4:	da f7       	brpl	.-10     	; 0x15ac <__floatsisf+0x62>
    15b6:	88 0f       	add	r24, r24
    15b8:	96 95       	lsr	r25
    15ba:	87 95       	ror	r24
    15bc:	97 f9       	bld	r25, 7
    15be:	08 95       	ret

000015c0 <__fp_cmp>:
    15c0:	99 0f       	add	r25, r25
    15c2:	00 08       	sbc	r0, r0
    15c4:	55 0f       	add	r21, r21
    15c6:	aa 0b       	sbc	r26, r26
    15c8:	e0 e8       	ldi	r30, 0x80	; 128
    15ca:	fe ef       	ldi	r31, 0xFE	; 254
    15cc:	16 16       	cp	r1, r22
    15ce:	17 06       	cpc	r1, r23
    15d0:	e8 07       	cpc	r30, r24
    15d2:	f9 07       	cpc	r31, r25
    15d4:	c0 f0       	brcs	.+48     	; 0x1606 <__fp_cmp+0x46>
    15d6:	12 16       	cp	r1, r18
    15d8:	13 06       	cpc	r1, r19
    15da:	e4 07       	cpc	r30, r20
    15dc:	f5 07       	cpc	r31, r21
    15de:	98 f0       	brcs	.+38     	; 0x1606 <__fp_cmp+0x46>
    15e0:	62 1b       	sub	r22, r18
    15e2:	73 0b       	sbc	r23, r19
    15e4:	84 0b       	sbc	r24, r20
    15e6:	95 0b       	sbc	r25, r21
    15e8:	39 f4       	brne	.+14     	; 0x15f8 <__fp_cmp+0x38>
    15ea:	0a 26       	eor	r0, r26
    15ec:	61 f0       	breq	.+24     	; 0x1606 <__fp_cmp+0x46>
    15ee:	23 2b       	or	r18, r19
    15f0:	24 2b       	or	r18, r20
    15f2:	25 2b       	or	r18, r21
    15f4:	21 f4       	brne	.+8      	; 0x15fe <__fp_cmp+0x3e>
    15f6:	08 95       	ret
    15f8:	0a 26       	eor	r0, r26
    15fa:	09 f4       	brne	.+2      	; 0x15fe <__fp_cmp+0x3e>
    15fc:	a1 40       	sbci	r26, 0x01	; 1
    15fe:	a6 95       	lsr	r26
    1600:	8f ef       	ldi	r24, 0xFF	; 255
    1602:	81 1d       	adc	r24, r1
    1604:	81 1d       	adc	r24, r1
    1606:	08 95       	ret

00001608 <__fp_inf>:
    1608:	97 f9       	bld	r25, 7
    160a:	9f 67       	ori	r25, 0x7F	; 127
    160c:	80 e8       	ldi	r24, 0x80	; 128
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	60 e0       	ldi	r22, 0x00	; 0
    1612:	08 95       	ret

00001614 <__fp_nan>:
    1614:	9f ef       	ldi	r25, 0xFF	; 255
    1616:	80 ec       	ldi	r24, 0xC0	; 192
    1618:	08 95       	ret

0000161a <__fp_pscA>:
    161a:	00 24       	eor	r0, r0
    161c:	0a 94       	dec	r0
    161e:	16 16       	cp	r1, r22
    1620:	17 06       	cpc	r1, r23
    1622:	18 06       	cpc	r1, r24
    1624:	09 06       	cpc	r0, r25
    1626:	08 95       	ret

00001628 <__fp_pscB>:
    1628:	00 24       	eor	r0, r0
    162a:	0a 94       	dec	r0
    162c:	12 16       	cp	r1, r18
    162e:	13 06       	cpc	r1, r19
    1630:	14 06       	cpc	r1, r20
    1632:	05 06       	cpc	r0, r21
    1634:	08 95       	ret

00001636 <__fp_round>:
    1636:	09 2e       	mov	r0, r25
    1638:	03 94       	inc	r0
    163a:	00 0c       	add	r0, r0
    163c:	11 f4       	brne	.+4      	; 0x1642 <__fp_round+0xc>
    163e:	88 23       	and	r24, r24
    1640:	52 f0       	brmi	.+20     	; 0x1656 <__fp_round+0x20>
    1642:	bb 0f       	add	r27, r27
    1644:	40 f4       	brcc	.+16     	; 0x1656 <__fp_round+0x20>
    1646:	bf 2b       	or	r27, r31
    1648:	11 f4       	brne	.+4      	; 0x164e <__fp_round+0x18>
    164a:	60 ff       	sbrs	r22, 0
    164c:	04 c0       	rjmp	.+8      	; 0x1656 <__fp_round+0x20>
    164e:	6f 5f       	subi	r22, 0xFF	; 255
    1650:	7f 4f       	sbci	r23, 0xFF	; 255
    1652:	8f 4f       	sbci	r24, 0xFF	; 255
    1654:	9f 4f       	sbci	r25, 0xFF	; 255
    1656:	08 95       	ret

00001658 <__fp_split3>:
    1658:	57 fd       	sbrc	r21, 7
    165a:	90 58       	subi	r25, 0x80	; 128
    165c:	44 0f       	add	r20, r20
    165e:	55 1f       	adc	r21, r21
    1660:	59 f0       	breq	.+22     	; 0x1678 <__fp_splitA+0x10>
    1662:	5f 3f       	cpi	r21, 0xFF	; 255
    1664:	71 f0       	breq	.+28     	; 0x1682 <__fp_splitA+0x1a>
    1666:	47 95       	ror	r20

00001668 <__fp_splitA>:
    1668:	88 0f       	add	r24, r24
    166a:	97 fb       	bst	r25, 7
    166c:	99 1f       	adc	r25, r25
    166e:	61 f0       	breq	.+24     	; 0x1688 <__fp_splitA+0x20>
    1670:	9f 3f       	cpi	r25, 0xFF	; 255
    1672:	79 f0       	breq	.+30     	; 0x1692 <__fp_splitA+0x2a>
    1674:	87 95       	ror	r24
    1676:	08 95       	ret
    1678:	12 16       	cp	r1, r18
    167a:	13 06       	cpc	r1, r19
    167c:	14 06       	cpc	r1, r20
    167e:	55 1f       	adc	r21, r21
    1680:	f2 cf       	rjmp	.-28     	; 0x1666 <__fp_split3+0xe>
    1682:	46 95       	lsr	r20
    1684:	f1 df       	rcall	.-30     	; 0x1668 <__fp_splitA>
    1686:	08 c0       	rjmp	.+16     	; 0x1698 <__fp_splitA+0x30>
    1688:	16 16       	cp	r1, r22
    168a:	17 06       	cpc	r1, r23
    168c:	18 06       	cpc	r1, r24
    168e:	99 1f       	adc	r25, r25
    1690:	f1 cf       	rjmp	.-30     	; 0x1674 <__fp_splitA+0xc>
    1692:	86 95       	lsr	r24
    1694:	71 05       	cpc	r23, r1
    1696:	61 05       	cpc	r22, r1
    1698:	08 94       	sec
    169a:	08 95       	ret

0000169c <__fp_zero>:
    169c:	e8 94       	clt

0000169e <__fp_szero>:
    169e:	bb 27       	eor	r27, r27
    16a0:	66 27       	eor	r22, r22
    16a2:	77 27       	eor	r23, r23
    16a4:	cb 01       	movw	r24, r22
    16a6:	97 f9       	bld	r25, 7
    16a8:	08 95       	ret

000016aa <__gesf2>:
    16aa:	8a df       	rcall	.-236    	; 0x15c0 <__fp_cmp>
    16ac:	08 f4       	brcc	.+2      	; 0x16b0 <__gesf2+0x6>
    16ae:	8f ef       	ldi	r24, 0xFF	; 255
    16b0:	08 95       	ret

000016b2 <__mulsf3>:
    16b2:	0a d0       	rcall	.+20     	; 0x16c8 <__mulsf3x>
    16b4:	c0 cf       	rjmp	.-128    	; 0x1636 <__fp_round>
    16b6:	b1 df       	rcall	.-158    	; 0x161a <__fp_pscA>
    16b8:	28 f0       	brcs	.+10     	; 0x16c4 <__mulsf3+0x12>
    16ba:	b6 df       	rcall	.-148    	; 0x1628 <__fp_pscB>
    16bc:	18 f0       	brcs	.+6      	; 0x16c4 <__mulsf3+0x12>
    16be:	95 23       	and	r25, r21
    16c0:	09 f0       	breq	.+2      	; 0x16c4 <__mulsf3+0x12>
    16c2:	a2 cf       	rjmp	.-188    	; 0x1608 <__fp_inf>
    16c4:	a7 cf       	rjmp	.-178    	; 0x1614 <__fp_nan>
    16c6:	eb cf       	rjmp	.-42     	; 0x169e <__fp_szero>

000016c8 <__mulsf3x>:
    16c8:	c7 df       	rcall	.-114    	; 0x1658 <__fp_split3>
    16ca:	a8 f3       	brcs	.-22     	; 0x16b6 <__mulsf3+0x4>

000016cc <__mulsf3_pse>:
    16cc:	99 23       	and	r25, r25
    16ce:	d9 f3       	breq	.-10     	; 0x16c6 <__mulsf3+0x14>
    16d0:	55 23       	and	r21, r21
    16d2:	c9 f3       	breq	.-14     	; 0x16c6 <__mulsf3+0x14>
    16d4:	95 0f       	add	r25, r21
    16d6:	50 e0       	ldi	r21, 0x00	; 0
    16d8:	55 1f       	adc	r21, r21
    16da:	aa 27       	eor	r26, r26
    16dc:	ee 27       	eor	r30, r30
    16de:	ff 27       	eor	r31, r31
    16e0:	bb 27       	eor	r27, r27
    16e2:	00 24       	eor	r0, r0
    16e4:	08 94       	sec
    16e6:	67 95       	ror	r22
    16e8:	20 f4       	brcc	.+8      	; 0x16f2 <__mulsf3_pse+0x26>
    16ea:	e2 0f       	add	r30, r18
    16ec:	f3 1f       	adc	r31, r19
    16ee:	b4 1f       	adc	r27, r20
    16f0:	0a 1e       	adc	r0, r26
    16f2:	22 0f       	add	r18, r18
    16f4:	33 1f       	adc	r19, r19
    16f6:	44 1f       	adc	r20, r20
    16f8:	aa 1f       	adc	r26, r26
    16fa:	66 95       	lsr	r22
    16fc:	a9 f7       	brne	.-22     	; 0x16e8 <__mulsf3_pse+0x1c>
    16fe:	77 95       	ror	r23
    1700:	30 f4       	brcc	.+12     	; 0x170e <__mulsf3_pse+0x42>
    1702:	f3 0f       	add	r31, r19
    1704:	b4 1f       	adc	r27, r20
    1706:	0a 1e       	adc	r0, r26
    1708:	12 1e       	adc	r1, r18
    170a:	08 f4       	brcc	.+2      	; 0x170e <__mulsf3_pse+0x42>
    170c:	63 95       	inc	r22
    170e:	33 0f       	add	r19, r19
    1710:	44 1f       	adc	r20, r20
    1712:	aa 1f       	adc	r26, r26
    1714:	22 1f       	adc	r18, r18
    1716:	76 95       	lsr	r23
    1718:	99 f7       	brne	.-26     	; 0x1700 <__mulsf3_pse+0x34>
    171a:	87 95       	ror	r24
    171c:	20 f4       	brcc	.+8      	; 0x1726 <__mulsf3_pse+0x5a>
    171e:	b4 0f       	add	r27, r20
    1720:	0a 1e       	adc	r0, r26
    1722:	12 1e       	adc	r1, r18
    1724:	63 1f       	adc	r22, r19
    1726:	44 0f       	add	r20, r20
    1728:	aa 1f       	adc	r26, r26
    172a:	22 1f       	adc	r18, r18
    172c:	33 1f       	adc	r19, r19
    172e:	86 95       	lsr	r24
    1730:	a9 f7       	brne	.-22     	; 0x171c <__mulsf3_pse+0x50>
    1732:	86 2f       	mov	r24, r22
    1734:	71 2d       	mov	r23, r1
    1736:	60 2d       	mov	r22, r0
    1738:	11 24       	eor	r1, r1
    173a:	9f 57       	subi	r25, 0x7F	; 127
    173c:	50 40       	sbci	r21, 0x00	; 0
    173e:	8a f0       	brmi	.+34     	; 0x1762 <__mulsf3_pse+0x96>
    1740:	e1 f0       	breq	.+56     	; 0x177a <__mulsf3_pse+0xae>
    1742:	88 23       	and	r24, r24
    1744:	4a f0       	brmi	.+18     	; 0x1758 <__mulsf3_pse+0x8c>
    1746:	ee 0f       	add	r30, r30
    1748:	ff 1f       	adc	r31, r31
    174a:	bb 1f       	adc	r27, r27
    174c:	66 1f       	adc	r22, r22
    174e:	77 1f       	adc	r23, r23
    1750:	88 1f       	adc	r24, r24
    1752:	91 50       	subi	r25, 0x01	; 1
    1754:	50 40       	sbci	r21, 0x00	; 0
    1756:	a9 f7       	brne	.-22     	; 0x1742 <__mulsf3_pse+0x76>
    1758:	9e 3f       	cpi	r25, 0xFE	; 254
    175a:	51 05       	cpc	r21, r1
    175c:	70 f0       	brcs	.+28     	; 0x177a <__mulsf3_pse+0xae>
    175e:	54 cf       	rjmp	.-344    	; 0x1608 <__fp_inf>
    1760:	9e cf       	rjmp	.-196    	; 0x169e <__fp_szero>
    1762:	5f 3f       	cpi	r21, 0xFF	; 255
    1764:	ec f3       	brlt	.-6      	; 0x1760 <__mulsf3_pse+0x94>
    1766:	98 3e       	cpi	r25, 0xE8	; 232
    1768:	dc f3       	brlt	.-10     	; 0x1760 <__mulsf3_pse+0x94>
    176a:	86 95       	lsr	r24
    176c:	77 95       	ror	r23
    176e:	67 95       	ror	r22
    1770:	b7 95       	ror	r27
    1772:	f7 95       	ror	r31
    1774:	e7 95       	ror	r30
    1776:	9f 5f       	subi	r25, 0xFF	; 255
    1778:	c1 f7       	brne	.-16     	; 0x176a <__mulsf3_pse+0x9e>
    177a:	fe 2b       	or	r31, r30
    177c:	88 0f       	add	r24, r24
    177e:	91 1d       	adc	r25, r1
    1780:	96 95       	lsr	r25
    1782:	87 95       	ror	r24
    1784:	97 f9       	bld	r25, 7
    1786:	08 95       	ret

00001788 <__divmodhi4>:
    1788:	97 fb       	bst	r25, 7
    178a:	07 2e       	mov	r0, r23
    178c:	16 f4       	brtc	.+4      	; 0x1792 <__divmodhi4+0xa>
    178e:	00 94       	com	r0
    1790:	06 d0       	rcall	.+12     	; 0x179e <__divmodhi4_neg1>
    1792:	77 fd       	sbrc	r23, 7
    1794:	08 d0       	rcall	.+16     	; 0x17a6 <__divmodhi4_neg2>
    1796:	49 d0       	rcall	.+146    	; 0x182a <__udivmodhi4>
    1798:	07 fc       	sbrc	r0, 7
    179a:	05 d0       	rcall	.+10     	; 0x17a6 <__divmodhi4_neg2>
    179c:	3e f4       	brtc	.+14     	; 0x17ac <__divmodhi4_exit>

0000179e <__divmodhi4_neg1>:
    179e:	90 95       	com	r25
    17a0:	81 95       	neg	r24
    17a2:	9f 4f       	sbci	r25, 0xFF	; 255
    17a4:	08 95       	ret

000017a6 <__divmodhi4_neg2>:
    17a6:	70 95       	com	r23
    17a8:	61 95       	neg	r22
    17aa:	7f 4f       	sbci	r23, 0xFF	; 255

000017ac <__divmodhi4_exit>:
    17ac:	08 95       	ret

000017ae <__udivmodsi4>:
    17ae:	a1 e2       	ldi	r26, 0x21	; 33
    17b0:	1a 2e       	mov	r1, r26
    17b2:	aa 1b       	sub	r26, r26
    17b4:	bb 1b       	sub	r27, r27
    17b6:	fd 01       	movw	r30, r26
    17b8:	0d c0       	rjmp	.+26     	; 0x17d4 <__udivmodsi4_ep>

000017ba <__udivmodsi4_loop>:
    17ba:	aa 1f       	adc	r26, r26
    17bc:	bb 1f       	adc	r27, r27
    17be:	ee 1f       	adc	r30, r30
    17c0:	ff 1f       	adc	r31, r31
    17c2:	a2 17       	cp	r26, r18
    17c4:	b3 07       	cpc	r27, r19
    17c6:	e4 07       	cpc	r30, r20
    17c8:	f5 07       	cpc	r31, r21
    17ca:	20 f0       	brcs	.+8      	; 0x17d4 <__udivmodsi4_ep>
    17cc:	a2 1b       	sub	r26, r18
    17ce:	b3 0b       	sbc	r27, r19
    17d0:	e4 0b       	sbc	r30, r20
    17d2:	f5 0b       	sbc	r31, r21

000017d4 <__udivmodsi4_ep>:
    17d4:	66 1f       	adc	r22, r22
    17d6:	77 1f       	adc	r23, r23
    17d8:	88 1f       	adc	r24, r24
    17da:	99 1f       	adc	r25, r25
    17dc:	1a 94       	dec	r1
    17de:	69 f7       	brne	.-38     	; 0x17ba <__udivmodsi4_loop>
    17e0:	60 95       	com	r22
    17e2:	70 95       	com	r23
    17e4:	80 95       	com	r24
    17e6:	90 95       	com	r25
    17e8:	9b 01       	movw	r18, r22
    17ea:	ac 01       	movw	r20, r24
    17ec:	bd 01       	movw	r22, r26
    17ee:	cf 01       	movw	r24, r30
    17f0:	08 95       	ret

000017f2 <__divmodsi4>:
    17f2:	05 2e       	mov	r0, r21
    17f4:	97 fb       	bst	r25, 7
    17f6:	16 f4       	brtc	.+4      	; 0x17fc <__divmodsi4+0xa>
    17f8:	00 94       	com	r0
    17fa:	0f d0       	rcall	.+30     	; 0x181a <__negsi2>
    17fc:	57 fd       	sbrc	r21, 7
    17fe:	05 d0       	rcall	.+10     	; 0x180a <__divmodsi4_neg2>
    1800:	d6 df       	rcall	.-84     	; 0x17ae <__udivmodsi4>
    1802:	07 fc       	sbrc	r0, 7
    1804:	02 d0       	rcall	.+4      	; 0x180a <__divmodsi4_neg2>
    1806:	46 f4       	brtc	.+16     	; 0x1818 <__divmodsi4_exit>
    1808:	08 c0       	rjmp	.+16     	; 0x181a <__negsi2>

0000180a <__divmodsi4_neg2>:
    180a:	50 95       	com	r21
    180c:	40 95       	com	r20
    180e:	30 95       	com	r19
    1810:	21 95       	neg	r18
    1812:	3f 4f       	sbci	r19, 0xFF	; 255
    1814:	4f 4f       	sbci	r20, 0xFF	; 255
    1816:	5f 4f       	sbci	r21, 0xFF	; 255

00001818 <__divmodsi4_exit>:
    1818:	08 95       	ret

0000181a <__negsi2>:
    181a:	90 95       	com	r25
    181c:	80 95       	com	r24
    181e:	70 95       	com	r23
    1820:	61 95       	neg	r22
    1822:	7f 4f       	sbci	r23, 0xFF	; 255
    1824:	8f 4f       	sbci	r24, 0xFF	; 255
    1826:	9f 4f       	sbci	r25, 0xFF	; 255
    1828:	08 95       	ret

0000182a <__udivmodhi4>:
    182a:	aa 1b       	sub	r26, r26
    182c:	bb 1b       	sub	r27, r27
    182e:	51 e1       	ldi	r21, 0x11	; 17
    1830:	07 c0       	rjmp	.+14     	; 0x1840 <__udivmodhi4_ep>

00001832 <__udivmodhi4_loop>:
    1832:	aa 1f       	adc	r26, r26
    1834:	bb 1f       	adc	r27, r27
    1836:	a6 17       	cp	r26, r22
    1838:	b7 07       	cpc	r27, r23
    183a:	10 f0       	brcs	.+4      	; 0x1840 <__udivmodhi4_ep>
    183c:	a6 1b       	sub	r26, r22
    183e:	b7 0b       	sbc	r27, r23

00001840 <__udivmodhi4_ep>:
    1840:	88 1f       	adc	r24, r24
    1842:	99 1f       	adc	r25, r25
    1844:	5a 95       	dec	r21
    1846:	a9 f7       	brne	.-22     	; 0x1832 <__udivmodhi4_loop>
    1848:	80 95       	com	r24
    184a:	90 95       	com	r25
    184c:	bc 01       	movw	r22, r24
    184e:	cd 01       	movw	r24, r26
    1850:	08 95       	ret

00001852 <eeprom_read_byte>:
    1852:	e1 99       	sbic	0x1c, 1	; 28
    1854:	fe cf       	rjmp	.-4      	; 0x1852 <eeprom_read_byte>
    1856:	9f bb       	out	0x1f, r25	; 31
    1858:	8e bb       	out	0x1e, r24	; 30
    185a:	e0 9a       	sbi	0x1c, 0	; 28
    185c:	99 27       	eor	r25, r25
    185e:	8d b3       	in	r24, 0x1d	; 29
    1860:	08 95       	ret

00001862 <eeprom_read_dword>:
    1862:	a6 e1       	ldi	r26, 0x16	; 22
    1864:	b0 e0       	ldi	r27, 0x00	; 0
    1866:	44 e0       	ldi	r20, 0x04	; 4
    1868:	50 e0       	ldi	r21, 0x00	; 0
    186a:	18 c0       	rjmp	.+48     	; 0x189c <eeprom_read_blraw>

0000186c <eeprom_update_dword>:
    186c:	03 96       	adiw	r24, 0x03	; 3
    186e:	27 2f       	mov	r18, r23
    1870:	24 d0       	rcall	.+72     	; 0x18ba <eeprom_update_r18>
    1872:	22 d0       	rcall	.+68     	; 0x18b8 <eeprom_update_byte>
    1874:	25 2f       	mov	r18, r21
    1876:	21 d0       	rcall	.+66     	; 0x18ba <eeprom_update_r18>
    1878:	24 2f       	mov	r18, r20
    187a:	1f c0       	rjmp	.+62     	; 0x18ba <eeprom_update_r18>

0000187c <eeprom_write_byte>:
    187c:	26 2f       	mov	r18, r22

0000187e <eeprom_write_r18>:
    187e:	e1 99       	sbic	0x1c, 1	; 28
    1880:	fe cf       	rjmp	.-4      	; 0x187e <eeprom_write_r18>
    1882:	1c ba       	out	0x1c, r1	; 28
    1884:	9f bb       	out	0x1f, r25	; 31
    1886:	8e bb       	out	0x1e, r24	; 30
    1888:	2d bb       	out	0x1d, r18	; 29
    188a:	0f b6       	in	r0, 0x3f	; 63
    188c:	f8 94       	cli
    188e:	e2 9a       	sbi	0x1c, 2	; 28
    1890:	e1 9a       	sbi	0x1c, 1	; 28
    1892:	0f be       	out	0x3f, r0	; 63
    1894:	01 96       	adiw	r24, 0x01	; 1
    1896:	08 95       	ret

00001898 <eeprom_read_block>:
    1898:	dc 01       	movw	r26, r24
    189a:	cb 01       	movw	r24, r22

0000189c <eeprom_read_blraw>:
    189c:	fc 01       	movw	r30, r24
    189e:	e1 99       	sbic	0x1c, 1	; 28
    18a0:	fe cf       	rjmp	.-4      	; 0x189e <eeprom_read_blraw+0x2>
    18a2:	06 c0       	rjmp	.+12     	; 0x18b0 <eeprom_read_blraw+0x14>
    18a4:	ff bb       	out	0x1f, r31	; 31
    18a6:	ee bb       	out	0x1e, r30	; 30
    18a8:	e0 9a       	sbi	0x1c, 0	; 28
    18aa:	31 96       	adiw	r30, 0x01	; 1
    18ac:	0d b2       	in	r0, 0x1d	; 29
    18ae:	0d 92       	st	X+, r0
    18b0:	41 50       	subi	r20, 0x01	; 1
    18b2:	50 40       	sbci	r21, 0x00	; 0
    18b4:	b8 f7       	brcc	.-18     	; 0x18a4 <eeprom_read_blraw+0x8>
    18b6:	08 95       	ret

000018b8 <eeprom_update_byte>:
    18b8:	26 2f       	mov	r18, r22

000018ba <eeprom_update_r18>:
    18ba:	e1 99       	sbic	0x1c, 1	; 28
    18bc:	fe cf       	rjmp	.-4      	; 0x18ba <eeprom_update_r18>
    18be:	9f bb       	out	0x1f, r25	; 31
    18c0:	8e bb       	out	0x1e, r24	; 30
    18c2:	e0 9a       	sbi	0x1c, 0	; 28
    18c4:	01 97       	sbiw	r24, 0x01	; 1
    18c6:	0d b2       	in	r0, 0x1d	; 29
    18c8:	02 16       	cp	r0, r18
    18ca:	39 f0       	breq	.+14     	; 0x18da <eeprom_update_r18+0x20>
    18cc:	1c ba       	out	0x1c, r1	; 28
    18ce:	2d bb       	out	0x1d, r18	; 29
    18d0:	0f b6       	in	r0, 0x3f	; 63
    18d2:	f8 94       	cli
    18d4:	e2 9a       	sbi	0x1c, 2	; 28
    18d6:	e1 9a       	sbi	0x1c, 1	; 28
    18d8:	0f be       	out	0x3f, r0	; 63
    18da:	08 95       	ret

000018dc <_exit>:
    18dc:	f8 94       	cli

000018de <__stop_program>:
    18de:	ff cf       	rjmp	.-2      	; 0x18de <__stop_program>
