
Velo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000138e  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003e  00800060  0000138e  00001442  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000059  0080009e  0080009e  00001480  2**0
                  ALLOC
  3 .eeprom       00000001  00810000  00810000  00001480  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  00001481  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014b4  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000188  00000000  00000000  000014f0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001ab9  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000a92  00000000  00000000  00003131  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dea  00000000  00000000  00003bc3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000044c  00000000  00000000  000049b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000070f  00000000  00000000  00004dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00001256  00000000  00000000  0000550b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000118  00000000  00000000  00006761  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	32 c1       	rjmp	.+612    	; 0x266 <__ctors_end>
       2:	4c c1       	rjmp	.+664    	; 0x29c <__bad_interrupt>
       4:	4b c1       	rjmp	.+662    	; 0x29c <__bad_interrupt>
       6:	4a c1       	rjmp	.+660    	; 0x29c <__bad_interrupt>
       8:	49 c1       	rjmp	.+658    	; 0x29c <__bad_interrupt>
       a:	48 c1       	rjmp	.+656    	; 0x29c <__bad_interrupt>
       c:	47 c1       	rjmp	.+654    	; 0x29c <__bad_interrupt>
       e:	46 c1       	rjmp	.+652    	; 0x29c <__bad_interrupt>
      10:	45 c1       	rjmp	.+650    	; 0x29c <__bad_interrupt>
      12:	44 c1       	rjmp	.+648    	; 0x29c <__bad_interrupt>
      14:	52 c1       	rjmp	.+676    	; 0x2ba <__vector_10>
      16:	42 c1       	rjmp	.+644    	; 0x29c <__bad_interrupt>
      18:	41 c1       	rjmp	.+642    	; 0x29c <__bad_interrupt>
      1a:	40 c1       	rjmp	.+640    	; 0x29c <__bad_interrupt>
      1c:	3f c1       	rjmp	.+638    	; 0x29c <__bad_interrupt>

0000001e <__trampolines_end>:
	...
      26:	00 2f       	mov	r16, r16
      28:	00 00       	nop
      2a:	00 00       	nop
      2c:	07 00       	.word	0x0007	; ????
      2e:	07 00       	.word	0x0007	; ????
      30:	00 14       	cp	r0, r0
      32:	7f 14       	cp	r7, r15
      34:	7f 14       	cp	r7, r15
      36:	00 24       	eor	r0, r0
      38:	2a 7f       	andi	r18, 0xFA	; 250
      3a:	2a 12       	cpse	r2, r26
      3c:	00 62       	ori	r16, 0x20	; 32
      3e:	64 08       	sbc	r6, r4
      40:	13 23       	and	r17, r19
      42:	00 36       	cpi	r16, 0x60	; 96
      44:	49 55       	subi	r20, 0x59	; 89
      46:	22 50       	subi	r18, 0x02	; 2
      48:	00 00       	nop
      4a:	05 03       	mulsu	r16, r21
      4c:	00 00       	nop
      4e:	00 00       	nop
      50:	1c 22       	and	r1, r28
      52:	41 00       	.word	0x0041	; ????
      54:	00 00       	nop
      56:	41 22       	and	r4, r17
      58:	1c 00       	.word	0x001c	; ????
      5a:	00 14       	cp	r0, r0
      5c:	08 3e       	cpi	r16, 0xE8	; 232
      5e:	08 14       	cp	r0, r8
      60:	00 08       	sbc	r0, r0
      62:	08 3e       	cpi	r16, 0xE8	; 232
      64:	08 08       	sbc	r0, r8
      66:	00 00       	nop
      68:	00 a0       	ldd	r0, Z+32	; 0x20
      6a:	60 00       	.word	0x0060	; ????
      6c:	00 08       	sbc	r0, r0
      6e:	08 08       	sbc	r0, r8
      70:	08 08       	sbc	r0, r8
      72:	00 00       	nop
      74:	60 60       	ori	r22, 0x00	; 0
      76:	00 00       	nop
      78:	00 20       	and	r0, r0
      7a:	10 08       	sbc	r1, r0
      7c:	04 02       	muls	r16, r20
      7e:	00 3e       	cpi	r16, 0xE0	; 224
      80:	51 49       	sbci	r21, 0x91	; 145
      82:	45 3e       	cpi	r20, 0xE5	; 229
      84:	00 00       	nop
      86:	42 7f       	andi	r20, 0xF2	; 242
      88:	40 00       	.word	0x0040	; ????
      8a:	00 42       	sbci	r16, 0x20	; 32
      8c:	61 51       	subi	r22, 0x11	; 17
      8e:	49 46       	sbci	r20, 0x69	; 105
      90:	00 21       	and	r16, r0
      92:	41 45       	sbci	r20, 0x51	; 81
      94:	4b 31       	cpi	r20, 0x1B	; 27
      96:	00 18       	sub	r0, r0
      98:	14 12       	cpse	r1, r20
      9a:	7f 10       	cpse	r7, r15
      9c:	00 27       	eor	r16, r16
      9e:	45 45       	sbci	r20, 0x55	; 85
      a0:	45 39       	cpi	r20, 0x95	; 149
      a2:	00 3c       	cpi	r16, 0xC0	; 192
      a4:	4a 49       	sbci	r20, 0x9A	; 154
      a6:	49 30       	cpi	r20, 0x09	; 9
      a8:	00 01       	movw	r0, r0
      aa:	71 09       	sbc	r23, r1
      ac:	05 03       	mulsu	r16, r21
      ae:	00 36       	cpi	r16, 0x60	; 96
      b0:	49 49       	sbci	r20, 0x99	; 153
      b2:	49 36       	cpi	r20, 0x69	; 105
      b4:	00 06       	cpc	r0, r16
      b6:	49 49       	sbci	r20, 0x99	; 153
      b8:	29 1e       	adc	r2, r25
      ba:	00 00       	nop
      bc:	36 36       	cpi	r19, 0x66	; 102
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	56 36       	cpi	r21, 0x66	; 102
      c4:	00 00       	nop
      c6:	00 08       	sbc	r0, r0
      c8:	14 22       	and	r1, r20
      ca:	41 00       	.word	0x0041	; ????
      cc:	00 14       	cp	r0, r0
      ce:	14 14       	cp	r1, r4
      d0:	14 14       	cp	r1, r4
      d2:	00 00       	nop
      d4:	41 22       	and	r4, r17
      d6:	14 08       	sbc	r1, r4
      d8:	00 02       	muls	r16, r16
      da:	01 51       	subi	r16, 0x11	; 17
      dc:	09 06       	cpc	r0, r25
      de:	00 32       	cpi	r16, 0x20	; 32
      e0:	49 59       	subi	r20, 0x99	; 153
      e2:	51 3e       	cpi	r21, 0xE1	; 225
      e4:	00 7c       	andi	r16, 0xC0	; 192
      e6:	12 11       	cpse	r17, r2
      e8:	12 7c       	andi	r17, 0xC2	; 194
      ea:	00 7f       	andi	r16, 0xF0	; 240
      ec:	49 49       	sbci	r20, 0x99	; 153
      ee:	49 36       	cpi	r20, 0x69	; 105
      f0:	00 3e       	cpi	r16, 0xE0	; 224
      f2:	41 41       	sbci	r20, 0x11	; 17
      f4:	41 22       	and	r4, r17
      f6:	00 7f       	andi	r16, 0xF0	; 240
      f8:	41 41       	sbci	r20, 0x11	; 17
      fa:	22 1c       	adc	r2, r2
      fc:	00 7f       	andi	r16, 0xF0	; 240
      fe:	49 49       	sbci	r20, 0x99	; 153
     100:	49 41       	sbci	r20, 0x19	; 25
     102:	00 7f       	andi	r16, 0xF0	; 240
     104:	09 09       	sbc	r16, r9
     106:	09 01       	movw	r0, r18
     108:	00 3e       	cpi	r16, 0xE0	; 224
     10a:	41 49       	sbci	r20, 0x91	; 145
     10c:	49 7a       	andi	r20, 0xA9	; 169
     10e:	00 7f       	andi	r16, 0xF0	; 240
     110:	08 08       	sbc	r0, r8
     112:	08 7f       	andi	r16, 0xF8	; 248
     114:	00 00       	nop
     116:	41 7f       	andi	r20, 0xF1	; 241
     118:	41 00       	.word	0x0041	; ????
     11a:	00 20       	and	r0, r0
     11c:	40 41       	sbci	r20, 0x10	; 16
     11e:	3f 01       	movw	r6, r30
     120:	00 7f       	andi	r16, 0xF0	; 240
     122:	08 14       	cp	r0, r8
     124:	22 41       	sbci	r18, 0x12	; 18
     126:	00 7f       	andi	r16, 0xF0	; 240
     128:	40 40       	sbci	r20, 0x00	; 0
     12a:	40 40       	sbci	r20, 0x00	; 0
     12c:	00 7f       	andi	r16, 0xF0	; 240
     12e:	02 0c       	add	r0, r2
     130:	02 7f       	andi	r16, 0xF2	; 242
     132:	00 7f       	andi	r16, 0xF0	; 240
     134:	04 08       	sbc	r0, r4
     136:	10 7f       	andi	r17, 0xF0	; 240
     138:	00 3e       	cpi	r16, 0xE0	; 224
     13a:	41 41       	sbci	r20, 0x11	; 17
     13c:	41 3e       	cpi	r20, 0xE1	; 225
     13e:	00 7f       	andi	r16, 0xF0	; 240
     140:	09 09       	sbc	r16, r9
     142:	09 06       	cpc	r0, r25
     144:	00 3e       	cpi	r16, 0xE0	; 224
     146:	41 51       	subi	r20, 0x11	; 17
     148:	21 5e       	subi	r18, 0xE1	; 225
     14a:	00 7f       	andi	r16, 0xF0	; 240
     14c:	09 19       	sub	r16, r9
     14e:	29 46       	sbci	r18, 0x69	; 105
     150:	00 46       	sbci	r16, 0x60	; 96
     152:	49 49       	sbci	r20, 0x99	; 153
     154:	49 31       	cpi	r20, 0x19	; 25
     156:	00 01       	movw	r0, r0
     158:	01 7f       	andi	r16, 0xF1	; 241
     15a:	01 01       	movw	r0, r2
     15c:	00 3f       	cpi	r16, 0xF0	; 240
     15e:	40 40       	sbci	r20, 0x00	; 0
     160:	40 3f       	cpi	r20, 0xF0	; 240
     162:	00 1f       	adc	r16, r16
     164:	20 40       	sbci	r18, 0x00	; 0
     166:	20 1f       	adc	r18, r16
     168:	00 3f       	cpi	r16, 0xF0	; 240
     16a:	40 38       	cpi	r20, 0x80	; 128
     16c:	40 3f       	cpi	r20, 0xF0	; 240
     16e:	00 63       	ori	r16, 0x30	; 48
     170:	14 08       	sbc	r1, r4
     172:	14 63       	ori	r17, 0x34	; 52
     174:	00 07       	cpc	r16, r16
     176:	08 70       	andi	r16, 0x08	; 8
     178:	08 07       	cpc	r16, r24
     17a:	00 61       	ori	r16, 0x10	; 16
     17c:	51 49       	sbci	r21, 0x91	; 145
     17e:	45 43       	sbci	r20, 0x35	; 53
     180:	00 00       	nop
     182:	7f 41       	sbci	r23, 0x1F	; 31
     184:	41 00       	.word	0x0041	; ????
     186:	00 55       	subi	r16, 0x50	; 80
     188:	2a 55       	subi	r18, 0x5A	; 90
     18a:	2a 55       	subi	r18, 0x5A	; 90
     18c:	00 00       	nop
     18e:	41 41       	sbci	r20, 0x11	; 17
     190:	7f 00       	.word	0x007f	; ????
     192:	00 04       	cpc	r0, r0
     194:	02 01       	movw	r0, r4
     196:	02 04       	cpc	r0, r2
     198:	00 40       	sbci	r16, 0x00	; 0
     19a:	40 40       	sbci	r20, 0x00	; 0
     19c:	40 40       	sbci	r20, 0x00	; 0
     19e:	00 00       	nop
     1a0:	01 02       	muls	r16, r17
     1a2:	04 00       	.word	0x0004	; ????
     1a4:	00 20       	and	r0, r0
     1a6:	54 54       	subi	r21, 0x44	; 68
     1a8:	54 78       	andi	r21, 0x84	; 132
     1aa:	00 7f       	andi	r16, 0xF0	; 240
     1ac:	48 44       	sbci	r20, 0x48	; 72
     1ae:	44 38       	cpi	r20, 0x84	; 132
     1b0:	00 38       	cpi	r16, 0x80	; 128
     1b2:	44 44       	sbci	r20, 0x44	; 68
     1b4:	44 20       	and	r4, r4
     1b6:	00 38       	cpi	r16, 0x80	; 128
     1b8:	44 44       	sbci	r20, 0x44	; 68
     1ba:	48 7f       	andi	r20, 0xF8	; 248
     1bc:	00 38       	cpi	r16, 0x80	; 128
     1be:	54 54       	subi	r21, 0x44	; 68
     1c0:	54 18       	sub	r5, r4
     1c2:	00 08       	sbc	r0, r0
     1c4:	7e 09       	sbc	r23, r14
     1c6:	01 02       	muls	r16, r17
     1c8:	00 18       	sub	r0, r0
     1ca:	a4 a4       	ldd	r10, Z+44	; 0x2c
     1cc:	a4 7c       	andi	r26, 0xC4	; 196
     1ce:	00 7f       	andi	r16, 0xF0	; 240
     1d0:	08 04       	cpc	r0, r8
     1d2:	04 78       	andi	r16, 0x84	; 132
     1d4:	00 00       	nop
     1d6:	44 7d       	andi	r20, 0xD4	; 212
     1d8:	40 00       	.word	0x0040	; ????
     1da:	00 40       	sbci	r16, 0x00	; 0
     1dc:	80 84       	ldd	r8, Z+8	; 0x08
     1de:	7d 00       	.word	0x007d	; ????
     1e0:	00 7f       	andi	r16, 0xF0	; 240
     1e2:	10 28       	or	r1, r0
     1e4:	44 00       	.word	0x0044	; ????
     1e6:	00 00       	nop
     1e8:	41 7f       	andi	r20, 0xF1	; 241
     1ea:	40 00       	.word	0x0040	; ????
     1ec:	00 7c       	andi	r16, 0xC0	; 192
     1ee:	04 18       	sub	r0, r4
     1f0:	04 78       	andi	r16, 0x84	; 132
     1f2:	00 7c       	andi	r16, 0xC0	; 192
     1f4:	08 04       	cpc	r0, r8
     1f6:	04 78       	andi	r16, 0x84	; 132
     1f8:	00 38       	cpi	r16, 0x80	; 128
     1fa:	44 44       	sbci	r20, 0x44	; 68
     1fc:	44 38       	cpi	r20, 0x84	; 132
     1fe:	00 fc       	sbrc	r0, 0
     200:	24 24       	eor	r2, r4
     202:	24 18       	sub	r2, r4
     204:	00 18       	sub	r0, r0
     206:	24 24       	eor	r2, r4
     208:	18 fc       	.word	0xfc18	; ????
     20a:	00 7c       	andi	r16, 0xC0	; 192
     20c:	08 04       	cpc	r0, r8
     20e:	04 08       	sbc	r0, r4
     210:	00 48       	sbci	r16, 0x80	; 128
     212:	54 54       	subi	r21, 0x44	; 68
     214:	54 20       	and	r5, r4
     216:	00 04       	cpc	r0, r0
     218:	3f 44       	sbci	r19, 0x4F	; 79
     21a:	40 20       	and	r4, r0
     21c:	00 3c       	cpi	r16, 0xC0	; 192
     21e:	40 40       	sbci	r20, 0x00	; 0
     220:	20 7c       	andi	r18, 0xC0	; 192
     222:	00 1c       	adc	r0, r0
     224:	20 40       	sbci	r18, 0x00	; 0
     226:	20 1c       	adc	r2, r0
     228:	00 3c       	cpi	r16, 0xC0	; 192
     22a:	40 30       	cpi	r20, 0x00	; 0
     22c:	40 3c       	cpi	r20, 0xC0	; 192
     22e:	00 44       	sbci	r16, 0x40	; 64
     230:	28 10       	cpse	r2, r8
     232:	28 44       	sbci	r18, 0x48	; 72
     234:	00 1c       	adc	r0, r0
     236:	a0 a0       	ldd	r10, Z+32	; 0x20
     238:	a0 7c       	andi	r26, 0xC0	; 192
     23a:	00 44       	sbci	r16, 0x40	; 64
     23c:	64 54       	subi	r22, 0x44	; 68
     23e:	4c 44       	sbci	r20, 0x4C	; 76
     240:	14 14       	cp	r1, r4
     242:	14 14       	cp	r1, r4
     244:	14 14       	cp	r1, r4

00000246 <ssd1306_init_sequence>:
     246:	ae d5 f0 a8 3f d3 00 40 8d 14 20 00 a1 c8 da 12     ....?..@.. .....
     256:	81 3f d9 22 db 20 a4 a6 2e af 22 00 3f 21 00 7f     .?.". ....".?!..

00000266 <__ctors_end>:
     266:	11 24       	eor	r1, r1
     268:	1f be       	out	0x3f, r1	; 63
     26a:	cf e5       	ldi	r28, 0x5F	; 95
     26c:	d2 e0       	ldi	r29, 0x02	; 2
     26e:	de bf       	out	0x3e, r29	; 62
     270:	cd bf       	out	0x3d, r28	; 61

00000272 <__do_copy_data>:
     272:	10 e0       	ldi	r17, 0x00	; 0
     274:	a0 e6       	ldi	r26, 0x60	; 96
     276:	b0 e0       	ldi	r27, 0x00	; 0
     278:	ee e8       	ldi	r30, 0x8E	; 142
     27a:	f3 e1       	ldi	r31, 0x13	; 19
     27c:	02 c0       	rjmp	.+4      	; 0x282 <__do_copy_data+0x10>
     27e:	05 90       	lpm	r0, Z+
     280:	0d 92       	st	X+, r0
     282:	ae 39       	cpi	r26, 0x9E	; 158
     284:	b1 07       	cpc	r27, r17
     286:	d9 f7       	brne	.-10     	; 0x27e <__do_copy_data+0xc>

00000288 <__do_clear_bss>:
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	ae e9       	ldi	r26, 0x9E	; 158
     28c:	b0 e0       	ldi	r27, 0x00	; 0
     28e:	01 c0       	rjmp	.+2      	; 0x292 <.do_clear_bss_start>

00000290 <.do_clear_bss_loop>:
     290:	1d 92       	st	X+, r1

00000292 <.do_clear_bss_start>:
     292:	a7 3f       	cpi	r26, 0xF7	; 247
     294:	b2 07       	cpc	r27, r18
     296:	e1 f7       	brne	.-8      	; 0x290 <.do_clear_bss_loop>
     298:	c2 d2       	rcall	.+1412   	; 0x81e <main>
     29a:	77 c8       	rjmp	.-3858   	; 0xfffff38a <__eeprom_end+0xff7ef389>

0000029c <__bad_interrupt>:
     29c:	b1 ce       	rjmp	.-670    	; 0x0 <__vectors>

0000029e <start_millis_timer>:
		}
    }
}

void start_millis_timer() {
	cli();
     29e:	f8 94       	cli
	
	// set timer0 CTC mode
	TCCR0A |= _BV(WGM01);
     2a0:	8a b5       	in	r24, 0x2a	; 42
     2a2:	82 60       	ori	r24, 0x02	; 2
     2a4:	8a bd       	out	0x2a, r24	; 42
	
	// set timer0 compare value
	OCR0A = 135; // 125
     2a6:	87 e8       	ldi	r24, 0x87	; 135
     2a8:	89 bd       	out	0x29, r24	; 41
	
	// set timer0 prescaler 64
	TCCR0B |= _BV(CS00) | _BV(CS01);
     2aa:	83 b7       	in	r24, 0x33	; 51
     2ac:	83 60       	ori	r24, 0x03	; 3
     2ae:	83 bf       	out	0x33, r24	; 51
	
	// enable interrupt
	TIMSK |= _BV(OCIE0A);
     2b0:	89 b7       	in	r24, 0x39	; 57
     2b2:	80 61       	ori	r24, 0x10	; 16
     2b4:	89 bf       	out	0x39, r24	; 57
	
	sei();
     2b6:	78 94       	sei
     2b8:	08 95       	ret

000002ba <__vector_10>:
}

ISR(TIMER0_COMPA_vect) {
     2ba:	1f 92       	push	r1
     2bc:	0f 92       	push	r0
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	0f 92       	push	r0
     2c2:	11 24       	eor	r1, r1
     2c4:	8f 93       	push	r24
     2c6:	9f 93       	push	r25
     2c8:	af 93       	push	r26
     2ca:	bf 93       	push	r27
	ms++;
     2cc:	80 91 a8 00 	lds	r24, 0x00A8	; 0x8000a8 <ms>
     2d0:	90 91 a9 00 	lds	r25, 0x00A9	; 0x8000a9 <ms+0x1>
     2d4:	a0 91 aa 00 	lds	r26, 0x00AA	; 0x8000aa <ms+0x2>
     2d8:	b0 91 ab 00 	lds	r27, 0x00AB	; 0x8000ab <ms+0x3>
     2dc:	01 96       	adiw	r24, 0x01	; 1
     2de:	a1 1d       	adc	r26, r1
     2e0:	b1 1d       	adc	r27, r1
     2e2:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <ms>
     2e6:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <ms+0x1>
     2ea:	a0 93 aa 00 	sts	0x00AA, r26	; 0x8000aa <ms+0x2>
     2ee:	b0 93 ab 00 	sts	0x00AB, r27	; 0x8000ab <ms+0x3>
}
     2f2:	bf 91       	pop	r27
     2f4:	af 91       	pop	r26
     2f6:	9f 91       	pop	r25
     2f8:	8f 91       	pop	r24
     2fa:	0f 90       	pop	r0
     2fc:	0f be       	out	0x3f, r0	; 63
     2fe:	0f 90       	pop	r0
     300:	1f 90       	pop	r1
     302:	18 95       	reti

00000304 <millis>:

uint32_t millis() {
	uint32_t copy;

	ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
     304:	2f b7       	in	r18, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     306:	f8 94       	cli
		copy = ms;
     308:	60 91 a8 00 	lds	r22, 0x00A8	; 0x8000a8 <ms>
     30c:	70 91 a9 00 	lds	r23, 0x00A9	; 0x8000a9 <ms+0x1>
     310:	80 91 aa 00 	lds	r24, 0x00AA	; 0x8000aa <ms+0x2>
     314:	90 91 ab 00 	lds	r25, 0x00AB	; 0x8000ab <ms+0x3>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     318:	2f bf       	out	0x3f, r18	; 63
	}
	
	return copy;
}
     31a:	08 95       	ret

0000031c <set_wheel_diameter>:
	}
	wheel_length = (diameter * 3.14) / 100000.0;
}

void set_wheel_diameter(uint8_t diameter) {
	if (diameter > 0 && diameter < 0xFF) {
     31c:	9f ef       	ldi	r25, 0xFF	; 255
     31e:	98 0f       	add	r25, r24
     320:	9e 3f       	cpi	r25, 0xFE	; 254
     322:	20 f4       	brcc	.+8      	; 0x32c <set_wheel_diameter+0x10>
     324:	68 2f       	mov	r22, r24
		eeprom_write_byte(&EEPROM_WHEEL_DIAMETER, diameter);
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	21 d8       	rcall	.-4030   	; 0xfffff36e <__eeprom_end+0xff7ef36d>
     32c:	08 95       	ret

0000032e <calc_wheel_length>:
	
	return copy;
}

void calc_wheel_length() {
	uint8_t diameter = eeprom_read_byte(&EEPROM_WHEEL_DIAMETER); // cm
     32e:	80 e0       	ldi	r24, 0x00	; 0
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	15 d8       	rcall	.-4054   	; 0xfffff35e <__eeprom_end+0xff7ef35d>
	if (diameter == 0xFF) {
     334:	8f 3f       	cpi	r24, 0xFF	; 255
     336:	19 f4       	brne	.+6      	; 0x33e <calc_wheel_length+0x10>
		diameter = 64; // default
		set_wheel_diameter(diameter);
     338:	80 e4       	ldi	r24, 0x40	; 64
     33a:	f0 df       	rcall	.-32     	; 0x31c <set_wheel_diameter>
}

void calc_wheel_length() {
	uint8_t diameter = eeprom_read_byte(&EEPROM_WHEEL_DIAMETER); // cm
	if (diameter == 0xFF) {
		diameter = 64; // default
     33c:	80 e4       	ldi	r24, 0x40	; 64
		set_wheel_diameter(diameter);
	}
	wheel_length = (diameter * 3.14) / 100000.0;
     33e:	68 2f       	mov	r22, r24
     340:	70 e0       	ldi	r23, 0x00	; 0
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	87 d6       	rcall	.+3342   	; 0x1056 <__floatsisf>
     348:	23 ec       	ldi	r18, 0xC3	; 195
     34a:	35 ef       	ldi	r19, 0xF5	; 245
     34c:	48 e4       	ldi	r20, 0x48	; 72
     34e:	50 e4       	ldi	r21, 0x40	; 64
     350:	36 d7       	rcall	.+3692   	; 0x11be <__mulsf3>
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e5       	ldi	r19, 0x50	; 80
     356:	43 ec       	ldi	r20, 0xC3	; 195
     358:	57 e4       	ldi	r21, 0x47	; 71
     35a:	e2 d5       	rcall	.+3012   	; 0xf20 <__divsf3>
     35c:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <wheel_length>
     360:	70 93 b4 00 	sts	0x00B4, r23	; 0x8000b4 <wheel_length+0x1>
     364:	80 93 b5 00 	sts	0x00B5, r24	; 0x8000b5 <wheel_length+0x2>
     368:	90 93 b6 00 	sts	0x00B6, r25	; 0x8000b6 <wheel_length+0x3>
     36c:	08 95       	ret

0000036e <turn_display>:
		eeprom_write_byte(&EEPROM_WHEEL_DIAMETER, diameter);
	}
}

void turn_display(bool on) {
	display_turned = on;
     36e:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <display_turned>
	ssd1306_turn_display(on);
     372:	f6 d3       	rcall	.+2028   	; 0xb60 <ssd1306_turn_display>
     374:	08 95       	ret

00000376 <switch_display_menu>:
}

void switch_display_menu() {
	ssd1306_clear();
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	40 e0       	ldi	r20, 0x00	; 0
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	ce d3       	rcall	.+1948   	; 0xb1c <ssd1306_fill4>
	display_menu++;
     380:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <display_menu>
     384:	8f 5f       	subi	r24, 0xFF	; 255
	if (display_menu == 4) {
     386:	84 30       	cpi	r24, 0x04	; 4
     388:	19 f0       	breq	.+6      	; 0x390 <switch_display_menu+0x1a>
	ssd1306_turn_display(on);
}

void switch_display_menu() {
	ssd1306_clear();
	display_menu++;
     38a:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <display_menu>
     38e:	08 95       	ret
	if (display_menu == 4) {
		display_menu = 0;
     390:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <display_menu>
     394:	08 95       	ret

00000396 <display_data>:
	}
}

void display_data() {
     396:	2f 92       	push	r2
     398:	3f 92       	push	r3
     39a:	4f 92       	push	r4
     39c:	5f 92       	push	r5
     39e:	6f 92       	push	r6
     3a0:	7f 92       	push	r7
     3a2:	8f 92       	push	r8
     3a4:	9f 92       	push	r9
     3a6:	af 92       	push	r10
     3a8:	bf 92       	push	r11
     3aa:	cf 92       	push	r12
     3ac:	df 92       	push	r13
     3ae:	ef 92       	push	r14
     3b0:	ff 92       	push	r15
     3b2:	0f 93       	push	r16
     3b4:	1f 93       	push	r17
     3b6:	cf 93       	push	r28
     3b8:	df 93       	push	r29
	switch(display_menu) {
     3ba:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <display_menu>
     3be:	81 30       	cpi	r24, 0x01	; 1
     3c0:	89 f1       	breq	.+98     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     3c2:	38 f0       	brcs	.+14     	; 0x3d2 <display_data+0x3c>
     3c4:	82 30       	cpi	r24, 0x02	; 2
     3c6:	09 f4       	brne	.+2      	; 0x3ca <display_data+0x34>
     3c8:	56 c0       	rjmp	.+172    	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     3ca:	83 30       	cpi	r24, 0x03	; 3
     3cc:	09 f4       	brne	.+2      	; 0x3d0 <display_data+0x3a>
     3ce:	9b c0       	rjmp	.+310    	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
     3d0:	ad c0       	rjmp	.+346    	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
		case MENU_MAIN:
			ssd1306_setpos(0, 0);
     3d2:	60 e0       	ldi	r22, 0x00	; 0
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	8d d3       	rcall	.+1818   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string("s: ");
     3d8:	8e e8       	ldi	r24, 0x8E	; 142
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	f8 d3       	rcall	.+2032   	; 0xbce <ssd1306tx_string>
			ssd1306tx_float(speed, 1);
     3de:	60 91 eb 00 	lds	r22, 0x00EB	; 0x8000eb <speed>
     3e2:	70 91 ec 00 	lds	r23, 0x00EC	; 0x8000ec <speed+0x1>
     3e6:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <speed+0x2>
     3ea:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <speed+0x3>
     3ee:	41 e0       	ldi	r20, 0x01	; 1
     3f0:	50 e0       	ldi	r21, 0x00	; 0
     3f2:	e6 d4       	rcall	.+2508   	; 0xdc0 <ssd1306tx_float>
			ssd1306tx_string(" km/h    ");
     3f4:	82 e7       	ldi	r24, 0x72	; 114
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	ea d3       	rcall	.+2004   	; 0xbce <ssd1306tx_string>

			ssd1306_setpos(0, 10);
     3fa:	6a e0       	ldi	r22, 0x0A	; 10
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	79 d3       	rcall	.+1778   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string("d: ");
     400:	8c e7       	ldi	r24, 0x7C	; 124
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	e4 d3       	rcall	.+1992   	; 0xbce <ssd1306tx_string>
			ssd1306tx_float(distance, 2);
     406:	60 91 b7 00 	lds	r22, 0x00B7	; 0x8000b7 <distance>
     40a:	70 91 b8 00 	lds	r23, 0x00B8	; 0x8000b8 <distance+0x1>
     40e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <distance+0x2>
     412:	90 91 ba 00 	lds	r25, 0x00BA	; 0x8000ba <distance+0x3>
     416:	42 e0       	ldi	r20, 0x02	; 2
     418:	50 e0       	ldi	r21, 0x00	; 0
     41a:	d2 d4       	rcall	.+2468   	; 0xdc0 <ssd1306tx_float>
			ssd1306tx_string(" km    ");
     41c:	80 e8       	ldi	r24, 0x80	; 128
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	d6 d3       	rcall	.+1964   	; 0xbce <ssd1306tx_string>
			break;
     422:	84 c0       	rjmp	.+264    	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
		
		case MENU_SPEED:
			ssd1306_setpos(0, 0);
     424:	60 e0       	ldi	r22, 0x00	; 0
     426:	80 e0       	ldi	r24, 0x00	; 0
     428:	64 d3       	rcall	.+1736   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string("ms: ");
     42a:	88 e8       	ldi	r24, 0x88	; 136
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	cf d3       	rcall	.+1950   	; 0xbce <ssd1306tx_string>
			ssd1306tx_float(max_speed, 1);
     430:	60 91 ad 00 	lds	r22, 0x00AD	; 0x8000ad <max_speed>
     434:	70 91 ae 00 	lds	r23, 0x00AE	; 0x8000ae <max_speed+0x1>
     438:	80 91 af 00 	lds	r24, 0x00AF	; 0x8000af <max_speed+0x2>
     43c:	90 91 b0 00 	lds	r25, 0x00B0	; 0x8000b0 <max_speed+0x3>
     440:	41 e0       	ldi	r20, 0x01	; 1
     442:	50 e0       	ldi	r21, 0x00	; 0
     444:	bd d4       	rcall	.+2426   	; 0xdc0 <ssd1306tx_float>
			ssd1306tx_string(" km/h    ");
     446:	82 e7       	ldi	r24, 0x72	; 114
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	c1 d3       	rcall	.+1922   	; 0xbce <ssd1306tx_string>

			ssd1306_setpos(0, 10);
     44c:	6a e0       	ldi	r22, 0x0A	; 10
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	50 d3       	rcall	.+1696   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string("as: ");
     452:	8d e8       	ldi	r24, 0x8D	; 141
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	bb d3       	rcall	.+1910   	; 0xbce <ssd1306tx_string>
			ssd1306tx_float(avg_speed, 1);
     458:	60 91 9f 00 	lds	r22, 0x009F	; 0x80009f <avg_speed>
     45c:	70 91 a0 00 	lds	r23, 0x00A0	; 0x8000a0 <avg_speed+0x1>
     460:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <avg_speed+0x2>
     464:	90 91 a2 00 	lds	r25, 0x00A2	; 0x8000a2 <avg_speed+0x3>
     468:	41 e0       	ldi	r20, 0x01	; 1
     46a:	50 e0       	ldi	r21, 0x00	; 0
     46c:	a9 d4       	rcall	.+2386   	; 0xdc0 <ssd1306tx_float>
			ssd1306tx_string(" km/h    ");
     46e:	82 e7       	ldi	r24, 0x72	; 114
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	ad d3       	rcall	.+1882   	; 0xbce <ssd1306tx_string>
			break;
     474:	5b c0       	rjmp	.+182    	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>

		case MENU_TIME: {
			uint32_t now = millis();
     476:	46 df       	rcall	.-372    	; 0x304 <millis>
     478:	6b 01       	movw	r12, r22
     47a:	7c 01       	movw	r14, r24
			uint32_t sec = now / 1000ul;
			int hours = (sec / 3600ul);
     47c:	20 e8       	ldi	r18, 0x80	; 128
     47e:	3e ee       	ldi	r19, 0xEE	; 238
     480:	46 e3       	ldi	r20, 0x36	; 54
     482:	50 e0       	ldi	r21, 0x00	; 0
     484:	1a d7       	rcall	.+3636   	; 0x12ba <__udivmodsi4>
     486:	49 01       	movw	r8, r18
     488:	5a 01       	movw	r10, r20
			int minutes = (sec % 3600ul) / 60ul;
     48a:	c7 01       	movw	r24, r14
     48c:	b6 01       	movw	r22, r12
     48e:	28 ee       	ldi	r18, 0xE8	; 232
     490:	33 e0       	ldi	r19, 0x03	; 3
     492:	40 e0       	ldi	r20, 0x00	; 0
     494:	50 e0       	ldi	r21, 0x00	; 0
     496:	11 d7       	rcall	.+3618   	; 0x12ba <__udivmodsi4>
     498:	ca 01       	movw	r24, r20
     49a:	b9 01       	movw	r22, r18
     49c:	20 e1       	ldi	r18, 0x10	; 16
     49e:	3e e0       	ldi	r19, 0x0E	; 14
     4a0:	40 e0       	ldi	r20, 0x00	; 0
     4a2:	50 e0       	ldi	r21, 0x00	; 0
     4a4:	0a d7       	rcall	.+3604   	; 0x12ba <__udivmodsi4>
     4a6:	2c e3       	ldi	r18, 0x3C	; 60
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	40 e0       	ldi	r20, 0x00	; 0
     4ac:	50 e0       	ldi	r21, 0x00	; 0
     4ae:	05 d7       	rcall	.+3594   	; 0x12ba <__udivmodsi4>
     4b0:	29 01       	movw	r4, r18
     4b2:	3a 01       	movw	r6, r20
     4b4:	6b 01       	movw	r12, r22
     4b6:	7c 01       	movw	r14, r24
     4b8:	89 01       	movw	r16, r18
			int seconds = (sec % 3600ul) % 60ul;
     4ba:	eb 01       	movw	r28, r22
			
			ssd1306_setpos(0, 0);
     4bc:	60 e0       	ldi	r22, 0x00	; 0
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	18 d3       	rcall	.+1584   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string("time:");
     4c2:	82 e9       	ldi	r24, 0x92	; 146
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	83 d3       	rcall	.+1798   	; 0xbce <ssd1306tx_string>
			
			ssd1306_setpos(0, 10);
     4c8:	6a e0       	ldi	r22, 0x0A	; 10
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	12 d3       	rcall	.+1572   	; 0xaf2 <ssd1306_setpos>
			if (hours < 10) {
     4ce:	8a e0       	ldi	r24, 0x0A	; 10
     4d0:	88 16       	cp	r8, r24
     4d2:	91 04       	cpc	r9, r1
     4d4:	14 f4       	brge	.+4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
				ssd1306tx_char('0');
     4d6:	80 e3       	ldi	r24, 0x30	; 48
     4d8:	54 d3       	rcall	.+1704   	; 0xb82 <ssd1306tx_char>
			}
			ssd1306tx_int(hours);
     4da:	c4 01       	movw	r24, r8
     4dc:	c7 d3       	rcall	.+1934   	; 0xc6c <ssd1306tx_int>
			ssd1306tx_string(":");
     4de:	8b e9       	ldi	r24, 0x9B	; 155
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	75 d3       	rcall	.+1770   	; 0xbce <ssd1306tx_string>
			
			if (minutes < 10) {
     4e4:	0a 30       	cpi	r16, 0x0A	; 10
     4e6:	11 05       	cpc	r17, r1
     4e8:	14 f4       	brge	.+4      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
				ssd1306tx_char('0');
     4ea:	80 e3       	ldi	r24, 0x30	; 48
     4ec:	4a d3       	rcall	.+1684   	; 0xb82 <ssd1306tx_char>
			}
			ssd1306tx_int(minutes);
     4ee:	c2 01       	movw	r24, r4
     4f0:	bd d3       	rcall	.+1914   	; 0xc6c <ssd1306tx_int>
			ssd1306tx_string(":");
     4f2:	8b e9       	ldi	r24, 0x9B	; 155
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	6b d3       	rcall	.+1750   	; 0xbce <ssd1306tx_string>
			
			if (seconds < 10) {
     4f8:	2a 97       	sbiw	r28, 0x0a	; 10
     4fa:	14 f4       	brge	.+4      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
				ssd1306tx_char('0');
     4fc:	80 e3       	ldi	r24, 0x30	; 48
     4fe:	41 d3       	rcall	.+1666   	; 0xb82 <ssd1306tx_char>
			}
			ssd1306tx_int(seconds);
     500:	c6 01       	movw	r24, r12
     502:	b4 d3       	rcall	.+1896   	; 0xc6c <ssd1306tx_int>
			break;
     504:	13 c0       	rjmp	.+38     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
		}
		
		case MENU_LED:
			ssd1306_setpos(0, 0);
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	f3 d2       	rcall	.+1510   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string("led:");
     50c:	88 e9       	ldi	r24, 0x98	; 152
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	5e d3       	rcall	.+1724   	; 0xbce <ssd1306tx_string>

			ssd1306_setpos(0, 10);
     512:	6a e0       	ldi	r22, 0x0A	; 10
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	ed d2       	rcall	.+1498   	; 0xaf2 <ssd1306_setpos>
			ssd1306tx_string(led_turned ? "on " : "off");
     518:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <led_turned>
     51c:	81 11       	cpse	r24, r1
     51e:	03 c0       	rjmp	.+6      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
     520:	8e e6       	ldi	r24, 0x6E	; 110
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	02 c0       	rjmp	.+4      	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
     526:	8a e6       	ldi	r24, 0x6A	; 106
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	51 d3       	rcall	.+1698   	; 0xbce <ssd1306tx_string>
			break;
	}
}
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	1f 91       	pop	r17
     532:	0f 91       	pop	r16
     534:	ff 90       	pop	r15
     536:	ef 90       	pop	r14
     538:	df 90       	pop	r13
     53a:	cf 90       	pop	r12
     53c:	bf 90       	pop	r11
     53e:	af 90       	pop	r10
     540:	9f 90       	pop	r9
     542:	8f 90       	pop	r8
     544:	7f 90       	pop	r7
     546:	6f 90       	pop	r6
     548:	5f 90       	pop	r5
     54a:	4f 90       	pop	r4
     54c:	3f 90       	pop	r3
     54e:	2f 90       	pop	r2
     550:	08 95       	ret

00000552 <turn_led>:

void turn_led(bool on) {
	led_turned = on;
     552:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <led_turned>
	// turn off led
	PORTB &= ~_BV(LED_PIN);
     556:	c4 98       	cbi	0x18, 4	; 24
     558:	08 95       	ret

0000055a <handle_btn_click>:
}

void handle_btn_click(uint8_t pin_state, uint32_t timer_now) {
     55a:	cf 92       	push	r12
     55c:	df 92       	push	r13
     55e:	ef 92       	push	r14
     560:	ff 92       	push	r15
     562:	6a 01       	movw	r12, r20
     564:	7b 01       	movw	r14, r22
	// click start
	if (!btn_pressed && !pin_state) {
     566:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <btn_pressed>
     56a:	91 11       	cpse	r25, r1
     56c:	5f c0       	rjmp	.+190    	; 0x62c <handle_btn_click+0xd2>
     56e:	81 11       	cpse	r24, r1
     570:	60 c0       	rjmp	.+192    	; 0x632 <handle_btn_click+0xd8>
		btn_pressed = true;
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <btn_pressed>
		btn_timer = timer_now;
     578:	40 93 e2 00 	sts	0x00E2, r20	; 0x8000e2 <btn_timer>
     57c:	50 93 e3 00 	sts	0x00E3, r21	; 0x8000e3 <btn_timer+0x1>
     580:	60 93 e4 00 	sts	0x00E4, r22	; 0x8000e4 <btn_timer+0x2>
     584:	70 93 e5 00 	sts	0x00E5, r23	; 0x8000e5 <btn_timer+0x3>
     588:	26 c0       	rjmp	.+76     	; 0x5d6 <handle_btn_click+0x7c>
	}
	
	// handle single button click
	if (btn_pressed && pin_state) {
		btn_pressed = false;
     58a:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <btn_pressed>
		if (!btn_long_pressed && display_turned && timer_now - btn_timer >= 50) { // single press
     58e:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end>
     592:	81 11       	cpse	r24, r1
     594:	19 c0       	rjmp	.+50     	; 0x5c8 <handle_btn_click+0x6e>
     596:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <display_turned>
     59a:	88 23       	and	r24, r24
     59c:	a9 f0       	breq	.+42     	; 0x5c8 <handle_btn_click+0x6e>
     59e:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <btn_timer>
     5a2:	90 91 e3 00 	lds	r25, 0x00E3	; 0x8000e3 <btn_timer+0x1>
     5a6:	a0 91 e4 00 	lds	r26, 0x00E4	; 0x8000e4 <btn_timer+0x2>
     5aa:	b0 91 e5 00 	lds	r27, 0x00E5	; 0x8000e5 <btn_timer+0x3>
     5ae:	a7 01       	movw	r20, r14
     5b0:	96 01       	movw	r18, r12
     5b2:	28 1b       	sub	r18, r24
     5b4:	39 0b       	sbc	r19, r25
     5b6:	4a 0b       	sbc	r20, r26
     5b8:	5b 0b       	sbc	r21, r27
     5ba:	22 33       	cpi	r18, 0x32	; 50
     5bc:	31 05       	cpc	r19, r1
     5be:	41 05       	cpc	r20, r1
     5c0:	51 05       	cpc	r21, r1
     5c2:	10 f0       	brcs	.+4      	; 0x5c8 <handle_btn_click+0x6e>
			switch_display_menu();
     5c4:	d8 de       	rcall	.-592    	; 0x376 <switch_display_menu>
			display_data();
     5c6:	e7 de       	rcall	.-562    	; 0x396 <display_data>
		}
		btn_long_pressed = false;
     5c8:	10 92 9e 00 	sts	0x009E, r1	; 0x80009e <__data_end>
	}
	
	// handle long button click
	if (btn_pressed && !btn_long_pressed && ((timer_now - btn_timer) >= LONG_PRESS_TIME)) {
     5cc:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <btn_pressed>
     5d0:	81 11       	cpse	r24, r1
     5d2:	05 c0       	rjmp	.+10     	; 0x5de <handle_btn_click+0x84>
     5d4:	2e c0       	rjmp	.+92     	; 0x632 <handle_btn_click+0xd8>
     5d6:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end>
     5da:	81 11       	cpse	r24, r1
     5dc:	2a c0       	rjmp	.+84     	; 0x632 <handle_btn_click+0xd8>
     5de:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <btn_timer>
     5e2:	90 91 e3 00 	lds	r25, 0x00E3	; 0x8000e3 <btn_timer+0x1>
     5e6:	a0 91 e4 00 	lds	r26, 0x00E4	; 0x8000e4 <btn_timer+0x2>
     5ea:	b0 91 e5 00 	lds	r27, 0x00E5	; 0x8000e5 <btn_timer+0x3>
     5ee:	c8 1a       	sub	r12, r24
     5f0:	d9 0a       	sbc	r13, r25
     5f2:	ea 0a       	sbc	r14, r26
     5f4:	fb 0a       	sbc	r15, r27
     5f6:	34 ef       	ldi	r19, 0xF4	; 244
     5f8:	c3 16       	cp	r12, r19
     5fa:	31 e0       	ldi	r19, 0x01	; 1
     5fc:	d3 06       	cpc	r13, r19
     5fe:	e1 04       	cpc	r14, r1
     600:	f1 04       	cpc	r15, r1
     602:	b8 f0       	brcs	.+46     	; 0x632 <handle_btn_click+0xd8>
		btn_long_pressed = true;
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <__data_end>
		switch (display_menu) {
     60a:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <display_menu>
     60e:	83 30       	cpi	r24, 0x03	; 3
     610:	39 f4       	brne	.+14     	; 0x620 <handle_btn_click+0xc6>
			case MENU_LED:
				turn_led(!led_turned);
     612:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <led_turned>
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	89 27       	eor	r24, r25
     61a:	9b df       	rcall	.-202    	; 0x552 <turn_led>
				display_data();
     61c:	bc de       	rcall	.-648    	; 0x396 <display_data>
				break;
     61e:	09 c0       	rjmp	.+18     	; 0x632 <handle_btn_click+0xd8>
			default:
				turn_display(!display_turned);
     620:	90 91 e1 00 	lds	r25, 0x00E1	; 0x8000e1 <display_turned>
     624:	81 e0       	ldi	r24, 0x01	; 1
     626:	89 27       	eor	r24, r25
     628:	a2 de       	rcall	.-700    	; 0x36e <turn_display>
				break;
		}
	}
}
     62a:	03 c0       	rjmp	.+6      	; 0x632 <handle_btn_click+0xd8>
		btn_pressed = true;
		btn_timer = timer_now;
	}
	
	// handle single button click
	if (btn_pressed && pin_state) {
     62c:	81 11       	cpse	r24, r1
     62e:	ad cf       	rjmp	.-166    	; 0x58a <handle_btn_click+0x30>
     630:	d2 cf       	rjmp	.-92     	; 0x5d6 <handle_btn_click+0x7c>
			default:
				turn_display(!display_turned);
				break;
		}
	}
}
     632:	ff 90       	pop	r15
     634:	ef 90       	pop	r14
     636:	df 90       	pop	r13
     638:	cf 90       	pop	r12
     63a:	08 95       	ret

0000063c <calc_avg_speed>:
		wheel_rotation_counter = 0;
		wheel_rotation_start_time = 0;
	}
}

void calc_avg_speed(float speed) {
     63c:	8f 92       	push	r8
     63e:	9f 92       	push	r9
     640:	af 92       	push	r10
     642:	bf 92       	push	r11
     644:	cf 92       	push	r12
     646:	df 92       	push	r13
     648:	ef 92       	push	r14
     64a:	ff 92       	push	r15
     64c:	0f 93       	push	r16
     64e:	1f 93       	push	r17
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	6b 01       	movw	r12, r22
     656:	7c 01       	movw	r14, r24
	if (speed == 0) {
     658:	20 e0       	ldi	r18, 0x00	; 0
     65a:	30 e0       	ldi	r19, 0x00	; 0
     65c:	a9 01       	movw	r20, r18
     65e:	5c d4       	rcall	.+2232   	; 0xf18 <__cmpsf2>
     660:	88 23       	and	r24, r24
     662:	09 f4       	brne	.+2      	; 0x666 <calc_avg_speed+0x2a>
     664:	57 c0       	rjmp	.+174    	; 0x714 <calc_avg_speed+0xd8>
		return;
	}
	
	speed_arr[speed_arr_index++] = speed;
     666:	e0 91 bf 00 	lds	r30, 0x00BF	; 0x8000bf <speed_arr_index>
     66a:	81 e0       	ldi	r24, 0x01	; 1
     66c:	8e 0f       	add	r24, r30
     66e:	80 93 bf 00 	sts	0x00BF, r24	; 0x8000bf <speed_arr_index>
     672:	f0 e0       	ldi	r31, 0x00	; 0
     674:	ee 0f       	add	r30, r30
     676:	ff 1f       	adc	r31, r31
     678:	ee 0f       	add	r30, r30
     67a:	ff 1f       	adc	r31, r31
     67c:	ef 53       	subi	r30, 0x3F	; 63
     67e:	ff 4f       	sbci	r31, 0xFF	; 255
     680:	c0 82       	st	Z, r12
     682:	d1 82       	std	Z+1, r13	; 0x01
     684:	e2 82       	std	Z+2, r14	; 0x02
     686:	f3 82       	std	Z+3, r15	; 0x03
	
	if (speed_arr_index == 8) {
     688:	88 30       	cpi	r24, 0x08	; 8
     68a:	09 f0       	breq	.+2      	; 0x68e <calc_avg_speed+0x52>
     68c:	43 c0       	rjmp	.+134    	; 0x714 <calc_avg_speed+0xd8>
		speed_arr_index = 0;
     68e:	10 92 bf 00 	sts	0x00BF, r1	; 0x8000bf <speed_arr_index>
     692:	c1 ec       	ldi	r28, 0xC1	; 193
     694:	d0 e0       	ldi	r29, 0x00	; 0
     696:	01 ee       	ldi	r16, 0xE1	; 225
     698:	10 e0       	ldi	r17, 0x00	; 0
		float sum = 0;
     69a:	60 e0       	ldi	r22, 0x00	; 0
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	cb 01       	movw	r24, r22
		for (uint8_t i = 0; i < 8; i++) {
			sum += speed_arr[i];
     6a0:	29 91       	ld	r18, Y+
     6a2:	39 91       	ld	r19, Y+
     6a4:	49 91       	ld	r20, Y+
     6a6:	59 91       	ld	r21, Y+
     6a8:	d3 d3       	rcall	.+1958   	; 0xe50 <__addsf3>
	speed_arr[speed_arr_index++] = speed;
	
	if (speed_arr_index == 8) {
		speed_arr_index = 0;
		float sum = 0;
		for (uint8_t i = 0; i < 8; i++) {
     6aa:	c0 17       	cp	r28, r16
     6ac:	d1 07       	cpc	r29, r17
     6ae:	c1 f7       	brne	.-16     	; 0x6a0 <calc_avg_speed+0x64>
			sum += speed_arr[i];
		}
		
		sum /= 8;
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	40 e0       	ldi	r20, 0x00	; 0
     6b6:	5e e3       	ldi	r21, 0x3E	; 62
     6b8:	82 d5       	rcall	.+2820   	; 0x11be <__mulsf3>
     6ba:	4b 01       	movw	r8, r22
     6bc:	5c 01       	movw	r10, r24
		if (avg_speed == 0) {
     6be:	c0 90 9f 00 	lds	r12, 0x009F	; 0x80009f <avg_speed>
     6c2:	d0 90 a0 00 	lds	r13, 0x00A0	; 0x8000a0 <avg_speed+0x1>
     6c6:	e0 90 a1 00 	lds	r14, 0x00A1	; 0x8000a1 <avg_speed+0x2>
     6ca:	f0 90 a2 00 	lds	r15, 0x00A2	; 0x8000a2 <avg_speed+0x3>
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	a9 01       	movw	r20, r18
     6d4:	c7 01       	movw	r24, r14
     6d6:	b6 01       	movw	r22, r12
     6d8:	1f d4       	rcall	.+2110   	; 0xf18 <__cmpsf2>
     6da:	81 11       	cpse	r24, r1
     6dc:	09 c0       	rjmp	.+18     	; 0x6f0 <calc_avg_speed+0xb4>
			avg_speed = sum;
     6de:	80 92 9f 00 	sts	0x009F, r8	; 0x80009f <avg_speed>
     6e2:	90 92 a0 00 	sts	0x00A0, r9	; 0x8000a0 <avg_speed+0x1>
     6e6:	a0 92 a1 00 	sts	0x00A1, r10	; 0x8000a1 <avg_speed+0x2>
     6ea:	b0 92 a2 00 	sts	0x00A2, r11	; 0x8000a2 <avg_speed+0x3>
     6ee:	12 c0       	rjmp	.+36     	; 0x714 <calc_avg_speed+0xd8>
		} else {
			avg_speed = (avg_speed + sum) / 2;
     6f0:	a7 01       	movw	r20, r14
     6f2:	96 01       	movw	r18, r12
     6f4:	c5 01       	movw	r24, r10
     6f6:	b4 01       	movw	r22, r8
     6f8:	ab d3       	rcall	.+1878   	; 0xe50 <__addsf3>
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	40 e0       	ldi	r20, 0x00	; 0
     700:	5f e3       	ldi	r21, 0x3F	; 63
     702:	5d d5       	rcall	.+2746   	; 0x11be <__mulsf3>
     704:	60 93 9f 00 	sts	0x009F, r22	; 0x80009f <avg_speed>
     708:	70 93 a0 00 	sts	0x00A0, r23	; 0x8000a0 <avg_speed+0x1>
     70c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <avg_speed+0x2>
     710:	90 93 a2 00 	sts	0x00A2, r25	; 0x8000a2 <avg_speed+0x3>
		}
	}
     714:	df 91       	pop	r29
     716:	cf 91       	pop	r28
     718:	1f 91       	pop	r17
     71a:	0f 91       	pop	r16
     71c:	ff 90       	pop	r15
     71e:	ef 90       	pop	r14
     720:	df 90       	pop	r13
     722:	cf 90       	pop	r12
     724:	bf 90       	pop	r11
     726:	af 90       	pop	r10
     728:	9f 90       	pop	r9
     72a:	8f 90       	pop	r8
     72c:	08 95       	ret

0000072e <calc_speed>:
				break;
		}
	}
}

void calc_speed(uint32_t timer_now) {
     72e:	cf 92       	push	r12
     730:	df 92       	push	r13
     732:	ef 92       	push	r14
     734:	ff 92       	push	r15
	if (wheel_rotation_counter == 5) {
     736:	20 91 c0 00 	lds	r18, 0x00C0	; 0x8000c0 <wheel_rotation_counter>
     73a:	25 30       	cpi	r18, 0x05	; 5
     73c:	09 f0       	breq	.+2      	; 0x740 <calc_speed+0x12>
     73e:	6a c0       	rjmp	.+212    	; 0x814 <calc_speed+0xe6>
		uint32_t interval = timer_now - wheel_rotation_start_time;
		uint16_t avg_interval = interval / 4;

		uint16_t rpm = 60000 / avg_interval;
     740:	c0 90 a4 00 	lds	r12, 0x00A4	; 0x8000a4 <wheel_rotation_start_time>
     744:	d0 90 a5 00 	lds	r13, 0x00A5	; 0x8000a5 <wheel_rotation_start_time+0x1>
     748:	e0 90 a6 00 	lds	r14, 0x00A6	; 0x8000a6 <wheel_rotation_start_time+0x2>
     74c:	f0 90 a7 00 	lds	r15, 0x00A7	; 0x8000a7 <wheel_rotation_start_time+0x3>
     750:	dc 01       	movw	r26, r24
     752:	cb 01       	movw	r24, r22
     754:	8c 19       	sub	r24, r12
     756:	9d 09       	sbc	r25, r13
     758:	ae 09       	sbc	r26, r14
     75a:	bf 09       	sbc	r27, r15
     75c:	b6 95       	lsr	r27
     75e:	a7 95       	ror	r26
     760:	97 95       	ror	r25
     762:	87 95       	ror	r24
     764:	b6 95       	lsr	r27
     766:	a7 95       	ror	r26
     768:	97 95       	ror	r25
     76a:	87 95       	ror	r24
     76c:	9c 01       	movw	r18, r24
     76e:	ad 01       	movw	r20, r26
     770:	44 27       	eor	r20, r20
     772:	55 27       	eor	r21, r21
     774:	60 e6       	ldi	r22, 0x60	; 96
     776:	7a ee       	ldi	r23, 0xEA	; 234
     778:	80 e0       	ldi	r24, 0x00	; 0
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	c0 d5       	rcall	.+2944   	; 0x12fe <__divmodsi4>
		if (rpm < WHEEL_RPM_MAX) {
     77e:	28 35       	cpi	r18, 0x58	; 88
     780:	82 e0       	ldi	r24, 0x02	; 2
     782:	38 07       	cpc	r19, r24
     784:	e8 f5       	brcc	.+122    	; 0x800 <calc_speed+0xd2>
			wheel_rpm = rpm;
     786:	30 93 b2 00 	sts	0x00B2, r19	; 0x8000b2 <wheel_rpm+0x1>
     78a:	20 93 b1 00 	sts	0x00B1, r18	; 0x8000b1 <wheel_rpm>
			speed = wheel_rpm * 60 * wheel_length;
     78e:	b9 01       	movw	r22, r18
     790:	62 95       	swap	r22
     792:	72 95       	swap	r23
     794:	70 7f       	andi	r23, 0xF0	; 240
     796:	76 27       	eor	r23, r22
     798:	60 7f       	andi	r22, 0xF0	; 240
     79a:	76 27       	eor	r23, r22
     79c:	62 1b       	sub	r22, r18
     79e:	73 0b       	sbc	r23, r19
     7a0:	66 0f       	add	r22, r22
     7a2:	77 1f       	adc	r23, r23
     7a4:	66 0f       	add	r22, r22
     7a6:	77 1f       	adc	r23, r23
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	52 d4       	rcall	.+2212   	; 0x1052 <__floatunsisf>
     7ae:	20 91 b3 00 	lds	r18, 0x00B3	; 0x8000b3 <wheel_length>
     7b2:	30 91 b4 00 	lds	r19, 0x00B4	; 0x8000b4 <wheel_length+0x1>
     7b6:	40 91 b5 00 	lds	r20, 0x00B5	; 0x8000b5 <wheel_length+0x2>
     7ba:	50 91 b6 00 	lds	r21, 0x00B6	; 0x8000b6 <wheel_length+0x3>
     7be:	ff d4       	rcall	.+2558   	; 0x11be <__mulsf3>
     7c0:	6b 01       	movw	r12, r22
     7c2:	7c 01       	movw	r14, r24
     7c4:	60 93 eb 00 	sts	0x00EB, r22	; 0x8000eb <speed>
     7c8:	70 93 ec 00 	sts	0x00EC, r23	; 0x8000ec <speed+0x1>
     7cc:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <speed+0x2>
     7d0:	90 93 ee 00 	sts	0x00EE, r25	; 0x8000ee <speed+0x3>
			if (speed >= max_speed) {
     7d4:	20 91 ad 00 	lds	r18, 0x00AD	; 0x8000ad <max_speed>
     7d8:	30 91 ae 00 	lds	r19, 0x00AE	; 0x8000ae <max_speed+0x1>
     7dc:	40 91 af 00 	lds	r20, 0x00AF	; 0x8000af <max_speed+0x2>
     7e0:	50 91 b0 00 	lds	r21, 0x00B0	; 0x8000b0 <max_speed+0x3>
     7e4:	e8 d4       	rcall	.+2512   	; 0x11b6 <__gesf2>
     7e6:	88 23       	and	r24, r24
     7e8:	44 f0       	brlt	.+16     	; 0x7fa <calc_speed+0xcc>
				max_speed = speed;
     7ea:	c0 92 ad 00 	sts	0x00AD, r12	; 0x8000ad <max_speed>
     7ee:	d0 92 ae 00 	sts	0x00AE, r13	; 0x8000ae <max_speed+0x1>
     7f2:	e0 92 af 00 	sts	0x00AF, r14	; 0x8000af <max_speed+0x2>
     7f6:	f0 92 b0 00 	sts	0x00B0, r15	; 0x8000b0 <max_speed+0x3>
			}
			calc_avg_speed(speed);
     7fa:	c7 01       	movw	r24, r14
     7fc:	b6 01       	movw	r22, r12
     7fe:	1e df       	rcall	.-452    	; 0x63c <calc_avg_speed>
			// display_data();
		}

		wheel_rotation_counter = 0;
     800:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <wheel_rotation_counter>
		wheel_rotation_start_time = 0;
     804:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <wheel_rotation_start_time>
     808:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <wheel_rotation_start_time+0x1>
     80c:	10 92 a6 00 	sts	0x00A6, r1	; 0x8000a6 <wheel_rotation_start_time+0x2>
     810:	10 92 a7 00 	sts	0x00A7, r1	; 0x8000a7 <wheel_rotation_start_time+0x3>
	}
}
     814:	ff 90       	pop	r15
     816:	ef 90       	pop	r14
     818:	df 90       	pop	r13
     81a:	cf 90       	pop	r12
     81c:	08 95       	ret

0000081e <main>:
void handle_btn_click(uint8_t pin_state, uint32_t timer_now);
void calc_speed(uint32_t timer_now);

int main(void) {
	// set 8 MHz frequency
	CLKPR = 1 << CLKPCE;
     81e:	80 e8       	ldi	r24, 0x80	; 128
     820:	86 bd       	out	0x26, r24	; 38
	CLKPR = 0;
     822:	16 bc       	out	0x26, r1	; 38
	
	DDRB = 0;
     824:	17 ba       	out	0x17, r1	; 23
	// led pin as output
	DDRB |= _BV(LED_PIN);
     826:	bc 9a       	sbi	0x17, 4	; 23
	
	// turn on btn pin input pullup
	PORTB |= _BV(BTN_PIN);
     828:	c3 9a       	sbi	0x18, 3	; 24
	
	start_millis_timer();
     82a:	39 dd       	rcall	.-1422   	; 0x29e <start_millis_timer>
	
	calc_wheel_length();
     82c:	80 dd       	rcall	.-1280   	; 0x32e <calc_wheel_length>
	display_data();
     82e:	b3 dd       	rcall	.-1178   	; 0x396 <display_data>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     830:	2f ef       	ldi	r18, 0xFF	; 255
     832:	30 e7       	ldi	r19, 0x70	; 112
     834:	42 e0       	ldi	r20, 0x02	; 2
     836:	21 50       	subi	r18, 0x01	; 1
     838:	30 40       	sbci	r19, 0x00	; 0
     83a:	40 40       	sbci	r20, 0x00	; 0
     83c:	e1 f7       	brne	.-8      	; 0x836 <main+0x18>
     83e:	00 c0       	rjmp	.+0      	; 0x840 <main+0x22>
     840:	00 00       	nop
	
	_delay_ms(100);
	ssd1306_init();
     842:	41 d1       	rcall	.+642    	; 0xac6 <ssd1306_init>
	ssd1306tx_init(ssd1306xled_font6x8data);
     844:	8e e1       	ldi	r24, 0x1E	; 30
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	97 d1       	rcall	.+814    	; 0xb78 <ssd1306tx_init>
	ssd1306_clear();
     84a:	20 e0       	ldi	r18, 0x00	; 0
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	60 e0       	ldi	r22, 0x00	; 0
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	64 d1       	rcall	.+712    	; 0xb1c <ssd1306_fill4>
	display_data();
     854:	a0 dd       	rcall	.-1216   	; 0x396 <display_data>
	
	display_turned = true;
     856:	81 e0       	ldi	r24, 0x01	; 1
     858:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <display_turned>
		timer_now = millis();
		
		wheel_pin_state = PINB & _BV(WHEEL_PIN);
		// detect rotation start
		if (!wheel_pin_state && !wheel_rotation_started) {
			wheel_rotation_started = true;
     85c:	d1 e0       	ldi	r29, 0x01	; 1
		
		handle_btn_click(PINB & _BV(BTN_PIN), timer_now);
		
		// toggle led every 250 ms
		if (led_turned && (timer_now - led_timer) >= 250) {
			PORTB ^= _BV(LED_PIN);
     85e:	c0 e1       	ldi	r28, 0x10	; 16
	
	uint32_t timer_now;
	bool wheel_pin_state;
    
    while (1) {
		timer_now = millis();
     860:	51 dd       	rcall	.-1374   	; 0x304 <millis>
     862:	6b 01       	movw	r12, r22
     864:	7c 01       	movw	r14, r24
		
		wheel_pin_state = PINB & _BV(WHEEL_PIN);
		// detect rotation start
		if (!wheel_pin_state && !wheel_rotation_started) {
     866:	b2 99       	sbic	0x16, 2	; 22
     868:	f2 c0       	rjmp	.+484    	; 0xa4e <main+0x230>
     86a:	80 91 ea 00 	lds	r24, 0x00EA	; 0x8000ea <wheel_rotation_started>
     86e:	81 11       	cpse	r24, r1
     870:	3f c0       	rjmp	.+126    	; 0x8f0 <main+0xd2>
			wheel_rotation_started = true;
     872:	d0 93 ea 00 	sts	0x00EA, r29	; 0x8000ea <wheel_rotation_started>
     876:	3c c0       	rjmp	.+120    	; 0x8f0 <main+0xd2>
		}
		// detect when magnet passes by the hall sensor
		if (wheel_pin_state && wheel_rotation_started) {
			wheel_rotation_started = false;
     878:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <wheel_rotation_started>
			
			wheel_rotation_last_time = timer_now;
     87c:	c0 92 ef 00 	sts	0x00EF, r12	; 0x8000ef <wheel_rotation_last_time>
     880:	d0 92 f0 00 	sts	0x00F0, r13	; 0x8000f0 <wheel_rotation_last_time+0x1>
     884:	e0 92 f1 00 	sts	0x00F1, r14	; 0x8000f1 <wheel_rotation_last_time+0x2>
     888:	f0 92 f2 00 	sts	0x00F2, r15	; 0x8000f2 <wheel_rotation_last_time+0x3>
			if (wheel_rotation_start_time == 0) {
     88c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <wheel_rotation_start_time>
     890:	90 91 a5 00 	lds	r25, 0x00A5	; 0x8000a5 <wheel_rotation_start_time+0x1>
     894:	a0 91 a6 00 	lds	r26, 0x00A6	; 0x8000a6 <wheel_rotation_start_time+0x2>
     898:	b0 91 a7 00 	lds	r27, 0x00A7	; 0x8000a7 <wheel_rotation_start_time+0x3>
     89c:	89 2b       	or	r24, r25
     89e:	8a 2b       	or	r24, r26
     8a0:	8b 2b       	or	r24, r27
     8a2:	41 f4       	brne	.+16     	; 0x8b4 <main+0x96>
				wheel_rotation_start_time = timer_now;
     8a4:	c0 92 a4 00 	sts	0x00A4, r12	; 0x8000a4 <wheel_rotation_start_time>
     8a8:	d0 92 a5 00 	sts	0x00A5, r13	; 0x8000a5 <wheel_rotation_start_time+0x1>
     8ac:	e0 92 a6 00 	sts	0x00A6, r14	; 0x8000a6 <wheel_rotation_start_time+0x2>
     8b0:	f0 92 a7 00 	sts	0x00A7, r15	; 0x8000a7 <wheel_rotation_start_time+0x3>
			}

			wheel_rotation_counter++;
     8b4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <wheel_rotation_counter>
     8b8:	8f 5f       	subi	r24, 0xFF	; 255
     8ba:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <wheel_rotation_counter>
			distance += wheel_length;
     8be:	20 91 b3 00 	lds	r18, 0x00B3	; 0x8000b3 <wheel_length>
     8c2:	30 91 b4 00 	lds	r19, 0x00B4	; 0x8000b4 <wheel_length+0x1>
     8c6:	40 91 b5 00 	lds	r20, 0x00B5	; 0x8000b5 <wheel_length+0x2>
     8ca:	50 91 b6 00 	lds	r21, 0x00B6	; 0x8000b6 <wheel_length+0x3>
     8ce:	60 91 b7 00 	lds	r22, 0x00B7	; 0x8000b7 <distance>
     8d2:	70 91 b8 00 	lds	r23, 0x00B8	; 0x8000b8 <distance+0x1>
     8d6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <distance+0x2>
     8da:	90 91 ba 00 	lds	r25, 0x00BA	; 0x8000ba <distance+0x3>
     8de:	b8 d2       	rcall	.+1392   	; 0xe50 <__addsf3>
     8e0:	60 93 b7 00 	sts	0x00B7, r22	; 0x8000b7 <distance>
     8e4:	70 93 b8 00 	sts	0x00B8, r23	; 0x8000b8 <distance+0x1>
     8e8:	80 93 b9 00 	sts	0x00B9, r24	; 0x8000b9 <distance+0x2>
     8ec:	90 93 ba 00 	sts	0x00BA, r25	; 0x8000ba <distance+0x3>
		}
		
		calc_speed(timer_now);
     8f0:	c7 01       	movw	r24, r14
     8f2:	b6 01       	movw	r22, r12
     8f4:	1c df       	rcall	.-456    	; 0x72e <calc_speed>
		
		handle_btn_click(PINB & _BV(BTN_PIN), timer_now);
     8f6:	86 b3       	in	r24, 0x16	; 22
     8f8:	b7 01       	movw	r22, r14
     8fa:	a6 01       	movw	r20, r12
     8fc:	88 70       	andi	r24, 0x08	; 8
     8fe:	2d de       	rcall	.-934    	; 0x55a <handle_btn_click>
		
		// toggle led every 250 ms
		if (led_turned && (timer_now - led_timer) >= 250) {
     900:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <led_turned>
     904:	88 23       	and	r24, r24
     906:	f1 f0       	breq	.+60     	; 0x944 <main+0x126>
     908:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <led_timer>
     90c:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <led_timer+0x1>
     910:	a0 91 bd 00 	lds	r26, 0x00BD	; 0x8000bd <led_timer+0x2>
     914:	b0 91 be 00 	lds	r27, 0x00BE	; 0x8000be <led_timer+0x3>
     918:	a7 01       	movw	r20, r14
     91a:	96 01       	movw	r18, r12
     91c:	28 1b       	sub	r18, r24
     91e:	39 0b       	sbc	r19, r25
     920:	4a 0b       	sbc	r20, r26
     922:	5b 0b       	sbc	r21, r27
     924:	2a 3f       	cpi	r18, 0xFA	; 250
     926:	31 05       	cpc	r19, r1
     928:	41 05       	cpc	r20, r1
     92a:	51 05       	cpc	r21, r1
     92c:	58 f0       	brcs	.+22     	; 0x944 <main+0x126>
			PORTB ^= _BV(LED_PIN);
     92e:	88 b3       	in	r24, 0x18	; 24
     930:	8c 27       	eor	r24, r28
     932:	88 bb       	out	0x18, r24	; 24
			led_timer = timer_now;
     934:	c0 92 bb 00 	sts	0x00BB, r12	; 0x8000bb <led_timer>
     938:	d0 92 bc 00 	sts	0x00BC, r13	; 0x8000bc <led_timer+0x1>
     93c:	e0 92 bd 00 	sts	0x00BD, r14	; 0x8000bd <led_timer+0x2>
     940:	f0 92 be 00 	sts	0x00BE, r15	; 0x8000be <led_timer+0x3>
		}
		
		// idle
		if (speed != 0 && timer_now - wheel_rotation_last_time >= 4000) {
     944:	20 e0       	ldi	r18, 0x00	; 0
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	a9 01       	movw	r20, r18
     94a:	60 91 eb 00 	lds	r22, 0x00EB	; 0x8000eb <speed>
     94e:	70 91 ec 00 	lds	r23, 0x00EC	; 0x8000ec <speed+0x1>
     952:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <speed+0x2>
     956:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <speed+0x3>
     95a:	de d2       	rcall	.+1468   	; 0xf18 <__cmpsf2>
     95c:	88 23       	and	r24, r24
     95e:	61 f1       	breq	.+88     	; 0x9b8 <main+0x19a>
     960:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <wheel_rotation_last_time>
     964:	90 91 f0 00 	lds	r25, 0x00F0	; 0x8000f0 <wheel_rotation_last_time+0x1>
     968:	a0 91 f1 00 	lds	r26, 0x00F1	; 0x8000f1 <wheel_rotation_last_time+0x2>
     96c:	b0 91 f2 00 	lds	r27, 0x00F2	; 0x8000f2 <wheel_rotation_last_time+0x3>
     970:	a7 01       	movw	r20, r14
     972:	96 01       	movw	r18, r12
     974:	28 1b       	sub	r18, r24
     976:	39 0b       	sbc	r19, r25
     978:	4a 0b       	sbc	r20, r26
     97a:	5b 0b       	sbc	r21, r27
     97c:	da 01       	movw	r26, r20
     97e:	c9 01       	movw	r24, r18
     980:	80 3a       	cpi	r24, 0xA0	; 160
     982:	9f 40       	sbci	r25, 0x0F	; 15
     984:	a1 05       	cpc	r26, r1
     986:	b1 05       	cpc	r27, r1
     988:	b8 f0       	brcs	.+46     	; 0x9b8 <main+0x19a>
			speed = 0;
     98a:	10 92 eb 00 	sts	0x00EB, r1	; 0x8000eb <speed>
     98e:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <speed+0x1>
     992:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <speed+0x2>
     996:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <speed+0x3>
			wheel_rpm = 0;
     99a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <wheel_rpm+0x1>
     99e:	10 92 b1 00 	sts	0x00B1, r1	; 0x8000b1 <wheel_rpm>
			wheel_rotation_counter = 0;
     9a2:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <wheel_rotation_counter>
			wheel_rotation_start_time = 0;
     9a6:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <wheel_rotation_start_time>
     9aa:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <wheel_rotation_start_time+0x1>
     9ae:	10 92 a6 00 	sts	0x00A6, r1	; 0x8000a6 <wheel_rotation_start_time+0x2>
     9b2:	10 92 a7 00 	sts	0x00A7, r1	; 0x8000a7 <wheel_rotation_start_time+0x3>
			display_data();
     9b6:	ef dc       	rcall	.-1570   	; 0x396 <display_data>
		}
		
		bool upd_time = display_menu == MENU_TIME && timer_now - display_timer >= 1000;
     9b8:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <display_menu>
     9bc:	82 30       	cpi	r24, 0x02	; 2
     9be:	b1 f4       	brne	.+44     	; 0x9ec <main+0x1ce>
     9c0:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <display_timer>
     9c4:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <display_timer+0x1>
     9c8:	a0 91 e8 00 	lds	r26, 0x00E8	; 0x8000e8 <display_timer+0x2>
     9cc:	b0 91 e9 00 	lds	r27, 0x00E9	; 0x8000e9 <display_timer+0x3>
     9d0:	a7 01       	movw	r20, r14
     9d2:	96 01       	movw	r18, r12
     9d4:	28 1b       	sub	r18, r24
     9d6:	39 0b       	sbc	r19, r25
     9d8:	4a 0b       	sbc	r20, r26
     9da:	5b 0b       	sbc	r21, r27
     9dc:	da 01       	movw	r26, r20
     9de:	c9 01       	movw	r24, r18
     9e0:	88 3e       	cpi	r24, 0xE8	; 232
     9e2:	93 40       	sbci	r25, 0x03	; 3
     9e4:	a1 05       	cpc	r26, r1
     9e6:	b1 05       	cpc	r27, r1
     9e8:	40 f5       	brcc	.+80     	; 0xa3a <main+0x21c>
     9ea:	3a cf       	rjmp	.-396    	; 0x860 <main+0x42>
		bool upd_display = display_menu == MENU_MAIN && speed > 0 && timer_now - display_timer >= 4000;
     9ec:	81 11       	cpse	r24, r1
     9ee:	38 cf       	rjmp	.-400    	; 0x860 <main+0x42>
     9f0:	20 e0       	ldi	r18, 0x00	; 0
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	a9 01       	movw	r20, r18
     9f6:	60 91 eb 00 	lds	r22, 0x00EB	; 0x8000eb <speed>
     9fa:	70 91 ec 00 	lds	r23, 0x00EC	; 0x8000ec <speed+0x1>
     9fe:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <speed+0x2>
     a02:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <speed+0x3>
     a06:	d7 d3       	rcall	.+1966   	; 0x11b6 <__gesf2>
     a08:	18 16       	cp	r1, r24
     a0a:	0c f0       	brlt	.+2      	; 0xa0e <main+0x1f0>
     a0c:	29 cf       	rjmp	.-430    	; 0x860 <main+0x42>
     a0e:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <display_timer>
     a12:	90 91 e7 00 	lds	r25, 0x00E7	; 0x8000e7 <display_timer+0x1>
     a16:	a0 91 e8 00 	lds	r26, 0x00E8	; 0x8000e8 <display_timer+0x2>
     a1a:	b0 91 e9 00 	lds	r27, 0x00E9	; 0x8000e9 <display_timer+0x3>
     a1e:	a7 01       	movw	r20, r14
     a20:	96 01       	movw	r18, r12
     a22:	28 1b       	sub	r18, r24
     a24:	39 0b       	sbc	r19, r25
     a26:	4a 0b       	sbc	r20, r26
     a28:	5b 0b       	sbc	r21, r27
     a2a:	da 01       	movw	r26, r20
     a2c:	c9 01       	movw	r24, r18
     a2e:	80 3a       	cpi	r24, 0xA0	; 160
     a30:	9f 40       	sbci	r25, 0x0F	; 15
     a32:	a1 05       	cpc	r26, r1
     a34:	b1 05       	cpc	r27, r1
     a36:	08 f4       	brcc	.+2      	; 0xa3a <main+0x21c>
     a38:	13 cf       	rjmp	.-474    	; 0x860 <main+0x42>
		if (upd_time || upd_display) {
			display_data();
     a3a:	ad dc       	rcall	.-1702   	; 0x396 <display_data>
			display_timer = timer_now;
     a3c:	c0 92 e6 00 	sts	0x00E6, r12	; 0x8000e6 <display_timer>
     a40:	d0 92 e7 00 	sts	0x00E7, r13	; 0x8000e7 <display_timer+0x1>
     a44:	e0 92 e8 00 	sts	0x00E8, r14	; 0x8000e8 <display_timer+0x2>
     a48:	f0 92 e9 00 	sts	0x00E9, r15	; 0x8000e9 <display_timer+0x3>
     a4c:	09 cf       	rjmp	.-494    	; 0x860 <main+0x42>
		// detect rotation start
		if (!wheel_pin_state && !wheel_rotation_started) {
			wheel_rotation_started = true;
		}
		// detect when magnet passes by the hall sensor
		if (wheel_pin_state && wheel_rotation_started) {
     a4e:	80 91 ea 00 	lds	r24, 0x00EA	; 0x8000ea <wheel_rotation_started>
     a52:	81 11       	cpse	r24, r1
     a54:	11 cf       	rjmp	.-478    	; 0x878 <main+0x5a>
     a56:	4c cf       	rjmp	.-360    	; 0x8f0 <main+0xd2>

00000a58 <i2csw_start>:
     a58:	b8 9a       	sbi	0x17, 0	; 23
     a5a:	b9 9a       	sbi	0x17, 1	; 23
     a5c:	c1 9a       	sbi	0x18, 1	; 24
     a5e:	c0 9a       	sbi	0x18, 0	; 24
     a60:	c0 98       	cbi	0x18, 0	; 24
     a62:	c1 98       	cbi	0x18, 1	; 24
     a64:	08 95       	ret

00000a66 <i2csw_stop>:
     a66:	c1 98       	cbi	0x18, 1	; 24
     a68:	c0 98       	cbi	0x18, 0	; 24
     a6a:	c1 9a       	sbi	0x18, 1	; 24
     a6c:	c0 9a       	sbi	0x18, 0	; 24
     a6e:	b8 98       	cbi	0x17, 0	; 23
     a70:	08 95       	ret

00000a72 <i2csw_byte>:
     a72:	20 e0       	ldi	r18, 0x00	; 0
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	ac 01       	movw	r20, r24
     a7a:	02 2e       	mov	r0, r18
     a7c:	02 c0       	rjmp	.+4      	; 0xa82 <i2csw_byte+0x10>
     a7e:	44 0f       	add	r20, r20
     a80:	55 1f       	adc	r21, r21
     a82:	0a 94       	dec	r0
     a84:	e2 f7       	brpl	.-8      	; 0xa7e <i2csw_byte+0xc>
     a86:	47 ff       	sbrs	r20, 7
     a88:	02 c0       	rjmp	.+4      	; 0xa8e <i2csw_byte+0x1c>
     a8a:	c0 9a       	sbi	0x18, 0	; 24
     a8c:	01 c0       	rjmp	.+2      	; 0xa90 <i2csw_byte+0x1e>
     a8e:	c0 98       	cbi	0x18, 0	; 24
     a90:	c1 9a       	sbi	0x18, 1	; 24
     a92:	c1 98       	cbi	0x18, 1	; 24
     a94:	2f 5f       	subi	r18, 0xFF	; 255
     a96:	3f 4f       	sbci	r19, 0xFF	; 255
     a98:	28 30       	cpi	r18, 0x08	; 8
     a9a:	31 05       	cpc	r19, r1
     a9c:	69 f7       	brne	.-38     	; 0xa78 <i2csw_byte+0x6>
     a9e:	c0 9a       	sbi	0x18, 0	; 24
     aa0:	c1 9a       	sbi	0x18, 1	; 24
     aa2:	c1 98       	cbi	0x18, 1	; 24
     aa4:	08 95       	ret

00000aa6 <ssd1306_start_command>:
     aa6:	d8 df       	rcall	.-80     	; 0xa58 <i2csw_start>
     aa8:	88 e7       	ldi	r24, 0x78	; 120
     aaa:	e3 df       	rcall	.-58     	; 0xa72 <i2csw_byte>
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	e1 df       	rcall	.-62     	; 0xa72 <i2csw_byte>
     ab0:	08 95       	ret

00000ab2 <ssd1306_start_data>:
     ab2:	d2 df       	rcall	.-92     	; 0xa58 <i2csw_start>
     ab4:	88 e7       	ldi	r24, 0x78	; 120
     ab6:	dd df       	rcall	.-70     	; 0xa72 <i2csw_byte>
     ab8:	80 e4       	ldi	r24, 0x40	; 64
     aba:	db df       	rcall	.-74     	; 0xa72 <i2csw_byte>
     abc:	08 95       	ret

00000abe <ssd1306_data_byte>:
     abe:	d9 df       	rcall	.-78     	; 0xa72 <i2csw_byte>
     ac0:	08 95       	ret

00000ac2 <ssd1306_stop>:
     ac2:	d1 df       	rcall	.-94     	; 0xa66 <i2csw_stop>
     ac4:	08 95       	ret

00000ac6 <ssd1306_init>:
     ac6:	0f 93       	push	r16
     ac8:	1f 93       	push	r17
     aca:	cf 93       	push	r28
     acc:	df 93       	push	r29
     ace:	eb df       	rcall	.-42     	; 0xaa6 <ssd1306_start_command>
     ad0:	c6 e4       	ldi	r28, 0x46	; 70
     ad2:	d2 e0       	ldi	r29, 0x02	; 2
     ad4:	06 e6       	ldi	r16, 0x66	; 102
     ad6:	12 e0       	ldi	r17, 0x02	; 2
     ad8:	fe 01       	movw	r30, r28
     ada:	84 91       	lpm	r24, Z
     adc:	ca df       	rcall	.-108    	; 0xa72 <i2csw_byte>
     ade:	21 96       	adiw	r28, 0x01	; 1
     ae0:	c0 17       	cp	r28, r16
     ae2:	d1 07       	cpc	r29, r17
     ae4:	c9 f7       	brne	.-14     	; 0xad8 <ssd1306_init+0x12>
     ae6:	bf df       	rcall	.-130    	; 0xa66 <i2csw_stop>
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	1f 91       	pop	r17
     aee:	0f 91       	pop	r16
     af0:	08 95       	ret

00000af2 <ssd1306_setpos>:
     af2:	cf 93       	push	r28
     af4:	df 93       	push	r29
     af6:	c8 2f       	mov	r28, r24
     af8:	d6 2f       	mov	r29, r22
     afa:	d5 df       	rcall	.-86     	; 0xaa6 <ssd1306_start_command>
     afc:	8d 2f       	mov	r24, r29
     afe:	87 70       	andi	r24, 0x07	; 7
     b00:	80 6b       	ori	r24, 0xB0	; 176
     b02:	b7 df       	rcall	.-146    	; 0xa72 <i2csw_byte>
     b04:	8c 2f       	mov	r24, r28
     b06:	8f 70       	andi	r24, 0x0F	; 15
     b08:	b4 df       	rcall	.-152    	; 0xa72 <i2csw_byte>
     b0a:	8c 2f       	mov	r24, r28
     b0c:	82 95       	swap	r24
     b0e:	8f 70       	andi	r24, 0x0F	; 15
     b10:	80 61       	ori	r24, 0x10	; 16
     b12:	af df       	rcall	.-162    	; 0xa72 <i2csw_byte>
     b14:	a8 df       	rcall	.-176    	; 0xa66 <i2csw_stop>
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	08 95       	ret

00000b1c <ssd1306_fill4>:
     b1c:	ef 92       	push	r14
     b1e:	ff 92       	push	r15
     b20:	0f 93       	push	r16
     b22:	1f 93       	push	r17
     b24:	cf 93       	push	r28
     b26:	df 93       	push	r29
     b28:	e8 2e       	mov	r14, r24
     b2a:	f6 2e       	mov	r15, r22
     b2c:	04 2f       	mov	r16, r20
     b2e:	12 2f       	mov	r17, r18
     b30:	60 e0       	ldi	r22, 0x00	; 0
     b32:	80 e0       	ldi	r24, 0x00	; 0
     b34:	de df       	rcall	.-68     	; 0xaf2 <ssd1306_setpos>
     b36:	bd df       	rcall	.-134    	; 0xab2 <ssd1306_start_data>
     b38:	c0 e0       	ldi	r28, 0x00	; 0
     b3a:	d1 e0       	ldi	r29, 0x01	; 1
     b3c:	8e 2d       	mov	r24, r14
     b3e:	99 df       	rcall	.-206    	; 0xa72 <i2csw_byte>
     b40:	8f 2d       	mov	r24, r15
     b42:	97 df       	rcall	.-210    	; 0xa72 <i2csw_byte>
     b44:	80 2f       	mov	r24, r16
     b46:	95 df       	rcall	.-214    	; 0xa72 <i2csw_byte>
     b48:	81 2f       	mov	r24, r17
     b4a:	93 df       	rcall	.-218    	; 0xa72 <i2csw_byte>
     b4c:	21 97       	sbiw	r28, 0x01	; 1
     b4e:	b1 f7       	brne	.-20     	; 0xb3c <ssd1306_fill4+0x20>
     b50:	8a df       	rcall	.-236    	; 0xa66 <i2csw_stop>
     b52:	df 91       	pop	r29
     b54:	cf 91       	pop	r28
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	ff 90       	pop	r15
     b5c:	ef 90       	pop	r14
     b5e:	08 95       	ret

00000b60 <ssd1306_turn_display>:
     b60:	cf 93       	push	r28
     b62:	c8 2f       	mov	r28, r24
     b64:	a0 df       	rcall	.-192    	; 0xaa6 <ssd1306_start_command>
     b66:	c1 11       	cpse	r28, r1
     b68:	02 c0       	rjmp	.+4      	; 0xb6e <ssd1306_turn_display+0xe>
     b6a:	8e ea       	ldi	r24, 0xAE	; 174
     b6c:	01 c0       	rjmp	.+2      	; 0xb70 <ssd1306_turn_display+0x10>
     b6e:	8f ea       	ldi	r24, 0xAF	; 175
     b70:	80 df       	rcall	.-256    	; 0xa72 <i2csw_byte>
     b72:	79 df       	rcall	.-270    	; 0xa66 <i2csw_stop>
     b74:	cf 91       	pop	r28
     b76:	08 95       	ret

00000b78 <ssd1306tx_init>:
     b78:	90 93 f6 00 	sts	0x00F6, r25	; 0x8000f6 <ssd1306tx_font_src+0x1>
     b7c:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <ssd1306tx_font_src>
     b80:	08 95       	ret

00000b82 <ssd1306tx_char>:
     b82:	0f 93       	push	r16
     b84:	1f 93       	push	r17
     b86:	cf 93       	push	r28
     b88:	df 93       	push	r29
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	8c 01       	movw	r16, r24
     b8e:	00 0f       	add	r16, r16
     b90:	11 1f       	adc	r17, r17
     b92:	00 0f       	add	r16, r16
     b94:	11 1f       	adc	r17, r17
     b96:	88 0f       	add	r24, r24
     b98:	99 1f       	adc	r25, r25
     b9a:	08 0f       	add	r16, r24
     b9c:	19 1f       	adc	r17, r25
     b9e:	e8 01       	movw	r28, r16
     ba0:	c0 5c       	subi	r28, 0xC0	; 192
     ba2:	d1 09       	sbc	r29, r1
     ba4:	86 df       	rcall	.-244    	; 0xab2 <ssd1306_start_data>
     ba6:	0a 5b       	subi	r16, 0xBA	; 186
     ba8:	11 09       	sbc	r17, r1
     baa:	e0 91 f5 00 	lds	r30, 0x00F5	; 0x8000f5 <ssd1306tx_font_src>
     bae:	f0 91 f6 00 	lds	r31, 0x00F6	; 0x8000f6 <ssd1306tx_font_src+0x1>
     bb2:	ec 0f       	add	r30, r28
     bb4:	fd 1f       	adc	r31, r29
     bb6:	84 91       	lpm	r24, Z
     bb8:	82 df       	rcall	.-252    	; 0xabe <ssd1306_data_byte>
     bba:	21 96       	adiw	r28, 0x01	; 1
     bbc:	c0 17       	cp	r28, r16
     bbe:	d1 07       	cpc	r29, r17
     bc0:	a1 f7       	brne	.-24     	; 0xbaa <ssd1306tx_char+0x28>
     bc2:	7f df       	rcall	.-258    	; 0xac2 <ssd1306_stop>
     bc4:	df 91       	pop	r29
     bc6:	cf 91       	pop	r28
     bc8:	1f 91       	pop	r17
     bca:	0f 91       	pop	r16
     bcc:	08 95       	ret

00000bce <ssd1306tx_string>:
     bce:	cf 93       	push	r28
     bd0:	df 93       	push	r29
     bd2:	ec 01       	movw	r28, r24
     bd4:	88 81       	ld	r24, Y
     bd6:	88 23       	and	r24, r24
     bd8:	29 f0       	breq	.+10     	; 0xbe4 <ssd1306tx_string+0x16>
     bda:	21 96       	adiw	r28, 0x01	; 1
     bdc:	d2 df       	rcall	.-92     	; 0xb82 <ssd1306tx_char>
     bde:	89 91       	ld	r24, Y+
     be0:	81 11       	cpse	r24, r1
     be2:	fc cf       	rjmp	.-8      	; 0xbdc <ssd1306tx_string+0xe>
     be4:	df 91       	pop	r29
     be6:	cf 91       	pop	r28
     be8:	08 95       	ret

00000bea <itoa>:
     bea:	cf 92       	push	r12
     bec:	df 92       	push	r13
     bee:	ef 92       	push	r14
     bf0:	ff 92       	push	r15
     bf2:	0f 93       	push	r16
     bf4:	1f 93       	push	r17
     bf6:	cf 93       	push	r28
     bf8:	df 93       	push	r29
     bfa:	7b 01       	movw	r14, r22
     bfc:	eb 01       	movw	r28, r22
     bfe:	fb 01       	movw	r30, r22
     c00:	20 e0       	ldi	r18, 0x00	; 0
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	0f 2e       	mov	r0, r31
     c06:	fa e0       	ldi	r31, 0x0A	; 10
     c08:	cf 2e       	mov	r12, r31
     c0a:	d1 2c       	mov	r13, r1
     c0c:	f0 2d       	mov	r31, r0
     c0e:	01 c0       	rjmp	.+2      	; 0xc12 <itoa+0x28>
     c10:	98 01       	movw	r18, r16
     c12:	89 01       	movw	r16, r18
     c14:	0f 5f       	subi	r16, 0xFF	; 255
     c16:	1f 4f       	sbci	r17, 0xFF	; 255
     c18:	b6 01       	movw	r22, r12
     c1a:	3c d3       	rcall	.+1656   	; 0x1294 <__divmodhi4>
     c1c:	80 5d       	subi	r24, 0xD0	; 208
     c1e:	81 93       	st	Z+, r24
     c20:	86 2f       	mov	r24, r22
     c22:	97 2f       	mov	r25, r23
     c24:	18 16       	cp	r1, r24
     c26:	19 06       	cpc	r1, r25
     c28:	9c f3       	brlt	.-26     	; 0xc10 <itoa+0x26>
     c2a:	f7 01       	movw	r30, r14
     c2c:	e0 0f       	add	r30, r16
     c2e:	f1 1f       	adc	r31, r17
     c30:	10 82       	st	Z, r1
     c32:	12 16       	cp	r1, r18
     c34:	13 06       	cpc	r1, r19
     c36:	8c f4       	brge	.+34     	; 0xc5a <itoa+0x70>
     c38:	a9 01       	movw	r20, r18
     c3a:	f7 01       	movw	r30, r14
     c3c:	e0 0f       	add	r30, r16
     c3e:	f1 1f       	adc	r31, r17
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	28 81       	ld	r18, Y
     c46:	32 91       	ld	r19, -Z
     c48:	39 93       	st	Y+, r19
     c4a:	20 83       	st	Z, r18
     c4c:	01 96       	adiw	r24, 0x01	; 1
     c4e:	9a 01       	movw	r18, r20
     c50:	28 1b       	sub	r18, r24
     c52:	39 0b       	sbc	r19, r25
     c54:	82 17       	cp	r24, r18
     c56:	93 07       	cpc	r25, r19
     c58:	ac f3       	brlt	.-22     	; 0xc44 <itoa+0x5a>
     c5a:	df 91       	pop	r29
     c5c:	cf 91       	pop	r28
     c5e:	1f 91       	pop	r17
     c60:	0f 91       	pop	r16
     c62:	ff 90       	pop	r15
     c64:	ef 90       	pop	r14
     c66:	df 90       	pop	r13
     c68:	cf 90       	pop	r12
     c6a:	08 95       	ret

00000c6c <ssd1306tx_int>:
     c6c:	1f 93       	push	r17
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	00 d0       	rcall	.+0      	; 0xc74 <ssd1306tx_int+0x8>
     c74:	00 d0       	rcall	.+0      	; 0xc76 <ssd1306tx_int+0xa>
     c76:	1f 92       	push	r1
     c78:	cd b7       	in	r28, 0x3d	; 61
     c7a:	de b7       	in	r29, 0x3e	; 62
     c7c:	88 3e       	cpi	r24, 0xE8	; 232
     c7e:	23 e0       	ldi	r18, 0x03	; 3
     c80:	92 07       	cpc	r25, r18
     c82:	98 f4       	brcc	.+38     	; 0xcaa <ssd1306tx_int+0x3e>
     c84:	be 01       	movw	r22, r28
     c86:	6f 5f       	subi	r22, 0xFF	; 255
     c88:	7f 4f       	sbci	r23, 0xFF	; 255
     c8a:	af df       	rcall	.-162    	; 0xbea <itoa>
     c8c:	89 81       	ldd	r24, Y+1	; 0x01
     c8e:	88 23       	and	r24, r24
     c90:	61 f0       	breq	.+24     	; 0xcaa <ssd1306tx_int+0x3e>
     c92:	10 e0       	ldi	r17, 0x00	; 0
     c94:	76 df       	rcall	.-276    	; 0xb82 <ssd1306tx_char>
     c96:	1f 5f       	subi	r17, 0xFF	; 255
     c98:	e1 e0       	ldi	r30, 0x01	; 1
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	ec 0f       	add	r30, r28
     c9e:	fd 1f       	adc	r31, r29
     ca0:	e1 0f       	add	r30, r17
     ca2:	f1 1d       	adc	r31, r1
     ca4:	80 81       	ld	r24, Z
     ca6:	81 11       	cpse	r24, r1
     ca8:	f5 cf       	rjmp	.-22     	; 0xc94 <ssd1306tx_int+0x28>
     caa:	0f 90       	pop	r0
     cac:	0f 90       	pop	r0
     cae:	0f 90       	pop	r0
     cb0:	0f 90       	pop	r0
     cb2:	0f 90       	pop	r0
     cb4:	df 91       	pop	r29
     cb6:	cf 91       	pop	r28
     cb8:	1f 91       	pop	r17
     cba:	08 95       	ret

00000cbc <ftoa>:
     cbc:	4f 92       	push	r4
     cbe:	5f 92       	push	r5
     cc0:	6f 92       	push	r6
     cc2:	7f 92       	push	r7
     cc4:	8f 92       	push	r8
     cc6:	9f 92       	push	r9
     cc8:	af 92       	push	r10
     cca:	bf 92       	push	r11
     ccc:	cf 92       	push	r12
     cce:	df 92       	push	r13
     cd0:	ef 92       	push	r14
     cd2:	ff 92       	push	r15
     cd4:	0f 93       	push	r16
     cd6:	1f 93       	push	r17
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
     ce0:	2a 97       	sbiw	r28, 0x0a	; 10
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	4b 01       	movw	r8, r22
     cee:	5c 01       	movw	r10, r24
     cf0:	64 2e       	mov	r6, r20
     cf2:	75 2e       	mov	r7, r21
     cf4:	89 01       	movw	r16, r18
     cf6:	7c d1       	rcall	.+760    	; 0xff0 <__fixsfsi>
     cf8:	6b 01       	movw	r12, r22
     cfa:	7c 01       	movw	r14, r24
     cfc:	b8 01       	movw	r22, r16
     cfe:	c6 01       	movw	r24, r12
     d00:	74 df       	rcall	.-280    	; 0xbea <itoa>
     d02:	f8 01       	movw	r30, r16
     d04:	80 81       	ld	r24, Z
     d06:	88 23       	and	r24, r24
     d08:	41 f0       	breq	.+16     	; 0xd1a <ftoa+0x5e>
     d0a:	c8 01       	movw	r24, r16
     d0c:	01 96       	adiw	r24, 0x01	; 1
     d0e:	8c 01       	movw	r16, r24
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	f8 01       	movw	r30, r16
     d14:	20 81       	ld	r18, Z
     d16:	21 11       	cpse	r18, r1
     d18:	fa cf       	rjmp	.-12     	; 0xd0e <ftoa+0x52>
     d1a:	8e e2       	ldi	r24, 0x2E	; 46
     d1c:	f8 01       	movw	r30, r16
     d1e:	81 93       	st	Z+, r24
     d20:	8f 01       	movw	r16, r30
     d22:	8a e0       	ldi	r24, 0x0A	; 10
     d24:	e0 e6       	ldi	r30, 0x60	; 96
     d26:	f0 e0       	ldi	r31, 0x00	; 0
     d28:	de 01       	movw	r26, r28
     d2a:	11 96       	adiw	r26, 0x01	; 1
     d2c:	01 90       	ld	r0, Z+
     d2e:	0d 92       	st	X+, r0
     d30:	8a 95       	dec	r24
     d32:	e1 f7       	brne	.-8      	; 0xd2c <ftoa+0x70>
     d34:	86 2d       	mov	r24, r6
     d36:	97 2d       	mov	r25, r7
     d38:	85 30       	cpi	r24, 0x05	; 5
     d3a:	91 05       	cpc	r25, r1
     d3c:	14 f0       	brlt	.+4      	; 0xd42 <ftoa+0x86>
     d3e:	84 e0       	ldi	r24, 0x04	; 4
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	88 0f       	add	r24, r24
     d44:	99 1f       	adc	r25, r25
     d46:	fe 01       	movw	r30, r28
     d48:	e8 0f       	add	r30, r24
     d4a:	f9 1f       	adc	r31, r25
     d4c:	61 81       	ldd	r22, Z+1	; 0x01
     d4e:	72 81       	ldd	r23, Z+2	; 0x02
     d50:	07 2e       	mov	r0, r23
     d52:	00 0c       	add	r0, r0
     d54:	88 0b       	sbc	r24, r24
     d56:	99 0b       	sbc	r25, r25
     d58:	7e d1       	rcall	.+764    	; 0x1056 <__floatsisf>
     d5a:	2b 01       	movw	r4, r22
     d5c:	3c 01       	movw	r6, r24
     d5e:	b6 01       	movw	r22, r12
     d60:	dd 0c       	add	r13, r13
     d62:	88 0b       	sbc	r24, r24
     d64:	99 0b       	sbc	r25, r25
     d66:	77 d1       	rcall	.+750    	; 0x1056 <__floatsisf>
     d68:	9b 01       	movw	r18, r22
     d6a:	ac 01       	movw	r20, r24
     d6c:	c5 01       	movw	r24, r10
     d6e:	b4 01       	movw	r22, r8
     d70:	6e d0       	rcall	.+220    	; 0xe4e <__subsf3>
     d72:	9b 01       	movw	r18, r22
     d74:	ac 01       	movw	r20, r24
     d76:	c3 01       	movw	r24, r6
     d78:	b2 01       	movw	r22, r4
     d7a:	21 d2       	rcall	.+1090   	; 0x11be <__mulsf3>
     d7c:	39 d1       	rcall	.+626    	; 0xff0 <__fixsfsi>
     d7e:	9b 01       	movw	r18, r22
     d80:	77 23       	and	r23, r23
     d82:	24 f4       	brge	.+8      	; 0xd8c <ftoa+0xd0>
     d84:	22 27       	eor	r18, r18
     d86:	33 27       	eor	r19, r19
     d88:	26 1b       	sub	r18, r22
     d8a:	37 0b       	sbc	r19, r23
     d8c:	b8 01       	movw	r22, r16
     d8e:	c9 01       	movw	r24, r18
     d90:	2c df       	rcall	.-424    	; 0xbea <itoa>
     d92:	2a 96       	adiw	r28, 0x0a	; 10
     d94:	0f b6       	in	r0, 0x3f	; 63
     d96:	f8 94       	cli
     d98:	de bf       	out	0x3e, r29	; 62
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	cd bf       	out	0x3d, r28	; 61
     d9e:	df 91       	pop	r29
     da0:	cf 91       	pop	r28
     da2:	1f 91       	pop	r17
     da4:	0f 91       	pop	r16
     da6:	ff 90       	pop	r15
     da8:	ef 90       	pop	r14
     daa:	df 90       	pop	r13
     dac:	cf 90       	pop	r12
     dae:	bf 90       	pop	r11
     db0:	af 90       	pop	r10
     db2:	9f 90       	pop	r9
     db4:	8f 90       	pop	r8
     db6:	7f 90       	pop	r7
     db8:	6f 90       	pop	r6
     dba:	5f 90       	pop	r5
     dbc:	4f 90       	pop	r4
     dbe:	08 95       	ret

00000dc0 <ssd1306tx_float>:
     dc0:	cf 92       	push	r12
     dc2:	df 92       	push	r13
     dc4:	ef 92       	push	r14
     dc6:	ff 92       	push	r15
     dc8:	0f 93       	push	r16
     dca:	1f 93       	push	r17
     dcc:	cf 93       	push	r28
     dce:	df 93       	push	r29
     dd0:	cd b7       	in	r28, 0x3d	; 61
     dd2:	de b7       	in	r29, 0x3e	; 62
     dd4:	2a 97       	sbiw	r28, 0x0a	; 10
     dd6:	0f b6       	in	r0, 0x3f	; 63
     dd8:	f8 94       	cli
     dda:	de bf       	out	0x3e, r29	; 62
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	cd bf       	out	0x3d, r28	; 61
     de0:	6b 01       	movw	r12, r22
     de2:	7c 01       	movw	r14, r24
     de4:	8a 01       	movw	r16, r20
     de6:	20 e0       	ldi	r18, 0x00	; 0
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	a9 01       	movw	r20, r18
     dec:	95 d0       	rcall	.+298    	; 0xf18 <__cmpsf2>
     dee:	88 23       	and	r24, r24
     df0:	fc f0       	brlt	.+62     	; 0xe30 <ssd1306tx_float+0x70>
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	4a e7       	ldi	r20, 0x7A	; 122
     df8:	54 e4       	ldi	r21, 0x44	; 68
     dfa:	c7 01       	movw	r24, r14
     dfc:	b6 01       	movw	r22, r12
     dfe:	db d1       	rcall	.+950    	; 0x11b6 <__gesf2>
     e00:	88 23       	and	r24, r24
     e02:	b4 f4       	brge	.+44     	; 0xe30 <ssd1306tx_float+0x70>
     e04:	9e 01       	movw	r18, r28
     e06:	2f 5f       	subi	r18, 0xFF	; 255
     e08:	3f 4f       	sbci	r19, 0xFF	; 255
     e0a:	a8 01       	movw	r20, r16
     e0c:	c7 01       	movw	r24, r14
     e0e:	b6 01       	movw	r22, r12
     e10:	55 df       	rcall	.-342    	; 0xcbc <ftoa>
     e12:	89 81       	ldd	r24, Y+1	; 0x01
     e14:	88 23       	and	r24, r24
     e16:	61 f0       	breq	.+24     	; 0xe30 <ssd1306tx_float+0x70>
     e18:	10 e0       	ldi	r17, 0x00	; 0
     e1a:	b3 de       	rcall	.-666    	; 0xb82 <ssd1306tx_char>
     e1c:	1f 5f       	subi	r17, 0xFF	; 255
     e1e:	e1 e0       	ldi	r30, 0x01	; 1
     e20:	f0 e0       	ldi	r31, 0x00	; 0
     e22:	ec 0f       	add	r30, r28
     e24:	fd 1f       	adc	r31, r29
     e26:	e1 0f       	add	r30, r17
     e28:	f1 1d       	adc	r31, r1
     e2a:	80 81       	ld	r24, Z
     e2c:	81 11       	cpse	r24, r1
     e2e:	f5 cf       	rjmp	.-22     	; 0xe1a <ssd1306tx_float+0x5a>
     e30:	2a 96       	adiw	r28, 0x0a	; 10
     e32:	0f b6       	in	r0, 0x3f	; 63
     e34:	f8 94       	cli
     e36:	de bf       	out	0x3e, r29	; 62
     e38:	0f be       	out	0x3f, r0	; 63
     e3a:	cd bf       	out	0x3d, r28	; 61
     e3c:	df 91       	pop	r29
     e3e:	cf 91       	pop	r28
     e40:	1f 91       	pop	r17
     e42:	0f 91       	pop	r16
     e44:	ff 90       	pop	r15
     e46:	ef 90       	pop	r14
     e48:	df 90       	pop	r13
     e4a:	cf 90       	pop	r12
     e4c:	08 95       	ret

00000e4e <__subsf3>:
     e4e:	50 58       	subi	r21, 0x80	; 128

00000e50 <__addsf3>:
     e50:	bb 27       	eor	r27, r27
     e52:	aa 27       	eor	r26, r26
     e54:	0e d0       	rcall	.+28     	; 0xe72 <__addsf3x>
     e56:	75 c1       	rjmp	.+746    	; 0x1142 <__fp_round>
     e58:	66 d1       	rcall	.+716    	; 0x1126 <__fp_pscA>
     e5a:	30 f0       	brcs	.+12     	; 0xe68 <__addsf3+0x18>
     e5c:	6b d1       	rcall	.+726    	; 0x1134 <__fp_pscB>
     e5e:	20 f0       	brcs	.+8      	; 0xe68 <__addsf3+0x18>
     e60:	31 f4       	brne	.+12     	; 0xe6e <__addsf3+0x1e>
     e62:	9f 3f       	cpi	r25, 0xFF	; 255
     e64:	11 f4       	brne	.+4      	; 0xe6a <__addsf3+0x1a>
     e66:	1e f4       	brtc	.+6      	; 0xe6e <__addsf3+0x1e>
     e68:	5b c1       	rjmp	.+694    	; 0x1120 <__fp_nan>
     e6a:	0e f4       	brtc	.+2      	; 0xe6e <__addsf3+0x1e>
     e6c:	e0 95       	com	r30
     e6e:	e7 fb       	bst	r30, 7
     e70:	51 c1       	rjmp	.+674    	; 0x1114 <__fp_inf>

00000e72 <__addsf3x>:
     e72:	e9 2f       	mov	r30, r25
     e74:	77 d1       	rcall	.+750    	; 0x1164 <__fp_split3>
     e76:	80 f3       	brcs	.-32     	; 0xe58 <__addsf3+0x8>
     e78:	ba 17       	cp	r27, r26
     e7a:	62 07       	cpc	r22, r18
     e7c:	73 07       	cpc	r23, r19
     e7e:	84 07       	cpc	r24, r20
     e80:	95 07       	cpc	r25, r21
     e82:	18 f0       	brcs	.+6      	; 0xe8a <__addsf3x+0x18>
     e84:	71 f4       	brne	.+28     	; 0xea2 <__addsf3x+0x30>
     e86:	9e f5       	brtc	.+102    	; 0xeee <__addsf3x+0x7c>
     e88:	8f c1       	rjmp	.+798    	; 0x11a8 <__fp_zero>
     e8a:	0e f4       	brtc	.+2      	; 0xe8e <__addsf3x+0x1c>
     e8c:	e0 95       	com	r30
     e8e:	0b 2e       	mov	r0, r27
     e90:	ba 2f       	mov	r27, r26
     e92:	a0 2d       	mov	r26, r0
     e94:	0b 01       	movw	r0, r22
     e96:	b9 01       	movw	r22, r18
     e98:	90 01       	movw	r18, r0
     e9a:	0c 01       	movw	r0, r24
     e9c:	ca 01       	movw	r24, r20
     e9e:	a0 01       	movw	r20, r0
     ea0:	11 24       	eor	r1, r1
     ea2:	ff 27       	eor	r31, r31
     ea4:	59 1b       	sub	r21, r25
     ea6:	99 f0       	breq	.+38     	; 0xece <__addsf3x+0x5c>
     ea8:	59 3f       	cpi	r21, 0xF9	; 249
     eaa:	50 f4       	brcc	.+20     	; 0xec0 <__addsf3x+0x4e>
     eac:	50 3e       	cpi	r21, 0xE0	; 224
     eae:	68 f1       	brcs	.+90     	; 0xf0a <__addsf3x+0x98>
     eb0:	1a 16       	cp	r1, r26
     eb2:	f0 40       	sbci	r31, 0x00	; 0
     eb4:	a2 2f       	mov	r26, r18
     eb6:	23 2f       	mov	r18, r19
     eb8:	34 2f       	mov	r19, r20
     eba:	44 27       	eor	r20, r20
     ebc:	58 5f       	subi	r21, 0xF8	; 248
     ebe:	f3 cf       	rjmp	.-26     	; 0xea6 <__addsf3x+0x34>
     ec0:	46 95       	lsr	r20
     ec2:	37 95       	ror	r19
     ec4:	27 95       	ror	r18
     ec6:	a7 95       	ror	r26
     ec8:	f0 40       	sbci	r31, 0x00	; 0
     eca:	53 95       	inc	r21
     ecc:	c9 f7       	brne	.-14     	; 0xec0 <__addsf3x+0x4e>
     ece:	7e f4       	brtc	.+30     	; 0xeee <__addsf3x+0x7c>
     ed0:	1f 16       	cp	r1, r31
     ed2:	ba 0b       	sbc	r27, r26
     ed4:	62 0b       	sbc	r22, r18
     ed6:	73 0b       	sbc	r23, r19
     ed8:	84 0b       	sbc	r24, r20
     eda:	ba f0       	brmi	.+46     	; 0xf0a <__addsf3x+0x98>
     edc:	91 50       	subi	r25, 0x01	; 1
     ede:	a1 f0       	breq	.+40     	; 0xf08 <__addsf3x+0x96>
     ee0:	ff 0f       	add	r31, r31
     ee2:	bb 1f       	adc	r27, r27
     ee4:	66 1f       	adc	r22, r22
     ee6:	77 1f       	adc	r23, r23
     ee8:	88 1f       	adc	r24, r24
     eea:	c2 f7       	brpl	.-16     	; 0xedc <__addsf3x+0x6a>
     eec:	0e c0       	rjmp	.+28     	; 0xf0a <__addsf3x+0x98>
     eee:	ba 0f       	add	r27, r26
     ef0:	62 1f       	adc	r22, r18
     ef2:	73 1f       	adc	r23, r19
     ef4:	84 1f       	adc	r24, r20
     ef6:	48 f4       	brcc	.+18     	; 0xf0a <__addsf3x+0x98>
     ef8:	87 95       	ror	r24
     efa:	77 95       	ror	r23
     efc:	67 95       	ror	r22
     efe:	b7 95       	ror	r27
     f00:	f7 95       	ror	r31
     f02:	9e 3f       	cpi	r25, 0xFE	; 254
     f04:	08 f0       	brcs	.+2      	; 0xf08 <__addsf3x+0x96>
     f06:	b3 cf       	rjmp	.-154    	; 0xe6e <__addsf3+0x1e>
     f08:	93 95       	inc	r25
     f0a:	88 0f       	add	r24, r24
     f0c:	08 f0       	brcs	.+2      	; 0xf10 <__addsf3x+0x9e>
     f0e:	99 27       	eor	r25, r25
     f10:	ee 0f       	add	r30, r30
     f12:	97 95       	ror	r25
     f14:	87 95       	ror	r24
     f16:	08 95       	ret

00000f18 <__cmpsf2>:
     f18:	d9 d0       	rcall	.+434    	; 0x10cc <__fp_cmp>
     f1a:	08 f4       	brcc	.+2      	; 0xf1e <__cmpsf2+0x6>
     f1c:	81 e0       	ldi	r24, 0x01	; 1
     f1e:	08 95       	ret

00000f20 <__divsf3>:
     f20:	0c d0       	rcall	.+24     	; 0xf3a <__divsf3x>
     f22:	0f c1       	rjmp	.+542    	; 0x1142 <__fp_round>
     f24:	07 d1       	rcall	.+526    	; 0x1134 <__fp_pscB>
     f26:	40 f0       	brcs	.+16     	; 0xf38 <__divsf3+0x18>
     f28:	fe d0       	rcall	.+508    	; 0x1126 <__fp_pscA>
     f2a:	30 f0       	brcs	.+12     	; 0xf38 <__divsf3+0x18>
     f2c:	21 f4       	brne	.+8      	; 0xf36 <__divsf3+0x16>
     f2e:	5f 3f       	cpi	r21, 0xFF	; 255
     f30:	19 f0       	breq	.+6      	; 0xf38 <__divsf3+0x18>
     f32:	f0 c0       	rjmp	.+480    	; 0x1114 <__fp_inf>
     f34:	51 11       	cpse	r21, r1
     f36:	39 c1       	rjmp	.+626    	; 0x11aa <__fp_szero>
     f38:	f3 c0       	rjmp	.+486    	; 0x1120 <__fp_nan>

00000f3a <__divsf3x>:
     f3a:	14 d1       	rcall	.+552    	; 0x1164 <__fp_split3>
     f3c:	98 f3       	brcs	.-26     	; 0xf24 <__divsf3+0x4>

00000f3e <__divsf3_pse>:
     f3e:	99 23       	and	r25, r25
     f40:	c9 f3       	breq	.-14     	; 0xf34 <__divsf3+0x14>
     f42:	55 23       	and	r21, r21
     f44:	b1 f3       	breq	.-20     	; 0xf32 <__divsf3+0x12>
     f46:	95 1b       	sub	r25, r21
     f48:	55 0b       	sbc	r21, r21
     f4a:	bb 27       	eor	r27, r27
     f4c:	aa 27       	eor	r26, r26
     f4e:	62 17       	cp	r22, r18
     f50:	73 07       	cpc	r23, r19
     f52:	84 07       	cpc	r24, r20
     f54:	38 f0       	brcs	.+14     	; 0xf64 <__divsf3_pse+0x26>
     f56:	9f 5f       	subi	r25, 0xFF	; 255
     f58:	5f 4f       	sbci	r21, 0xFF	; 255
     f5a:	22 0f       	add	r18, r18
     f5c:	33 1f       	adc	r19, r19
     f5e:	44 1f       	adc	r20, r20
     f60:	aa 1f       	adc	r26, r26
     f62:	a9 f3       	breq	.-22     	; 0xf4e <__divsf3_pse+0x10>
     f64:	33 d0       	rcall	.+102    	; 0xfcc <__divsf3_pse+0x8e>
     f66:	0e 2e       	mov	r0, r30
     f68:	3a f0       	brmi	.+14     	; 0xf78 <__divsf3_pse+0x3a>
     f6a:	e0 e8       	ldi	r30, 0x80	; 128
     f6c:	30 d0       	rcall	.+96     	; 0xfce <__divsf3_pse+0x90>
     f6e:	91 50       	subi	r25, 0x01	; 1
     f70:	50 40       	sbci	r21, 0x00	; 0
     f72:	e6 95       	lsr	r30
     f74:	00 1c       	adc	r0, r0
     f76:	ca f7       	brpl	.-14     	; 0xf6a <__divsf3_pse+0x2c>
     f78:	29 d0       	rcall	.+82     	; 0xfcc <__divsf3_pse+0x8e>
     f7a:	fe 2f       	mov	r31, r30
     f7c:	27 d0       	rcall	.+78     	; 0xfcc <__divsf3_pse+0x8e>
     f7e:	66 0f       	add	r22, r22
     f80:	77 1f       	adc	r23, r23
     f82:	88 1f       	adc	r24, r24
     f84:	bb 1f       	adc	r27, r27
     f86:	26 17       	cp	r18, r22
     f88:	37 07       	cpc	r19, r23
     f8a:	48 07       	cpc	r20, r24
     f8c:	ab 07       	cpc	r26, r27
     f8e:	b0 e8       	ldi	r27, 0x80	; 128
     f90:	09 f0       	breq	.+2      	; 0xf94 <__divsf3_pse+0x56>
     f92:	bb 0b       	sbc	r27, r27
     f94:	80 2d       	mov	r24, r0
     f96:	bf 01       	movw	r22, r30
     f98:	ff 27       	eor	r31, r31
     f9a:	93 58       	subi	r25, 0x83	; 131
     f9c:	5f 4f       	sbci	r21, 0xFF	; 255
     f9e:	2a f0       	brmi	.+10     	; 0xfaa <__divsf3_pse+0x6c>
     fa0:	9e 3f       	cpi	r25, 0xFE	; 254
     fa2:	51 05       	cpc	r21, r1
     fa4:	68 f0       	brcs	.+26     	; 0xfc0 <__divsf3_pse+0x82>
     fa6:	b6 c0       	rjmp	.+364    	; 0x1114 <__fp_inf>
     fa8:	00 c1       	rjmp	.+512    	; 0x11aa <__fp_szero>
     faa:	5f 3f       	cpi	r21, 0xFF	; 255
     fac:	ec f3       	brlt	.-6      	; 0xfa8 <__divsf3_pse+0x6a>
     fae:	98 3e       	cpi	r25, 0xE8	; 232
     fb0:	dc f3       	brlt	.-10     	; 0xfa8 <__divsf3_pse+0x6a>
     fb2:	86 95       	lsr	r24
     fb4:	77 95       	ror	r23
     fb6:	67 95       	ror	r22
     fb8:	b7 95       	ror	r27
     fba:	f7 95       	ror	r31
     fbc:	9f 5f       	subi	r25, 0xFF	; 255
     fbe:	c9 f7       	brne	.-14     	; 0xfb2 <__divsf3_pse+0x74>
     fc0:	88 0f       	add	r24, r24
     fc2:	91 1d       	adc	r25, r1
     fc4:	96 95       	lsr	r25
     fc6:	87 95       	ror	r24
     fc8:	97 f9       	bld	r25, 7
     fca:	08 95       	ret
     fcc:	e1 e0       	ldi	r30, 0x01	; 1
     fce:	66 0f       	add	r22, r22
     fd0:	77 1f       	adc	r23, r23
     fd2:	88 1f       	adc	r24, r24
     fd4:	bb 1f       	adc	r27, r27
     fd6:	62 17       	cp	r22, r18
     fd8:	73 07       	cpc	r23, r19
     fda:	84 07       	cpc	r24, r20
     fdc:	ba 07       	cpc	r27, r26
     fde:	20 f0       	brcs	.+8      	; 0xfe8 <__divsf3_pse+0xaa>
     fe0:	62 1b       	sub	r22, r18
     fe2:	73 0b       	sbc	r23, r19
     fe4:	84 0b       	sbc	r24, r20
     fe6:	ba 0b       	sbc	r27, r26
     fe8:	ee 1f       	adc	r30, r30
     fea:	88 f7       	brcc	.-30     	; 0xfce <__divsf3_pse+0x90>
     fec:	e0 95       	com	r30
     fee:	08 95       	ret

00000ff0 <__fixsfsi>:
     ff0:	04 d0       	rcall	.+8      	; 0xffa <__fixunssfsi>
     ff2:	68 94       	set
     ff4:	b1 11       	cpse	r27, r1
     ff6:	d9 c0       	rjmp	.+434    	; 0x11aa <__fp_szero>
     ff8:	08 95       	ret

00000ffa <__fixunssfsi>:
     ffa:	bc d0       	rcall	.+376    	; 0x1174 <__fp_splitA>
     ffc:	88 f0       	brcs	.+34     	; 0x1020 <__fixunssfsi+0x26>
     ffe:	9f 57       	subi	r25, 0x7F	; 127
    1000:	90 f0       	brcs	.+36     	; 0x1026 <__fixunssfsi+0x2c>
    1002:	b9 2f       	mov	r27, r25
    1004:	99 27       	eor	r25, r25
    1006:	b7 51       	subi	r27, 0x17	; 23
    1008:	a0 f0       	brcs	.+40     	; 0x1032 <__fixunssfsi+0x38>
    100a:	d1 f0       	breq	.+52     	; 0x1040 <__fixunssfsi+0x46>
    100c:	66 0f       	add	r22, r22
    100e:	77 1f       	adc	r23, r23
    1010:	88 1f       	adc	r24, r24
    1012:	99 1f       	adc	r25, r25
    1014:	1a f0       	brmi	.+6      	; 0x101c <__fixunssfsi+0x22>
    1016:	ba 95       	dec	r27
    1018:	c9 f7       	brne	.-14     	; 0x100c <__fixunssfsi+0x12>
    101a:	12 c0       	rjmp	.+36     	; 0x1040 <__fixunssfsi+0x46>
    101c:	b1 30       	cpi	r27, 0x01	; 1
    101e:	81 f0       	breq	.+32     	; 0x1040 <__fixunssfsi+0x46>
    1020:	c3 d0       	rcall	.+390    	; 0x11a8 <__fp_zero>
    1022:	b1 e0       	ldi	r27, 0x01	; 1
    1024:	08 95       	ret
    1026:	c0 c0       	rjmp	.+384    	; 0x11a8 <__fp_zero>
    1028:	67 2f       	mov	r22, r23
    102a:	78 2f       	mov	r23, r24
    102c:	88 27       	eor	r24, r24
    102e:	b8 5f       	subi	r27, 0xF8	; 248
    1030:	39 f0       	breq	.+14     	; 0x1040 <__fixunssfsi+0x46>
    1032:	b9 3f       	cpi	r27, 0xF9	; 249
    1034:	cc f3       	brlt	.-14     	; 0x1028 <__fixunssfsi+0x2e>
    1036:	86 95       	lsr	r24
    1038:	77 95       	ror	r23
    103a:	67 95       	ror	r22
    103c:	b3 95       	inc	r27
    103e:	d9 f7       	brne	.-10     	; 0x1036 <__fixunssfsi+0x3c>
    1040:	3e f4       	brtc	.+14     	; 0x1050 <__fixunssfsi+0x56>
    1042:	90 95       	com	r25
    1044:	80 95       	com	r24
    1046:	70 95       	com	r23
    1048:	61 95       	neg	r22
    104a:	7f 4f       	sbci	r23, 0xFF	; 255
    104c:	8f 4f       	sbci	r24, 0xFF	; 255
    104e:	9f 4f       	sbci	r25, 0xFF	; 255
    1050:	08 95       	ret

00001052 <__floatunsisf>:
    1052:	e8 94       	clt
    1054:	09 c0       	rjmp	.+18     	; 0x1068 <__floatsisf+0x12>

00001056 <__floatsisf>:
    1056:	97 fb       	bst	r25, 7
    1058:	3e f4       	brtc	.+14     	; 0x1068 <__floatsisf+0x12>
    105a:	90 95       	com	r25
    105c:	80 95       	com	r24
    105e:	70 95       	com	r23
    1060:	61 95       	neg	r22
    1062:	7f 4f       	sbci	r23, 0xFF	; 255
    1064:	8f 4f       	sbci	r24, 0xFF	; 255
    1066:	9f 4f       	sbci	r25, 0xFF	; 255
    1068:	99 23       	and	r25, r25
    106a:	a9 f0       	breq	.+42     	; 0x1096 <__floatsisf+0x40>
    106c:	f9 2f       	mov	r31, r25
    106e:	96 e9       	ldi	r25, 0x96	; 150
    1070:	bb 27       	eor	r27, r27
    1072:	93 95       	inc	r25
    1074:	f6 95       	lsr	r31
    1076:	87 95       	ror	r24
    1078:	77 95       	ror	r23
    107a:	67 95       	ror	r22
    107c:	b7 95       	ror	r27
    107e:	f1 11       	cpse	r31, r1
    1080:	f8 cf       	rjmp	.-16     	; 0x1072 <__floatsisf+0x1c>
    1082:	fa f4       	brpl	.+62     	; 0x10c2 <__floatsisf+0x6c>
    1084:	bb 0f       	add	r27, r27
    1086:	11 f4       	brne	.+4      	; 0x108c <__floatsisf+0x36>
    1088:	60 ff       	sbrs	r22, 0
    108a:	1b c0       	rjmp	.+54     	; 0x10c2 <__floatsisf+0x6c>
    108c:	6f 5f       	subi	r22, 0xFF	; 255
    108e:	7f 4f       	sbci	r23, 0xFF	; 255
    1090:	8f 4f       	sbci	r24, 0xFF	; 255
    1092:	9f 4f       	sbci	r25, 0xFF	; 255
    1094:	16 c0       	rjmp	.+44     	; 0x10c2 <__floatsisf+0x6c>
    1096:	88 23       	and	r24, r24
    1098:	11 f0       	breq	.+4      	; 0x109e <__floatsisf+0x48>
    109a:	96 e9       	ldi	r25, 0x96	; 150
    109c:	11 c0       	rjmp	.+34     	; 0x10c0 <__floatsisf+0x6a>
    109e:	77 23       	and	r23, r23
    10a0:	21 f0       	breq	.+8      	; 0x10aa <__floatsisf+0x54>
    10a2:	9e e8       	ldi	r25, 0x8E	; 142
    10a4:	87 2f       	mov	r24, r23
    10a6:	76 2f       	mov	r23, r22
    10a8:	05 c0       	rjmp	.+10     	; 0x10b4 <__floatsisf+0x5e>
    10aa:	66 23       	and	r22, r22
    10ac:	71 f0       	breq	.+28     	; 0x10ca <__floatsisf+0x74>
    10ae:	96 e8       	ldi	r25, 0x86	; 134
    10b0:	86 2f       	mov	r24, r22
    10b2:	70 e0       	ldi	r23, 0x00	; 0
    10b4:	60 e0       	ldi	r22, 0x00	; 0
    10b6:	2a f0       	brmi	.+10     	; 0x10c2 <__floatsisf+0x6c>
    10b8:	9a 95       	dec	r25
    10ba:	66 0f       	add	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	88 1f       	adc	r24, r24
    10c0:	da f7       	brpl	.-10     	; 0x10b8 <__floatsisf+0x62>
    10c2:	88 0f       	add	r24, r24
    10c4:	96 95       	lsr	r25
    10c6:	87 95       	ror	r24
    10c8:	97 f9       	bld	r25, 7
    10ca:	08 95       	ret

000010cc <__fp_cmp>:
    10cc:	99 0f       	add	r25, r25
    10ce:	00 08       	sbc	r0, r0
    10d0:	55 0f       	add	r21, r21
    10d2:	aa 0b       	sbc	r26, r26
    10d4:	e0 e8       	ldi	r30, 0x80	; 128
    10d6:	fe ef       	ldi	r31, 0xFE	; 254
    10d8:	16 16       	cp	r1, r22
    10da:	17 06       	cpc	r1, r23
    10dc:	e8 07       	cpc	r30, r24
    10de:	f9 07       	cpc	r31, r25
    10e0:	c0 f0       	brcs	.+48     	; 0x1112 <__fp_cmp+0x46>
    10e2:	12 16       	cp	r1, r18
    10e4:	13 06       	cpc	r1, r19
    10e6:	e4 07       	cpc	r30, r20
    10e8:	f5 07       	cpc	r31, r21
    10ea:	98 f0       	brcs	.+38     	; 0x1112 <__fp_cmp+0x46>
    10ec:	62 1b       	sub	r22, r18
    10ee:	73 0b       	sbc	r23, r19
    10f0:	84 0b       	sbc	r24, r20
    10f2:	95 0b       	sbc	r25, r21
    10f4:	39 f4       	brne	.+14     	; 0x1104 <__fp_cmp+0x38>
    10f6:	0a 26       	eor	r0, r26
    10f8:	61 f0       	breq	.+24     	; 0x1112 <__fp_cmp+0x46>
    10fa:	23 2b       	or	r18, r19
    10fc:	24 2b       	or	r18, r20
    10fe:	25 2b       	or	r18, r21
    1100:	21 f4       	brne	.+8      	; 0x110a <__fp_cmp+0x3e>
    1102:	08 95       	ret
    1104:	0a 26       	eor	r0, r26
    1106:	09 f4       	brne	.+2      	; 0x110a <__fp_cmp+0x3e>
    1108:	a1 40       	sbci	r26, 0x01	; 1
    110a:	a6 95       	lsr	r26
    110c:	8f ef       	ldi	r24, 0xFF	; 255
    110e:	81 1d       	adc	r24, r1
    1110:	81 1d       	adc	r24, r1
    1112:	08 95       	ret

00001114 <__fp_inf>:
    1114:	97 f9       	bld	r25, 7
    1116:	9f 67       	ori	r25, 0x7F	; 127
    1118:	80 e8       	ldi	r24, 0x80	; 128
    111a:	70 e0       	ldi	r23, 0x00	; 0
    111c:	60 e0       	ldi	r22, 0x00	; 0
    111e:	08 95       	ret

00001120 <__fp_nan>:
    1120:	9f ef       	ldi	r25, 0xFF	; 255
    1122:	80 ec       	ldi	r24, 0xC0	; 192
    1124:	08 95       	ret

00001126 <__fp_pscA>:
    1126:	00 24       	eor	r0, r0
    1128:	0a 94       	dec	r0
    112a:	16 16       	cp	r1, r22
    112c:	17 06       	cpc	r1, r23
    112e:	18 06       	cpc	r1, r24
    1130:	09 06       	cpc	r0, r25
    1132:	08 95       	ret

00001134 <__fp_pscB>:
    1134:	00 24       	eor	r0, r0
    1136:	0a 94       	dec	r0
    1138:	12 16       	cp	r1, r18
    113a:	13 06       	cpc	r1, r19
    113c:	14 06       	cpc	r1, r20
    113e:	05 06       	cpc	r0, r21
    1140:	08 95       	ret

00001142 <__fp_round>:
    1142:	09 2e       	mov	r0, r25
    1144:	03 94       	inc	r0
    1146:	00 0c       	add	r0, r0
    1148:	11 f4       	brne	.+4      	; 0x114e <__fp_round+0xc>
    114a:	88 23       	and	r24, r24
    114c:	52 f0       	brmi	.+20     	; 0x1162 <__fp_round+0x20>
    114e:	bb 0f       	add	r27, r27
    1150:	40 f4       	brcc	.+16     	; 0x1162 <__fp_round+0x20>
    1152:	bf 2b       	or	r27, r31
    1154:	11 f4       	brne	.+4      	; 0x115a <__fp_round+0x18>
    1156:	60 ff       	sbrs	r22, 0
    1158:	04 c0       	rjmp	.+8      	; 0x1162 <__fp_round+0x20>
    115a:	6f 5f       	subi	r22, 0xFF	; 255
    115c:	7f 4f       	sbci	r23, 0xFF	; 255
    115e:	8f 4f       	sbci	r24, 0xFF	; 255
    1160:	9f 4f       	sbci	r25, 0xFF	; 255
    1162:	08 95       	ret

00001164 <__fp_split3>:
    1164:	57 fd       	sbrc	r21, 7
    1166:	90 58       	subi	r25, 0x80	; 128
    1168:	44 0f       	add	r20, r20
    116a:	55 1f       	adc	r21, r21
    116c:	59 f0       	breq	.+22     	; 0x1184 <__fp_splitA+0x10>
    116e:	5f 3f       	cpi	r21, 0xFF	; 255
    1170:	71 f0       	breq	.+28     	; 0x118e <__fp_splitA+0x1a>
    1172:	47 95       	ror	r20

00001174 <__fp_splitA>:
    1174:	88 0f       	add	r24, r24
    1176:	97 fb       	bst	r25, 7
    1178:	99 1f       	adc	r25, r25
    117a:	61 f0       	breq	.+24     	; 0x1194 <__fp_splitA+0x20>
    117c:	9f 3f       	cpi	r25, 0xFF	; 255
    117e:	79 f0       	breq	.+30     	; 0x119e <__fp_splitA+0x2a>
    1180:	87 95       	ror	r24
    1182:	08 95       	ret
    1184:	12 16       	cp	r1, r18
    1186:	13 06       	cpc	r1, r19
    1188:	14 06       	cpc	r1, r20
    118a:	55 1f       	adc	r21, r21
    118c:	f2 cf       	rjmp	.-28     	; 0x1172 <__fp_split3+0xe>
    118e:	46 95       	lsr	r20
    1190:	f1 df       	rcall	.-30     	; 0x1174 <__fp_splitA>
    1192:	08 c0       	rjmp	.+16     	; 0x11a4 <__fp_splitA+0x30>
    1194:	16 16       	cp	r1, r22
    1196:	17 06       	cpc	r1, r23
    1198:	18 06       	cpc	r1, r24
    119a:	99 1f       	adc	r25, r25
    119c:	f1 cf       	rjmp	.-30     	; 0x1180 <__fp_splitA+0xc>
    119e:	86 95       	lsr	r24
    11a0:	71 05       	cpc	r23, r1
    11a2:	61 05       	cpc	r22, r1
    11a4:	08 94       	sec
    11a6:	08 95       	ret

000011a8 <__fp_zero>:
    11a8:	e8 94       	clt

000011aa <__fp_szero>:
    11aa:	bb 27       	eor	r27, r27
    11ac:	66 27       	eor	r22, r22
    11ae:	77 27       	eor	r23, r23
    11b0:	cb 01       	movw	r24, r22
    11b2:	97 f9       	bld	r25, 7
    11b4:	08 95       	ret

000011b6 <__gesf2>:
    11b6:	8a df       	rcall	.-236    	; 0x10cc <__fp_cmp>
    11b8:	08 f4       	brcc	.+2      	; 0x11bc <__gesf2+0x6>
    11ba:	8f ef       	ldi	r24, 0xFF	; 255
    11bc:	08 95       	ret

000011be <__mulsf3>:
    11be:	0a d0       	rcall	.+20     	; 0x11d4 <__mulsf3x>
    11c0:	c0 cf       	rjmp	.-128    	; 0x1142 <__fp_round>
    11c2:	b1 df       	rcall	.-158    	; 0x1126 <__fp_pscA>
    11c4:	28 f0       	brcs	.+10     	; 0x11d0 <__mulsf3+0x12>
    11c6:	b6 df       	rcall	.-148    	; 0x1134 <__fp_pscB>
    11c8:	18 f0       	brcs	.+6      	; 0x11d0 <__mulsf3+0x12>
    11ca:	95 23       	and	r25, r21
    11cc:	09 f0       	breq	.+2      	; 0x11d0 <__mulsf3+0x12>
    11ce:	a2 cf       	rjmp	.-188    	; 0x1114 <__fp_inf>
    11d0:	a7 cf       	rjmp	.-178    	; 0x1120 <__fp_nan>
    11d2:	eb cf       	rjmp	.-42     	; 0x11aa <__fp_szero>

000011d4 <__mulsf3x>:
    11d4:	c7 df       	rcall	.-114    	; 0x1164 <__fp_split3>
    11d6:	a8 f3       	brcs	.-22     	; 0x11c2 <__mulsf3+0x4>

000011d8 <__mulsf3_pse>:
    11d8:	99 23       	and	r25, r25
    11da:	d9 f3       	breq	.-10     	; 0x11d2 <__mulsf3+0x14>
    11dc:	55 23       	and	r21, r21
    11de:	c9 f3       	breq	.-14     	; 0x11d2 <__mulsf3+0x14>
    11e0:	95 0f       	add	r25, r21
    11e2:	50 e0       	ldi	r21, 0x00	; 0
    11e4:	55 1f       	adc	r21, r21
    11e6:	aa 27       	eor	r26, r26
    11e8:	ee 27       	eor	r30, r30
    11ea:	ff 27       	eor	r31, r31
    11ec:	bb 27       	eor	r27, r27
    11ee:	00 24       	eor	r0, r0
    11f0:	08 94       	sec
    11f2:	67 95       	ror	r22
    11f4:	20 f4       	brcc	.+8      	; 0x11fe <__mulsf3_pse+0x26>
    11f6:	e2 0f       	add	r30, r18
    11f8:	f3 1f       	adc	r31, r19
    11fa:	b4 1f       	adc	r27, r20
    11fc:	0a 1e       	adc	r0, r26
    11fe:	22 0f       	add	r18, r18
    1200:	33 1f       	adc	r19, r19
    1202:	44 1f       	adc	r20, r20
    1204:	aa 1f       	adc	r26, r26
    1206:	66 95       	lsr	r22
    1208:	a9 f7       	brne	.-22     	; 0x11f4 <__mulsf3_pse+0x1c>
    120a:	77 95       	ror	r23
    120c:	30 f4       	brcc	.+12     	; 0x121a <__mulsf3_pse+0x42>
    120e:	f3 0f       	add	r31, r19
    1210:	b4 1f       	adc	r27, r20
    1212:	0a 1e       	adc	r0, r26
    1214:	12 1e       	adc	r1, r18
    1216:	08 f4       	brcc	.+2      	; 0x121a <__mulsf3_pse+0x42>
    1218:	63 95       	inc	r22
    121a:	33 0f       	add	r19, r19
    121c:	44 1f       	adc	r20, r20
    121e:	aa 1f       	adc	r26, r26
    1220:	22 1f       	adc	r18, r18
    1222:	76 95       	lsr	r23
    1224:	99 f7       	brne	.-26     	; 0x120c <__mulsf3_pse+0x34>
    1226:	87 95       	ror	r24
    1228:	20 f4       	brcc	.+8      	; 0x1232 <__mulsf3_pse+0x5a>
    122a:	b4 0f       	add	r27, r20
    122c:	0a 1e       	adc	r0, r26
    122e:	12 1e       	adc	r1, r18
    1230:	63 1f       	adc	r22, r19
    1232:	44 0f       	add	r20, r20
    1234:	aa 1f       	adc	r26, r26
    1236:	22 1f       	adc	r18, r18
    1238:	33 1f       	adc	r19, r19
    123a:	86 95       	lsr	r24
    123c:	a9 f7       	brne	.-22     	; 0x1228 <__mulsf3_pse+0x50>
    123e:	86 2f       	mov	r24, r22
    1240:	71 2d       	mov	r23, r1
    1242:	60 2d       	mov	r22, r0
    1244:	11 24       	eor	r1, r1
    1246:	9f 57       	subi	r25, 0x7F	; 127
    1248:	50 40       	sbci	r21, 0x00	; 0
    124a:	8a f0       	brmi	.+34     	; 0x126e <__mulsf3_pse+0x96>
    124c:	e1 f0       	breq	.+56     	; 0x1286 <__mulsf3_pse+0xae>
    124e:	88 23       	and	r24, r24
    1250:	4a f0       	brmi	.+18     	; 0x1264 <__mulsf3_pse+0x8c>
    1252:	ee 0f       	add	r30, r30
    1254:	ff 1f       	adc	r31, r31
    1256:	bb 1f       	adc	r27, r27
    1258:	66 1f       	adc	r22, r22
    125a:	77 1f       	adc	r23, r23
    125c:	88 1f       	adc	r24, r24
    125e:	91 50       	subi	r25, 0x01	; 1
    1260:	50 40       	sbci	r21, 0x00	; 0
    1262:	a9 f7       	brne	.-22     	; 0x124e <__mulsf3_pse+0x76>
    1264:	9e 3f       	cpi	r25, 0xFE	; 254
    1266:	51 05       	cpc	r21, r1
    1268:	70 f0       	brcs	.+28     	; 0x1286 <__mulsf3_pse+0xae>
    126a:	54 cf       	rjmp	.-344    	; 0x1114 <__fp_inf>
    126c:	9e cf       	rjmp	.-196    	; 0x11aa <__fp_szero>
    126e:	5f 3f       	cpi	r21, 0xFF	; 255
    1270:	ec f3       	brlt	.-6      	; 0x126c <__mulsf3_pse+0x94>
    1272:	98 3e       	cpi	r25, 0xE8	; 232
    1274:	dc f3       	brlt	.-10     	; 0x126c <__mulsf3_pse+0x94>
    1276:	86 95       	lsr	r24
    1278:	77 95       	ror	r23
    127a:	67 95       	ror	r22
    127c:	b7 95       	ror	r27
    127e:	f7 95       	ror	r31
    1280:	e7 95       	ror	r30
    1282:	9f 5f       	subi	r25, 0xFF	; 255
    1284:	c1 f7       	brne	.-16     	; 0x1276 <__mulsf3_pse+0x9e>
    1286:	fe 2b       	or	r31, r30
    1288:	88 0f       	add	r24, r24
    128a:	91 1d       	adc	r25, r1
    128c:	96 95       	lsr	r25
    128e:	87 95       	ror	r24
    1290:	97 f9       	bld	r25, 7
    1292:	08 95       	ret

00001294 <__divmodhi4>:
    1294:	97 fb       	bst	r25, 7
    1296:	07 2e       	mov	r0, r23
    1298:	16 f4       	brtc	.+4      	; 0x129e <__divmodhi4+0xa>
    129a:	00 94       	com	r0
    129c:	06 d0       	rcall	.+12     	; 0x12aa <__divmodhi4_neg1>
    129e:	77 fd       	sbrc	r23, 7
    12a0:	08 d0       	rcall	.+16     	; 0x12b2 <__divmodhi4_neg2>
    12a2:	49 d0       	rcall	.+146    	; 0x1336 <__udivmodhi4>
    12a4:	07 fc       	sbrc	r0, 7
    12a6:	05 d0       	rcall	.+10     	; 0x12b2 <__divmodhi4_neg2>
    12a8:	3e f4       	brtc	.+14     	; 0x12b8 <__divmodhi4_exit>

000012aa <__divmodhi4_neg1>:
    12aa:	90 95       	com	r25
    12ac:	81 95       	neg	r24
    12ae:	9f 4f       	sbci	r25, 0xFF	; 255
    12b0:	08 95       	ret

000012b2 <__divmodhi4_neg2>:
    12b2:	70 95       	com	r23
    12b4:	61 95       	neg	r22
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255

000012b8 <__divmodhi4_exit>:
    12b8:	08 95       	ret

000012ba <__udivmodsi4>:
    12ba:	a1 e2       	ldi	r26, 0x21	; 33
    12bc:	1a 2e       	mov	r1, r26
    12be:	aa 1b       	sub	r26, r26
    12c0:	bb 1b       	sub	r27, r27
    12c2:	fd 01       	movw	r30, r26
    12c4:	0d c0       	rjmp	.+26     	; 0x12e0 <__udivmodsi4_ep>

000012c6 <__udivmodsi4_loop>:
    12c6:	aa 1f       	adc	r26, r26
    12c8:	bb 1f       	adc	r27, r27
    12ca:	ee 1f       	adc	r30, r30
    12cc:	ff 1f       	adc	r31, r31
    12ce:	a2 17       	cp	r26, r18
    12d0:	b3 07       	cpc	r27, r19
    12d2:	e4 07       	cpc	r30, r20
    12d4:	f5 07       	cpc	r31, r21
    12d6:	20 f0       	brcs	.+8      	; 0x12e0 <__udivmodsi4_ep>
    12d8:	a2 1b       	sub	r26, r18
    12da:	b3 0b       	sbc	r27, r19
    12dc:	e4 0b       	sbc	r30, r20
    12de:	f5 0b       	sbc	r31, r21

000012e0 <__udivmodsi4_ep>:
    12e0:	66 1f       	adc	r22, r22
    12e2:	77 1f       	adc	r23, r23
    12e4:	88 1f       	adc	r24, r24
    12e6:	99 1f       	adc	r25, r25
    12e8:	1a 94       	dec	r1
    12ea:	69 f7       	brne	.-38     	; 0x12c6 <__udivmodsi4_loop>
    12ec:	60 95       	com	r22
    12ee:	70 95       	com	r23
    12f0:	80 95       	com	r24
    12f2:	90 95       	com	r25
    12f4:	9b 01       	movw	r18, r22
    12f6:	ac 01       	movw	r20, r24
    12f8:	bd 01       	movw	r22, r26
    12fa:	cf 01       	movw	r24, r30
    12fc:	08 95       	ret

000012fe <__divmodsi4>:
    12fe:	05 2e       	mov	r0, r21
    1300:	97 fb       	bst	r25, 7
    1302:	16 f4       	brtc	.+4      	; 0x1308 <__divmodsi4+0xa>
    1304:	00 94       	com	r0
    1306:	0f d0       	rcall	.+30     	; 0x1326 <__negsi2>
    1308:	57 fd       	sbrc	r21, 7
    130a:	05 d0       	rcall	.+10     	; 0x1316 <__divmodsi4_neg2>
    130c:	d6 df       	rcall	.-84     	; 0x12ba <__udivmodsi4>
    130e:	07 fc       	sbrc	r0, 7
    1310:	02 d0       	rcall	.+4      	; 0x1316 <__divmodsi4_neg2>
    1312:	46 f4       	brtc	.+16     	; 0x1324 <__divmodsi4_exit>
    1314:	08 c0       	rjmp	.+16     	; 0x1326 <__negsi2>

00001316 <__divmodsi4_neg2>:
    1316:	50 95       	com	r21
    1318:	40 95       	com	r20
    131a:	30 95       	com	r19
    131c:	21 95       	neg	r18
    131e:	3f 4f       	sbci	r19, 0xFF	; 255
    1320:	4f 4f       	sbci	r20, 0xFF	; 255
    1322:	5f 4f       	sbci	r21, 0xFF	; 255

00001324 <__divmodsi4_exit>:
    1324:	08 95       	ret

00001326 <__negsi2>:
    1326:	90 95       	com	r25
    1328:	80 95       	com	r24
    132a:	70 95       	com	r23
    132c:	61 95       	neg	r22
    132e:	7f 4f       	sbci	r23, 0xFF	; 255
    1330:	8f 4f       	sbci	r24, 0xFF	; 255
    1332:	9f 4f       	sbci	r25, 0xFF	; 255
    1334:	08 95       	ret

00001336 <__udivmodhi4>:
    1336:	aa 1b       	sub	r26, r26
    1338:	bb 1b       	sub	r27, r27
    133a:	51 e1       	ldi	r21, 0x11	; 17
    133c:	07 c0       	rjmp	.+14     	; 0x134c <__udivmodhi4_ep>

0000133e <__udivmodhi4_loop>:
    133e:	aa 1f       	adc	r26, r26
    1340:	bb 1f       	adc	r27, r27
    1342:	a6 17       	cp	r26, r22
    1344:	b7 07       	cpc	r27, r23
    1346:	10 f0       	brcs	.+4      	; 0x134c <__udivmodhi4_ep>
    1348:	a6 1b       	sub	r26, r22
    134a:	b7 0b       	sbc	r27, r23

0000134c <__udivmodhi4_ep>:
    134c:	88 1f       	adc	r24, r24
    134e:	99 1f       	adc	r25, r25
    1350:	5a 95       	dec	r21
    1352:	a9 f7       	brne	.-22     	; 0x133e <__udivmodhi4_loop>
    1354:	80 95       	com	r24
    1356:	90 95       	com	r25
    1358:	bc 01       	movw	r22, r24
    135a:	cd 01       	movw	r24, r26
    135c:	08 95       	ret

0000135e <eeprom_read_byte>:
    135e:	e1 99       	sbic	0x1c, 1	; 28
    1360:	fe cf       	rjmp	.-4      	; 0x135e <eeprom_read_byte>
    1362:	9f bb       	out	0x1f, r25	; 31
    1364:	8e bb       	out	0x1e, r24	; 30
    1366:	e0 9a       	sbi	0x1c, 0	; 28
    1368:	99 27       	eor	r25, r25
    136a:	8d b3       	in	r24, 0x1d	; 29
    136c:	08 95       	ret

0000136e <eeprom_write_byte>:
    136e:	26 2f       	mov	r18, r22

00001370 <eeprom_write_r18>:
    1370:	e1 99       	sbic	0x1c, 1	; 28
    1372:	fe cf       	rjmp	.-4      	; 0x1370 <eeprom_write_r18>
    1374:	1c ba       	out	0x1c, r1	; 28
    1376:	9f bb       	out	0x1f, r25	; 31
    1378:	8e bb       	out	0x1e, r24	; 30
    137a:	2d bb       	out	0x1d, r18	; 29
    137c:	0f b6       	in	r0, 0x3f	; 63
    137e:	f8 94       	cli
    1380:	e2 9a       	sbi	0x1c, 2	; 28
    1382:	e1 9a       	sbi	0x1c, 1	; 28
    1384:	0f be       	out	0x3f, r0	; 63
    1386:	01 96       	adiw	r24, 0x01	; 1
    1388:	08 95       	ret

0000138a <_exit>:
    138a:	f8 94       	cli

0000138c <__stop_program>:
    138c:	ff cf       	rjmp	.-2      	; 0x138c <__stop_program>
